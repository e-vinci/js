{"version":3,"file":"component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-1-json-fr-mdx-c036cfed264a3fde58b7.js","mappings":"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","sources":["webpack://myjscourse/./src/mdx-pages/part1/json.fr.mdx","webpack://myjscourse/./src/templates/mdx-pages.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    br: \"br\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components), {InternalPageMenu, PathViewer, PathViewerItem, InternalPageMenuItem, InternalPageTitle, YoutubeImage} = _components;\n  if (!InternalPageMenu) _missingMdxReference(\"InternalPageMenu\", true);\n  if (!InternalPageMenuItem) _missingMdxReference(\"InternalPageMenuItem\", true);\n  if (!InternalPageTitle) _missingMdxReference(\"InternalPageTitle\", true);\n  if (!PathViewer) _missingMdxReference(\"PathViewer\", true);\n  if (!PathViewerItem) _missingMdxReference(\"PathViewerItem\", true);\n  if (!YoutubeImage) _missingMdxReference(\"YoutubeImage\", true);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"b) Introduction au JSON et persistance des données\"), \"\\n\", React.createElement(InternalPageMenu, null, React.createElement(PathViewer, null, React.createElement(PathViewerItem, {\n    to: \"/\"\n  }, \" web2course \"), React.createElement(PathViewerItem, {\n    to: \"/part1\"\n  }, \" Partie 1 \"), React.createElement(PathViewerItem, {\n    selected: true\n  }, \" b) JSON \")), React.createElement(InternalPageMenuItem, null, \" Le JSON, c'est quoi ? \"), React.createElement(InternalPageMenuItem, null, \" Communication de données en JSON à une API \"), React.createElement(InternalPageMenuItem, null, \" Lecture et sauvegarde de données dans un fichier JSON par une API \"), React.createElement(InternalPageMenuItem, null, \" Exercice 1.7 : Persistance des données \")), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Le JSON, c'est quoi ? \")), \"\\n\", React.createElement(\"div\", {\n    className: \"card card__simple-youtube-container\"\n  }, React.createElement(YoutubeImage, {\n    src: \"https://youtu.be/KR3bt4RBIQI\"\n  })), \"\\n\", React.createElement(_components.p, null, \"Précédemment, nous avons développé notre première RESTful API.\", React.createElement(_components.br), \"\\n\", \"Nous avons implicitement découvert le JSON, notamment lorsque nous avons fait des requêtes vers nos API.\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons maintenant voir ce que permet le JSON, notamment la création de fichiers permettant de sauvegarder des données facilement en JS.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"JSON\"), \" vient de \", React.createElement(_components.strong, null, \"J\"), \"ava\", React.createElement(_components.strong, null, \"S\"), \"cript \", React.createElement(_components.strong, null, \"O\"), \"bject \", React.createElement(_components.strong, null, \"N\"), \"otation.\"), \"\\n\", React.createElement(_components.p, null, \"C'est une syntaxe pour \", React.createElement(_components.strong, null, \"échanger\"), \" et \", React.createElement(_components.strong, null, \"faire persister des données\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Du JSON, c'est du texte en notation JS.\"), \"\\n\", React.createElement(_components.p, null, \"Voici les types de données qui sont valides en JSON :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.code, null, \"string\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.code, null, \"number\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.code, null, \"object\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.code, null, \"array\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.code, null, \"boolean\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, React.createElement(_components.code, null, \"null\"))), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"⚡ Il n'y a donc pas de \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"function\")), \", \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"date\")), \" et \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"undefined\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"Voici un exemple de représentation de données en JSON qui correspond à ce que très souvent une API renvoie, un array d'objets :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"[\\r\\n  {\\r\\n    \\\"email\\\": \\\"raphael@voila.com\\\",\\r\\n    \\\"fullname\\\": \\\"Raphael Baroni\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"email\\\": \\\"jkj@herenqn.com\\\",\\r\\n    \\\"fullname\\\": \\\"JK Roling\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"email\\\": \\\"serena@gmail.com\\\",\\r\\n    \\\"fullname\\\": \\\"Serena Here\\\"\\r\\n  }\\r\\n]\\n\")), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Communication de données en JSON à une API \")), \"\\n\", React.createElement(_components.h2, null, \"Introduction\"), \"\\n\", React.createElement(_components.p, null, \"Dans le tutoriel précédent, nous avons communiqué des données au format JSON :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"soit lors des requêtes via REST Client : nous avons envoyé les données permettant de créer ou modifier une pizza :\"), \"\\n\", React.createElement(_components.li, null, \"soit lors du traitment des requêtes par l'API, afin de créer ou modifier les pizzas et les sauvegarder en mémoire vive (dans un tableau d'objets).\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons maintenant approfondir comment les données au format JSON ont été traitées par l'API.\"), \"\\n\", React.createElement(_components.h2, null, \"Envoi de données d'une API vers un client & sérialisation\"), \"\\n\", React.createElement(_components.p, null, \"Via Express, nous pouvons très facilement convertir un objet JS en JSON afin de l'envoyer vers une application cliente grâce à la méthode \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"res.json()\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"C'est ce que nous appelons de la \", React.createElement(_components.strong, null, \"sérialisation\"), \" de données : nous passons du monde \\\"objets en mémoire\\\" vers du texte (ou des octets) qui va voyager sur un réseau.\"), \"\\n\", React.createElement(_components.p, null, \"Le code actuel de notre RESTful API, renvoyant un array de pizzas au format JSON, est géré automatiquement via :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"res.json(orderedMenu ?? MENU);\\n\")), \"\\n\", React.createElement(_components.p, null, \"Lorsque l'API renvoie \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"MENU\")), \" avec les pizzas par défaut, voici le JSON qui voyage sur le réseau :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"[\\r\\n  {\\r\\n    \\\"id\\\": 1,\\r\\n    \\\"title\\\": \\\"4 fromages\\\",\\r\\n    \\\"content\\\": \\\"Gruyère, Sérac, Appenzel, Gorgonzola, Tomates\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"id\\\": 2,\\r\\n    \\\"title\\\": \\\"Vegan\\\",\\r\\n    \\\"content\\\": \\\"Tomates, Courgettes, Oignons, Aubergines, Poivrons\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"id\\\": 3,\\r\\n    \\\"title\\\": \\\"Vegetarian\\\",\\r\\n    \\\"content\\\": \\\"Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"id\\\": 4,\\r\\n    \\\"title\\\": \\\"Alpage\\\",\\r\\n    \\\"content\\\": \\\"Gruyère, Mozarella, Lardons, Tomates\\\"\\r\\n  },\\r\\n  {\\r\\n    \\\"id\\\": 5,\\r\\n    \\\"title\\\": \\\"Diable\\\",\\r\\n    \\\"content\\\": \\\"Tomates, Mozarella, Chorizo piquant, Jalapenos\\\"\\r\\n  }\\r\\n]\\n\")), \"\\n\", React.createElement(_components.p, null, \"💭 La puissance du JSON peut déjà s'exprimer ici. Mais comment ?\"), \"\\n\", React.createElement(_components.p, null, \"L'API renvoie un array d'objets, des pizzas, au format JSON, qui correspond en fait à un format texte avec des conventions.\", React.createElement(_components.br), \"\\n\", \"Il est donc possible à n'importe quelle application cliente d'utiliser ces données, quelque soit la technologie, le langage utilisé pour développer cette application cliente.\", React.createElement(_components.br), \"\\n\", \"Ainsi, par exemple, une application Android, développée en Java, pourrait consommer cette API pour afficher un menu de pizzas !\"), \"\\n\", React.createElement(_components.h2, null, \"Réception de données d'un client par une API & parsing\"), \"\\n\", React.createElement(_components.p, null, \"Via Express, nous pouvons très facilement convertir du JSON vers un objet JS à l'aide du middleware \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"express.json()\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"C'est ce que nous appelons du \", React.createElement(_components.strong, null, \"parsing\"), \" de données, ou de la \", React.createElement(_components.strong, null, \"désérialisation\"), \" : nous passons du monde texte / JSON (ou des octets) vers des \\\"objets en mémoire\\\".\"), \"\\n\", React.createElement(_components.p, null, \"Le code actuel de notre RESTful API, récupérant les données d'une pizza à créer, est très simple :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\\r\\nconst content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Automatiquement, grâce à Express et au middleware appelé dans \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"apps.js\")), \" (\", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"app.use(express.json());\")), \"), \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"req.body\")), \" contient un objet JS représentant toutes les données JSON qui étaient présentes dans le body de la requête cliente, comme par exemple :\"), \"\\n\", React.createElement(_components.pre, {\n    highlighting: \"5-8\"\n  }, React.createElement(_components.code, {\n    className: \"language-http\"\n  }, \"### Create a pizza\\r\\nPOST {{baseUrl}}/pizzas\\r\\nContent-Type: application/json\\r\\n\\r\\n{\\r\\n    \\\"title\\\":\\\"Magic Green\\\",\\r\\n    \\\"content\\\":\\\"Epinards, Brocolis, Olives vertes, Basilic\\\"\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Il est important de communiquer le \\\"\", React.createElement(_components.strong, null, \"media type\"), \"\\\" (ou \", React.createElement(_components.strong, null, \"MIME type\"), \") dans le corps de la requête : \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"application/json\")), \".\", React.createElement(_components.br), \"\\n\", \"Cela indique à l'application qui est la cible de la requête (l'API dans notre cas) quelle genre d'outil elle devra utiliser pour décoder les données.\", React.createElement(_components.br), \"\\n\", \"Par exemple, il faut faire un traitement différent pour récupérer des données au format JSON que pour récupérer des données directement associées à un fichier image.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Lecture et sauvegarde de données dans un fichier JSON par une API \")), \"\\n\", React.createElement(_components.h2, null, \"Lecture de données se trouvant dans un fichier JSON\"), \"\\n\", React.createElement(_components.p, null, \"La fonction \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"JSON.parse(objectSerialized) \")), \" permet de créer un objet JS à partir d'une \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"string\")), \" contenant des données au format JSON.\"), \"\\n\", React.createElement(_components.p, null, \"Par exemple, voici une fonction, permettant à une application Express de créer un objet JS en lisant des données se trouvant dans un fichier \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \".json\")), \" dont le chemin et nom complet sont indiqués dans le paramètre \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"filePath\")), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"/**\\r\\n * Parse items given in a .json file\\r\\n * @param {String} filePath - path to the .json file\\r\\n * If the file does not exist or it's content cannot be parsed as JSON data,\\r\\n * use the default data.\\r\\n * @param {Array} defaultArray - Content to be used when the .json file does not exists\\r\\n * @returns {Array} : the array that was parsed from the file (or defaultData)\\r\\n */\\r\\nfunction parse(filePath, defaultArray = []) {\\r\\n  if (!fs.existsSync(filePath)) return defaultArray;\\r\\n  const fileData = fs.readFileSync(filePath);\\r\\n  try {\\r\\n    // parse() Throws a SyntaxError exception if the string to parse is not valid JSON.\\r\\n    return JSON.parse(fileData);\\r\\n  } catch (err) {\\r\\n    return defaultArray;\\r\\n  }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Imaginez que plutôt que de lire le menu de pizza à partir d'un array d'objets, on souhaite lire ce menu grâce au contenu d'un fichier contenant du JSON. Voici ce que donnerait l'opération de lecture de toutes les pizzas si le chemin et nom complet du fichier JSON était donné dans la constante \", React.createElement(_components.strong, null, \"jsonDbPath\"), \". :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const jsonDbPath = __dirname + '/../data/pizzas.json';\\r\\n// Read all the pizzas from the menu\\r\\nrouter.get('/', function (req, res) {\\r\\n  console.log('GET /pizzas');\\r\\n  const pizzas = parse(jsonDbPath, DEFAULT_MENU);\\r\\n  res.json(pizzas);\\r\\n});\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Sauvegarde de données dans un fichier JSON\"), \"\\n\", React.createElement(_components.p, null, \"La fonction \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"JSON.stringify(objectToSerialised)\")), \" permet de créer une \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"string\")), \" contenant la représentation JSON de l'objet à sérialiser.\"), \"\\n\", React.createElement(_components.p, null, \"Côté serveur, il est ensuite facile de sauvegarder les données JSON au sein d'un fichier.\"), \"\\n\", React.createElement(_components.p, null, \"Par exemple, voici une fonction permettant à une application Express de sauvegarder au format JSON un objet dans un fichier \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \".json\")), \" dont son chemin et nom complet sont indiqués dans le paramètre \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"filePath\")), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"/**\\r\\n * Serialize the content of an Object within a file\\r\\n * @param {String} filePath - path to the .json file\\r\\n * @param {Array} object - Object to be written within the .json file.\\r\\n * Even if the file exists, its whole content is reset by the given object.\\r\\n */\\r\\nfunction serialize(filePath, object) {\\r\\n  const objectSerialized = JSON.stringify(object);\\r\\n  fs.writeFileSync(filePath, objectSerialized);\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Imaginez que, au sein du router traitant des ressources de type \\\"pizzas\\\", vous passiez la valeur suivante à \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"filePath\")), \" :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const jsonDbPath = __dirname + '/../data/pizzas.json';\\r\\nserialize(jsonDbPath, MENU);\\n\")), \"\\n\", React.createElement(_components.p, null, \"Cela signifie que dans le projet contenant notre API, nous allons sauvegarder le menu des pizzas au format JSON dans le fichier JSON \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/data/pizzas.json\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"Ce fichier est en fait une \", React.createElement(_components.strong, null, \"base de données simplifiée\"), \" !\"), \"\\n\", React.createElement(_components.h2, null, \"Persistance des données : d'une sauvegarde en mémoire vive vers un fichier JSON\"), \"\\n\", React.createElement(_components.p, null, \"Nous allons maintenant réaliser un tutoriel pour rendre les ressources de type \\\"pizzas\\\" persistantes.\", React.createElement(_components.br), \"\\n\", \"Nous allons repartir de l'API créée au tutoriel précédent.\"), \"\\n\", React.createElement(_components.p, null, \"Dans votre repo \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"web2\")), \", veuillez copier / coller le répertoire \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/tutorials/pizzeria/api/basic\")), \" et le renommer en \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/tutorials/pizzeria/api/persistence\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"En cas de souci, vous pouvez télécharger le code du tutoriel précédent ici : \", React.createElement(_components.a, {\n    href: \"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/basic\"\n  }, \"api-basic\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez ouvrir un terminal au niveau de ce répertoire.\"), \"\\n\", React.createElement(_components.p, null, \"Pour la suite du tutoriel, nous considérons que tous les chemins absolus démarrent du répertoire \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/tutorials/pizzeria/api/persistence\")), \" (ou \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/web2/tutorials/pizzeria/api/persistence\")), \" si l'on considère le nom du répertoire du repo).\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez créer un nouveau répertoire \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/utils\")), \". Au sein de ce répertoire, veuillez créer le module \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/utils/json.js\")), \" dans lequel vous allez ajouter ces fonctions :\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"const fs = require('fs');\\r\\n\\r\\n/**\\r\\n * Parse items given in a .json file\\r\\n * @param {String} filePath - path to the .json file\\r\\n * If the file does not exist or it's content cannot be parsed as JSON data,\\r\\n * use the default data.\\r\\n * @param {Array} defaultArray - Content to be used when the .json file does not exists\\r\\n * @returns {Array} : the array that was parsed from the file (or defaultArray)\\r\\n */\\r\\nfunction parse(filePath, defaultArray = []) {\\r\\n  if (!fs.existsSync(filePath)) return defaultArray;\\r\\n  const fileData = fs.readFileSync(filePath);\\r\\n  try {\\r\\n    // parse() Throws a SyntaxError exception if the string to parse is not valid JSON.\\r\\n    return JSON.parse(fileData);\\r\\n  } catch (err) {\\r\\n    return defaultArray;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Serialize the content of an Object within a file\\r\\n * @param {String} filePath - path to the .json file\\r\\n * @param {Array} object - Object to be written within the .json file.\\r\\n * Even if the file exists, its whole content is reset by the given object.\\r\\n */\\r\\nfunction serialize(filePath, object) {\\r\\n  const objectSerialized = JSON.stringify(object);\\r\\n  createPotentialLastDirectory(filePath);\\r\\n  fs.writeFileSync(filePath, objectSerialized);\\r\\n}\\r\\n\\r\\n/**\\r\\n *\\r\\n * @param {String} filePath - path to the .json file\\r\\n */\\r\\nfunction createPotentialLastDirectory(filePath) {\\r\\n  const pathToLastDirectory = filePath.substring(0, filePath.lastIndexOf('/'));\\r\\n\\r\\n  if (fs.existsSync(pathToLastDirectory)) return;\\r\\n\\r\\n  fs.mkdirSync(pathToLastDirectory);\\r\\n}\\r\\n\\r\\nmodule.exports = { parse, serialize };\\n\")), \"\\n\", React.createElement(_components.p, null, \"L'opération de sérialisation des données est faite via la fonction \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"serialize\")), \" de \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/utils/json.js\")), \". Pour se simplifier la vie et ne pas obliger les développeurs à devoir créer manuellement un répertoire qui contiendra la mini DB de pizzas (le fichier \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"pizzas.json\")), \" dans la suite de l'exemple), une fonction a été créée qui s'appelle \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"createPotentialLastDirectory\")), \".\", React.createElement(_components.br), \"\\n\", \"La fonction \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"serialize\")), \" fait appel à cette fonction qui va, si nécessaire, créer le dernier répertoire donné dans le chemin vers le fichier JSON (le répertoire \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/data\")), \" dans la suite de l'exemple).\"), \"\\n\", React.createElement(_components.p, null, \"Il n'est pas intéressant de retenir par coeur le code donné dans \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/utils/json.js\")), \". Par contre, il est important que vous compreniez celui-ci, ce qu'il fait.\"), \"\\n\", React.createElement(_components.p, null, \"A présent, nous allons convertir le code du router de \\\"pizzas\\\" pour rendre les données peristantes.\", React.createElement(_components.br), \"\\n\", \"Voici ce que nous devons faire pour les opérations de :\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"lecture de ressources\"), \" : il suffit de faire appel à la fonction \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"parse\")), \" qui tentera de charger les ressources qui devraient se trouver dans le répertoire \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/data/pizzas.json\")), \". Notons que le chemin vers ce fichier JSON est un simple choix, il doit être configurable.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"écriture de ressources\"), \" : lors d'une opération d'écriture pour créer une nouvelle ressource, ou pour mettre à jour une ressource existante, voici les étapes :\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"création d'une liste de toutes les pizzas dans un array : cela correspond à l'utilisation de la fonction \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"parse\")), \" pour tenter de charger ce qui est contenu dans la mini DB de pizzas.\"), \"\\n\", React.createElement(_components.li, null, \"mise à jour de l'array soit en ajoutant un nouvel objet (une pizza), soit en modifiant un objet existant, soit en supprimant un objet.\"), \"\\n\", React.createElement(_components.li, null, \"réécriture complète du fichier JSON contenant la liste de pizzas sur base de l'array de pizzas qui a précédemment été mis à jour via la méthode \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"serialize\")), \".\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Voici le code du router mis à jour afin de gérer la persistance selon la stratégie définie ci-dessus, les modifications étant surlignées :\"), \"\\n\", React.createElement(_components.pre, {\n    numbered: true,\n    highlighting: \"2,5,45,47,51,58,60,64,76-78,87,89,98,100,104,107,123,125,129,131,133\"\n  }, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"var express = require('express');\\r\\nconst { serialize, parse } = require('../utils/json');\\r\\nvar router = express.Router();\\r\\n\\r\\nconst jsonDbPath = __dirname + '/../data/pizzas.json';\\r\\n\\r\\nconst MENU = [\\r\\n  {\\r\\n    id: 1,\\r\\n    title: '4 fromages',\\r\\n    content: 'Gruyère, Sérac, Appenzel, Gorgonzola, Tomates',\\r\\n  },\\r\\n  {\\r\\n    id: 2,\\r\\n    title: 'Vegan',\\r\\n    content: 'Tomates, Courgettes, Oignons, Aubergines, Poivrons',\\r\\n  },\\r\\n  {\\r\\n    id: 3,\\r\\n    title: 'Vegetarian',\\r\\n    content: 'Mozarella, Tomates, Oignons, Poivrons, Champignons, Olives',\\r\\n  },\\r\\n  {\\r\\n    id: 4,\\r\\n    title: 'Alpage',\\r\\n    content: 'Gruyère, Mozarella, Lardons, Tomates',\\r\\n  },\\r\\n  {\\r\\n    id: 5,\\r\\n    title: 'Diable',\\r\\n    content: 'Tomates, Mozarella, Chorizo piquant, Jalapenos',\\r\\n  },\\r\\n];\\r\\n\\r\\n/* Read all the pizzas from the menu\\r\\n   GET /pizzas?order=title : ascending order by title\\r\\n   GET /pizzas?order=-title : descending order by title\\r\\n*/\\r\\nrouter.get('/', (req, res, next) => {\\r\\n  const orderByTitle =\\r\\n    req?.query?.order?.includes('title') ? req.query.order : undefined;\\r\\n  let orderedMenu;\\r\\n  console.log(`order by ${orderByTitle ?? 'not requested'}`);\\r\\n\\r\\n  const pizzas = parse(jsonDbPath, MENU);\\r\\n  \\r\\n  if (orderByTitle) orderedMenu = [...pizzas].sort((a, b) => a.title.localeCompare(b.title));\\r\\n  if (orderByTitle === '-title') orderedMenu = orderedMenu.reverse();\\r\\n\\r\\n  console.log('GET /pizzas');\\r\\n  return res.json(orderedMenu ?? pizzas);\\r\\n});\\r\\n\\r\\n// Read the pizza identified by an id in the menu\\r\\nrouter.get('/:id', (req, res) => {\\r\\n  console.log(`GET /pizzas/${req.params.id}`);\\r\\n\\r\\n  const pizzas = parse(jsonDbPath, MENU);\\r\\n\\r\\n  const indexOfPizzaFound = pizzas.findIndex(pizza => pizza.id == req.params.id);\\r\\n\\r\\n  if (indexOfPizzaFound < 0) return res.sendStatus(404);\\r\\n\\r\\n  return res.json(pizzas[indexOfPizzaFound]);\\r\\n});\\r\\n\\r\\n// Create a pizza to be added to the menu.\\r\\nrouter.post('/', (req, res) => {\\r\\n  const title = req?.body?.title?.length !== 0 ? req.body.title : undefined;\\r\\n  const content = req?.body?.content?.length !== 0 ? req.body.content : undefined;\\r\\n\\r\\n  console.log('POST /pizzas');\\r\\n\\r\\n  if (!title || !content) return res.sendStatus(400); // error code '400 Bad request'\\r\\n\\r\\n  const pizzas = parse(jsonDbPath, MENU);\\r\\n  const lastItemIndex = pizzas?.length !== 0 ? pizzas.length - 1 : undefined;\\r\\n  const lastId = lastItemIndex !== undefined ? pizzas[lastItemIndex]?.id : 0;\\r\\n  const nextId = lastId + 1;\\r\\n\\r\\n  const newPizza = {\\r\\n    id: nextId,\\r\\n    title: title,\\r\\n    content: content,\\r\\n  };\\r\\n\\r\\n  pizzas.push(newPizza);\\r\\n\\r\\n  serialize(jsonDbPath, pizzas);\\r\\n\\r\\n  return res.json(newPizza);\\r\\n});\\r\\n\\r\\n// Delete a pizza from the menu based on its id\\r\\nrouter.delete('/:id', (req, res) => {\\r\\n  console.log(`DELETE /pizzas/${req.params.id}`);\\r\\n\\r\\n  const pizzas = parse(jsonDbPath, MENU);\\r\\n\\r\\n  const foundIndex = pizzas.findIndex(pizza => pizza.id == req.params.id);\\r\\n\\r\\n  if (foundIndex < 0) return res.sendStatus(404);\\r\\n\\r\\n  const itemsRemovedFromMenu = pizzas.splice(foundIndex, 1);\\r\\n  const itemRemoved = itemsRemovedFromMenu[0];\\r\\n\\r\\n  serialize(jsonDbPath, pizzas);\\r\\n\\r\\n  return res.json(itemRemoved);\\r\\n});\\r\\n\\r\\n// Update a pizza based on its id and new values for its parameters\\r\\nrouter.patch('/:id', (req, res) => {\\r\\n  console.log(`PATCH /pizzas/${req.params.id}`);\\r\\n\\r\\n  const title = req?.body?.title;\\r\\n  const content = req?.body?.content;\\r\\n\\r\\n  console.log('POST /pizzas');\\r\\n\\r\\n  if ((!title && !content) || title?.length === 0 || content?.length === 0) return res.sendStatus(400);\\r\\n\\r\\n  const pizzas = parse(jsonDbPath, MENU);\\r\\n\\r\\n  const foundIndex = pizzas.findIndex(pizza => pizza.id == req.params.id);\\r\\n\\r\\n  if (foundIndex < 0) return res.sendStatus(404);\\r\\n\\r\\n  const updatedPizza = {...pizzas[foundIndex], ...req.body};\\r\\n\\r\\n  pizzas[foundIndex] = updatedPizza;\\r\\n\\r\\n  serialize(jsonDbPath, pizzas);\\r\\n\\r\\n  return res.json(updatedPizza);\\r\\n});\\r\\n\\r\\nmodule.exports = router;\\n\")), \"\\n\", React.createElement(_components.p, null, \"Veuillez mettre à jour votre fichier \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/router/pizzas.js\")), \" sur base du code donné et testez le bon fonctionnement de l'application. Faites quelques requêtes pour ajouter et modifier des données et vérifiez, une fois que vous redémarrer votre application, que les données persistent.\"), \"\\n\", React.createElement(_components.h1, null, React.createElement(InternalPageTitle, null, \" Exercice 1.7 : Persistance des données \")), \"\\n\", React.createElement(_components.p, null, \"Vous allez mettre à jour la RESTful API de \", React.createElement(_components.strong, null, \"myMovies\"), \" afin de rendre les données persistantes dans un fichier JSON : \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/data/films.json\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez repartir du code de la solution de votre \", React.createElement(_components.a, {\n    href: \"../express-api/#exercice_1_6_suppression_modification_de_ressources\"\n  }, \"Exercice 1.6\"), \".\", React.createElement(_components.br), \"\\n\", \"Le code de votre application doit se trouver dans votre repository local et votre web repository (normalement appelé \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"web2\")), \") dans le répertoire nommé \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"/exercises/1.7\")), \".\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez tester toutes les fonctions de la RESTful API pour la collection de films à l'aide de REST Client en copiant les requêtes développées pour l'exercice précédent (fichier \", React.createElement(_components.strong, null, \"films.http\"), \" du répertoire \", React.createElement(_components.strong, null, \"REST Client\"), \"). Normalement, il n'y a pas de nouvelles requêtes à écrire, il suffit juste de les exécuter.\"), \"\\n\", React.createElement(_components.p, null, \"Veuillez faire un \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"commit\")), \" de votre code avec le message suivant : \", React.createElement(_components.strong, null, React.createElement(_components.code, null, \"1.7 : API : persistence\")), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","import GATSBY_COMPILED_MDX from \"C:/code/web2/web2-frontend/src/mdx-pages/part1/json.fr.mdx\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport {MDXProvider} from '@mdx-js/react';\nimport {Link} from 'gatsby';\nimport MainLayout from '../components/main-layout.js';\nimport Image from '../components/image.js';\nimport Section from '../components/section.js';\nimport Content from '../components/content.js';\nimport Background from '../components/background.js';\nimport SectionHeader from '../components/section-header.js';\nimport SectionFooter from '../components/section-footer.js';\nimport PageHeader from '../components/page-header.js';\nimport {withFrontmatter} from '../components/hoc/hoc.js';\nimport CodeBlock from '../components/codeblock/codeblock.js';\nimport LinkFile from '../components/file/link-file.js';\nimport ScrollableImage from '../components/image/scrollable-image';\nimport PublicProjectsView from '../components/public-projects/public-projects-view';\nimport {AuthenticatedTemplate, UnauthenticatedTemplate} from '@azure/msal-react';\nimport AuthenticatedBlock from '../components/auth/authenticated-block.js';\nimport UnAuthenticatedBlock from '../components/auth/unauthenticated-block.js';\nimport NestedMdxBlock from '../components/mdx/nested-mdx-block.js';\nimport YoutubeImage from '../components/image/youtube-image.js';\nimport InternalPageMenu from '../components/internal-page-menu/internal-page-menu.js';\nimport InternalPageMenuItem from '../components/internal-page-menu/internal-page-menu-item.js';\nimport InternalPageTitle from '../components/internal-page-menu/menu-title.js';\nimport {PathViewer, PathViewerItem} from '../components/path-viewer/path-viewer.js';\nconst shortcodes = {\n  Link,\n  Image,\n  Section,\n  Content,\n  Background,\n  SectionHeader,\n  SectionFooter,\n  PageHeader,\n  CodeBlock,\n  LinkFile,\n  ScrollableImage,\n  PublicProjectsView,\n  AuthenticatedBlock,\n  UnAuthenticatedBlock,\n  NestedMdxBlock,\n  YoutubeImage,\n  InternalPageMenu,\n  InternalPageMenuItem,\n  InternalPageTitle,\n  PathViewer,\n  PathViewerItem\n};\nfunction PageTemplate({data: {mdx, allImages}, children}) {\n  shortcodes.PageHeader = withFrontmatter(PageHeader, mdx?.frontmatter);\n  return React.createElement(MainLayout, Object.assign({}, mdx?.frontmatter ? {\n    frontmatter: mdx.frontmatter\n  } : {}, mdx?.frontmatter?.navbarExtraStyles ? {\n    navbarExtraStyles: mdx.frontmatter.navbarExtraStyles\n  } : {}, mdx?.frontmatter?.headerImage ? {\n    headerImage: mdx.frontmatter.headerImage\n  } : {}, mdx?.frontmatter?.featuredImage ? {\n    featuredImage: mdx.frontmatter.featuredImage\n  } : {}, mdx?.frontmatter?.title ? {\n    pageTitle: mdx.frontmatter.title\n  } : {}, allImages && allImages.length > 0 ? {\n    allImages: allImages\n  } : {}), React.createElement(MDXProvider, {\n    components: shortcodes\n  }, React.createElement(\"div\", {\n    className: mdx?.frontmatter?.autoMargin ? 'page page--auto-margin ' : 'page'\n  }, children)));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query pagesAndImages($slug: String) {\n    mdx(fields: { slug: { eq: $slug } }) {\n      id\n      body\n      fields {\n        slug\n      }\n\n      frontmatter {\n        title\n        date\n        navbarExtraStyles\n        headerImage\n        featuredImage\n        description\n        autoMargin\n      }\n    }\n    allImages: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"images\" }\n        extension: { nin: [\"ico\", \"svg\"] }\n      }\n    ) {\n      edges {\n        node {\n          childImageSharp {\n            gatsbyImageData(\n              quality: 90\n              layout: FULL_WIDTH\n              placeholder: TRACED_SVG\n              tracedSVGOptions: { color: \"green\", background: \"grey\" }\n            )\n          }\n          base\n        }\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","br","strong","ul","li","code","pre","h2","a","_provideComponents","components","InternalPageMenu","PathViewer","PathViewerItem","InternalPageMenuItem","InternalPageTitle","YoutubeImage","_missingMdxReference","React","to","selected","className","src","highlighting","href","numbered","wrapper","MDXLayout","id","component","Error","shortcodes","Link","Image","Section","Content","Background","SectionHeader","SectionFooter","PageHeader","CodeBlock","LinkFile","ScrollableImage","PublicProjectsView","AuthenticatedBlock","UnAuthenticatedBlock","NestedMdxBlock","PageTemplate","data","mdx","allImages","children","withFrontmatter","frontmatter","MainLayout","navbarExtraStyles","headerImage","featuredImage","title","pageTitle","length","MDXProvider","autoMargin","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}