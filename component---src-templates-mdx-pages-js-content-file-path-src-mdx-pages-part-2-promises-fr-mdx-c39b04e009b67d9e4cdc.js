"use strict";(self.webpackChunkmyjscourse=self.webpackChunkmyjscourse||[]).push([[2709],{5918:function(e,n,t){t.r(n),t.d(n,{default:function(){return T}});var l=t(3905),r=t(7294);function a(e){const n=Object.assign({h1:"h1",h2:"h2",p:"p",strong:"strong",code:"code",a:"a",pre:"pre",ul:"ul",li:"li",br:"br",h4:"h4",h3:"h3"},(0,l.ah)(),e.components),{InternalPageMenu:t,PathViewer:a,PathViewerItem:o,InternalPageMenuItem:c,YoutubeImage:s,InternalPageTitle:i,UnAuthenticatedBlock:m,AuthenticatedBlock:d,ScrollableImage:p}=n;return d||u("AuthenticatedBlock",!0),t||u("InternalPageMenu",!0),c||u("InternalPageMenuItem",!0),i||u("InternalPageTitle",!0),a||u("PathViewer",!0),o||u("PathViewerItem",!0),p||u("ScrollableImage",!0),m||u("UnAuthenticatedBlock",!0),s||u("YoutubeImage",!0),r.createElement(r.Fragment,null,r.createElement(n.h1,null,"l) Programmation asynchrone & les promesses"),"\n",r.createElement(t,null,r.createElement(a,null,r.createElement(o,{to:"/"}," web2course "),r.createElement(o,{to:"/part2"}," Partie 2 "),r.createElement(o,{selected:!0}," l) Programmation asynchrone & les promesses ")),r.createElement(c,null," Utilisation de promesses & async / await "),r.createElement(c,null," Opération asynchrone d'écriture d'une ressource "),r.createElement(c,null," Création de fonctions asynchrones renvoyant une promesse "),r.createElement(c,null," Exercice 2.19 : Intégration de la RESTful API au sein de l'IHM de myMovies via un proxy ")),"\n",r.createElement("div",{className:"card card__simple-youtube-container"},r.createElement(s,{src:"https://youtu.be/6xe9rpUPCvQ"})),"\n",r.createElement(n.h1,null,r.createElement(i,null," Utilisation de promesses & async / await ")),"\n",r.createElement(n.h2,null,"Introduction"),"\n",r.createElement(n.p,null,"Plutôt que d'utiliser des ",r.createElement(n.strong,null,r.createElement(n.code,null,".then()"))," pour chaîner des traitements asynchrones, il est possible de simplifier la syntaxe des promesses à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"await")),"."),"\n",r.createElement(n.p,null,"On va donc écrire du code d'une manière équivalente à ce qui serait fait en programmation synchrone, tout en bénéficiant des effets de la programmation asynchrone."),"\n",r.createElement(n.h2,null,"async / await : les bases"),"\n",r.createElement(n.p,null,"Pour ce nouveau tutoriel, nous allons refactorer l'IHM pour améliorer le code associé aux appels asynchrones aux API."),"\n",r.createElement(n.p,null,"Au sein de votre repo ",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),", veuillez créer le projet nommé ",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/hmi/async-await"))," sur base d'un copié/collé de ",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/hmi/basic-fetch"))," (ou ",r.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/basic-fetch"},"basic-fetch-hmi"),")."),"\n",r.createElement(n.p,null,"Pour la suite du tutoriel, nous considérons que tous les chemins absolus démarrent du répertoire\r\n",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/hmi/async-await")),"."),"\n",r.createElement(n.p,null,"Nous allons donc refactorer le code où est fait le ",r.createElement(n.strong,null,r.createElement(n.code,null,"fetch")),", c'est à dire ",r.createElement(n.strong,null,r.createElement(n.code,null,"/src/Components/Pages/HomePage.js"))," (veuillez mettre à jour tout le code de la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"arrow"))," associée à la variable ",r.createElement(n.strong,null,r.createElement(n.code,null,"HomePage")),") :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"1-2,5,9,14-16"},r.createElement(n.code,{className:"language-js"},"const HomePage = async () => {\r\n  try {\r\n    clearPage();\r\n\r\n    const response = await fetch('/api/pizzas');\r\n\r\n    if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\r\n\r\n    const pizzas = await response.json();\r\n\r\n    renderMenuFromString(pizzas);\r\n    attachOnMouseEventsToGoGreen();\r\n    renderDrinksFromNodes(DRINKS);\r\n  } catch (err) {\r\n    console.error('HomePage::error: ', err);\r\n  }\r\n};\n")),"\n",r.createElement(n.p,null,"Pour tester ce code, il ne faut pas oublier de démarrer la RESTful API auparavant : ",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/api/fat-model"))," ou via le code de ce web repo si vous avez un souci : ",r.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/backend-restful-api/restful-api-essentials/fat-model"},"api-fat-model"),"."),"\n",r.createElement(n.p,null,"Voici quelques caractéristiques importantes de ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," / ",r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," est utilisé pour chaîner une tâche asynchrone (sur une fonction renvoyant une promesse) et ne peut se faire qu'au sein d'une fonction taguée par ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," ; c'est donc le remplaçant du ",r.createElement(n.strong,null,r.createElement(n.code,null,".then(callback)")),".",r.createElement(n.br),"\n","⚡ Attention, il est donc important qu'au niveau de la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"arrow")),", à la ligne 1 du code donné ci-dessus, on indique le ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," !",r.createElement(n.br),"\n","⚡ Dans le code donné ci-dessus, il est aussi très important de ne pas oublier les ",r.createElement(n.strong,null,r.createElement(n.code,null,"await")),". N'hésitez pas à faire le test en enlevant le ",r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," de ",r.createElement(n.strong,null,r.createElement(n.code,null,"const pizzas = await response.json();")),".",r.createElement(n.br),"\n","Que se passe-t-il dans ce cas ? ",r.createElement(n.strong,null,r.createElement(n.code,null,"response.json()"))," étant une fonction asynchrone, on passera directement à la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"renderMenuFromString(pizzas);"))," avant même d'avoir récupéré les pizzas de notre RESTful API !"),"\n",r.createElement(n.li,null,'Toute fonction "taguée" par ',r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," renvoie automatiquement une promesse ; cela signifie dans le code ci-dessus que la fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"HomePage"))," est elle même asynchrone.",r.createElement(n.br),"\n","💭 Il est à parier, et n'hésitez pas à trouver un moyen de vous en rendre compte visuellement, que le footer s'affiche avant le menu !"),"\n",r.createElement(n.li,null,"On utilise des blocs ",r.createElement(n.strong,null,r.createElement(n.code,null,"try"))," / ",r.createElement(n.strong,null,r.createElement(n.code,null,"catch"))," pour gérer les erreur ; c'est donc le remplaçant du ",r.createElement(n.strong,null,r.createElement(n.code,null,".catch(callback)")),"."),"\n"),"\n",r.createElement(n.h1,null,r.createElement(i,null," Opération asynchrone d'écriture d'une ressource ")),"\n",r.createElement(n.p,null,"A présent, nous souhaiterions que notre IHM puisse créer une ressource au sein de la RESTful API. Dans un premier temps, nous allons mettre à jour le frontend en acceptant que n'importe quel utilisateur puisse créer une pizza et l'ajouter au menu de la pizzeria.",r.createElement(n.br),"\n","Bien entendu, cela est temporaire. Nous verrons plus tard comment sécuriser cette opération, en autorisant un admin seulement à réaliser l'ajout d'une pizza au menu."),"\n",r.createElement(n.p,null,"Nous allons créer une nouvelle page nommée ",r.createElement(n.strong,null,r.createElement(n.code,null,"AddPizzaPage.js")),".\r\nPour commencer, nous allons réaliser une page statique car il est toujours plus aisé de d'abord avoir une version visuelle d'une application web, avec la navigation entre les pages, avant de peaufiner chaque page et leurs interactions avec les utilisateurs et les APIS.\r\nVeuillez ajouter ce code dans la nouvelle page ",r.createElement(n.strong,null,r.createElement(n.code,null,"/src/Components/Pages/AddPizzaPage.js")),":"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"import { clearPage, renderPageTitle } from '../../utils/render';\r\n\r\nconst AddPizzaPage = () => {\r\n  clearPage();\r\n  renderPageTitle('Add a pizza to the menu');\r\n  renderAddPizzaForm();\r\n};\r\n\r\nfunction renderAddPizzaForm() {\r\n  const main = document.querySelector('main');\r\n  const form = document.createElement('form');\r\n  form.className = 'p-5';\r\n  const title = document.createElement('input');\r\n  title.type = 'text';\r\n  title.id = 'title';\r\n  title.placeholder = 'title of your pizza';\r\n  title.required = true;\r\n  title.className = 'form-control mb-3';\r\n  const content = document.createElement('input');\r\n  content.type = 'text';\r\n  content.id = 'content';\r\n  content.required = true;\r\n  content.placeholder = 'Content of your pizza';\r\n  content.className = 'form-control mb-3';\r\n  const submit = document.createElement('input');\r\n  submit.value = 'Add pizza to the menu';\r\n  submit.type = 'submit';\r\n  submit.className = 'btn btn-danger';\r\n  form.appendChild(title);\r\n  form.appendChild(content);\r\n  form.appendChild(submit);\r\n  main.appendChild(form);\r\n}\r\n\r\nexport default AddPizzaPage;\n")),"\n",r.createElement(n.p,null,"Nous devons aussi ajouter un élément dans la ",r.createElement(n.strong,null,r.createElement(n.code,null,"Navbar"))," afin de pouvoir accéder à cette nouvelle page. Pour ce faire, veuillez mettre à jour ",r.createElement(n.strong,null,r.createElement(n.code,null,"/src/Components/Navbar/Navbar.js"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"36-38"},r.createElement(n.code,{className:"language-js"},'// eslint-disable-next-line no-unused-vars\r\nimport { Navbar as BootstrapNavbar } from \'bootstrap\';\r\n\r\nconst Navbar = () => {\r\n  renderNavbar();\r\n};\r\n\r\nfunction renderNavbar() {\r\n  const navbar = document.querySelector(\'#navbarWrapper\');\r\n  navbar.innerHTML = `\r\n  <nav class="navbar navbar-expand-lg navbar-light bg-danger">\r\n        <div class="container-fluid">\r\n          <a class="navbar-brand" href="#">e-Pizzeria</a>\r\n          <button\r\n            class="navbar-toggler"\r\n            type="button"\r\n            data-bs-toggle="collapse"\r\n            data-bs-target="#navbarSupportedContent"\r\n            aria-controls="navbarSupportedContent"\r\n            aria-expanded="false"\r\n            aria-label="Toggle navigation"\r\n          >\r\n            <span class="navbar-toggler-icon"></span>\r\n          </button>\r\n          <div class="collapse navbar-collapse" id="navbarSupportedContent">\r\n            <ul class="navbar-nav me-auto mb-2 mb-lg-0">\r\n              <li class="nav-item">\r\n                <a class="nav-link active" aria-current="page" href="#" data-uri="/">Home</a>\r\n              </li>\r\n              <li id="loginItem" class="nav-item">\r\n                <a class="nav-link" href="#" data-uri="/login">Login</a>\r\n              </li>\r\n              <li id="registerItem" class="nav-item">\r\n                <a class="nav-link" href="#" data-uri="/register">Register</a>\r\n              </li>  \r\n              <li class="nav-item">\r\n                <a class="nav-link" href="#" data-uri="/add-pizza">Add a pizza</a>\r\n              </li>           \r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  `;\r\n}\r\n\r\nexport default Navbar;\n')),"\n",r.createElement(n.p,null,"Et finalement, comme le frontend de ce tutoriel utilise le boilerplate du cours, il faut encore configurer le router de l'IHM afin d'indiquer la page à afficher lorsqu'on clique sur le lien dont ",r.createElement(n.strong,null,r.createElement(n.code,null,"data-uri"))," vaut ",r.createElement(n.strong,null,r.createElement(n.code,null,'"/add-pizza"')),". Pour ce faire, veuillez mettre à jour le fichier ",r.createElement(n.strong,null,r.createElement(n.code,null,"/src/Components/Router/Router.js"))," pour ajouter ces deux lignes :"),"\n",r.createElement(n.pre,{highlighting:"1,10"},r.createElement(n.code,{className:"language-js"},"import AddPizzaPage from '../Pages/AddPizzaPage';\r\nimport HomePage from '../Pages/HomePage';\r\nimport LoginPage from '../Pages/LoginPage';\r\nimport RegisterPage from '../Pages/RegisterPage';\r\n\r\nconst routes = {\r\n  '/': HomePage,\r\n  '/login': LoginPage,\r\n  '/register': RegisterPage,\r\n  '/add-pizza': AddPizzaPage,\r\n};\n")),"\n",r.createElement(n.p,null,"A ce stade-ci, votre application ",r.createElement(n.strong,null,r.createElement(n.code,null,"/web2/tutorials/pizzeria/hmi/async-await"))," devrait être fonctionnelle, vous devriez pouvoir naviguer vers la nouvelle page contenant un formulaire pour ajouter une pizza."),"\n",r.createElement(n.p,null,"Nous allons maintenant ajouter l'interaction avec l'API au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"AddPizzaPage")),".\r\nLorsque nous soumettons le formulaire, nous voulons faire une requête de création de pizza à la RESTful API, c'est donc une requête de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"POST /pizzas"))," qui doit être l'équivalent de ce que nous faisions avec REST Client. Pour rappel, nous faisions une requête de ce genre :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-http"},'### Create a pizza\r\nPOST {{baseUrl}}/pizzas\r\nContent-Type: application/json\r\n\r\n{\r\n    "title":"Magic Green",\r\n    "content":"Epinards, Brocolis, Olives vertes, Basilic"\r\n}\n')),"\n",r.createElement(n.p,null,"Ici, c'est le JS à rajouter dans ",r.createElement(n.strong,null,r.createElement(n.code,null,"AddPizzaPage"))," qui doit, lors du clic, aller chercher les valeurs des deux champs du formulaire pour créer la représentation des données (",r.createElement(n.strong,null,r.createElement(n.code,null,"title"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"content")),") et faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"fetch"))," de l'opération de création offerte par l'API.",r.createElement(n.br),"\n","Si l'ajout se fait avec succès, on souhaite faire en sorte que l'utilisateur soit redirigé vers la ",r.createElement(n.strong,null,r.createElement(n.code,null,"HomePage")),"."),"\n",r.createElement(n.p,null,"Pour arriver à nos fins, veuillez ajouter ce code dans la page ",r.createElement(n.strong,null,r.createElement(n.code,null,"/src/Components/Pages/AddPizzaPage.js"))," :"),"\n",r.createElement(n.pre,{numbered:!0,highlighting:"34,37-63"},r.createElement(n.code,{className:"language-js"},"import { clearPage, renderPageTitle } from '../../utils/render';\r\nimport Navigate from '../Router/Navigate';\r\n\r\nconst AddPizzaPage = () => {\r\n  clearPage();\r\n  renderPageTitle('Add a pizza to the menu');\r\n  renderAddPizzaForm();\r\n};\r\n\r\nfunction renderAddPizzaForm() {\r\n  const main = document.querySelector('main');\r\n  const form = document.createElement('form');\r\n  form.className = 'p-5';\r\n  const title = document.createElement('input');\r\n  title.type = 'text';\r\n  title.id = 'title';\r\n  title.placeholder = 'title of your pizza';\r\n  title.required = true;\r\n  title.className = 'form-control mb-3';\r\n  const content = document.createElement('input');\r\n  content.type = 'text';\r\n  content.id = 'content';\r\n  content.required = true;\r\n  content.placeholder = 'Content of your pizza';\r\n  content.className = 'form-control mb-3';\r\n  const submit = document.createElement('input');\r\n  submit.value = 'Add pizza to the menu';\r\n  submit.type = 'submit';\r\n  submit.className = 'btn btn-danger';\r\n  form.appendChild(title);\r\n  form.appendChild(content);\r\n  form.appendChild(submit);\r\n  main.appendChild(form);\r\n  form.addEventListener('submit', onAddPizza);\r\n}\r\n\r\nasync function onAddPizza(e) {\r\n  e.preventDefault();\r\n\r\n  const title = document.querySelector('#title').value;\r\n  const content = document.querySelector('#content').value;\r\n\r\n  const options = {\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      title,\r\n      content,\r\n    }),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const response = await fetch('/api/pizzas', options); // fetch return a promise => we wait for the response\r\n\r\n  if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\r\n\r\n  const newPizza = await response.json(); // json() returns a promise => we wait for the data\r\n\r\n  console.log('New pizza added : ', newPizza);\r\n\r\n  Navigate('/');\r\n}\r\n\r\nexport default AddPizzaPage;\n")),"\n",r.createElement(n.p,null,"Quelques explications sur ce code, pour les parties déjà connues :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"La gestion d'événements n'est pas nouvelle. Ici, on met un écouteur d'événements de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"submit"))," sur le formulaire. Cela permet d'écouter tant les clics sur le champs de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"submit"))," (le bouton) que si l'utilisateur appuie sur ",r.createElement(n.strong,null,r.createElement(n.code,null,"Enter")),".",r.createElement(n.br),"\n","👍 On recommande, pour les formulaires, d'utiliser des événements de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"submit"))," plutôt que des événements de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"click"))," sur le bouton ",r.createElement(n.strong,null,r.createElement(n.code,null,"submit"))," afin notamment de prendre en compte si l'utilisateur appuie sur ",r.createElement(n.strong,null,r.createElement(n.code,null,"Enter"))," pour tenter de soumettre le formulaire."),"\n",r.createElement(n.li,null,"L'action par défaut d'un formulaire, lors d'un submit, et de faire une requête synchrone vers l'URL du backend indiqué dans la propriété ",r.createElement(n.strong,null,r.createElement(n.code,null,"action"))," du formulaire, ou sur la même URL que la page en cours si ",r.createElement(n.strong,null,r.createElement(n.code,null,"action"))," n'est pas donné. Pour éviter un chargement de page non désiré dans le cadre d'une SPA, on stoppe cette action par défaut via ",r.createElement(n.strong,null,r.createElement(n.code,null,"e.preventDefault()")),"."),"\n"),"\n",r.createElement(n.p,null,"Pour la nouveauté et le ",r.createElement(n.strong,null,r.createElement(n.code,null,"fetch"))," :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"pour faire une requête de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"POST")),", tout comme pour les requêtes de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"DELETE")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"PATCH")),", ",r.createElement(n.strong,null,r.createElement(n.code,null,"UPDATE")),"..., il faut l'indiquer à la méthode ",r.createElement(n.strong,null,r.createElement(n.code,null,"fetch")),".",r.createElement(n.br),"\n","Cela est indiqué dans un objet que nous appelons généralement ",r.createElement(n.strong,null,r.createElement(n.code,null,"options"))," qui doit contenir la propriété ",r.createElement(n.strong,null,r.createElement(n.code,null,"method")),"."),"\n",r.createElement(n.li,null,"lorsque l'on doit envoyer des données dans le ",r.createElement(n.strong,null,r.createElement(n.code,null,"body"))," d'une requête, alors il faut le faire au sein de la propriété ",r.createElement(n.strong,null,r.createElement(n.code,null,"body")),". Ici, nous souhaitons envoyer un objet contenant les propriétés ",r.createElement(n.strong,null,r.createElement(n.code,null,"title"))," et ",r.createElement(n.strong,null,r.createElement(n.code,null,"content"))," au format JSON. Nous devons donc utiliser la méthode ",r.createElement(n.strong,null,r.createElement(n.code,null,"JSON.stringify"))," qui permet de créer une représentation JSON d'un objet JS. Notez ici que nous avons écrit l'objet JS selon une notation simplifiée (\"object property shorthand\") :"),"\n"),"\n",r.createElement(n.pre,{highlighting:"4-7,9-12"},r.createElement(n.code,{className:"language-js"},"const title = document.querySelector('#title').value;\r\nconst content = document.querySelector('#content').value;\r\n\r\n{\r\n  title,\r\n  content,\r\n}\r\n// Cet object literal est l'équivalent de :\r\n{\r\n  title: title,\r\n  content: content,\r\n}\n")),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Il est très important de spécifier le type de la représentation de l'objet qui devrait être utilisé par l'API et qui se trouve dans le body de la requête. Cela est fait via un ",r.createElement(n.strong,null,r.createElement(n.code,null,"header"))," et la propriété ",r.createElement(n.strong,null,r.createElement(n.code,null,"Content-Type"))," (",r.createElement(n.strong,null,r.createElement(n.code,null,"'Content-Type': 'application/json',")),").",r.createElement(n.br),"\n","⚡ Si vous oubliez cela, l'API ne pourra pas parser les données au format JSON vers des objets JS et donc les opérations d'écriture de ressources échoueront !"),"\n",r.createElement(n.li,null,"Finalement, si l'opération de création de la pizza réussi, nous redirigeons l'utilisateur vers la ",r.createElement(n.strong,null,r.createElement(n.code,null,"HomePage"))," à l'aide du composant fonctionnel ",r.createElement(n.strong,null,r.createElement(n.code,null,"Navigate"))," offert au sein du module ",r.createElement(n.strong,null,r.createElement(n.code,null,"Navigate.js"))," dans le dossier ",r.createElement(n.strong,null,"Router")," du boilerplate du frontend."),"\n"),"\n",r.createElement(n.p,null,"Si tout fonctionne bien, faites un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre repo (",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),") avec comme message\r\n: ",r.createElement(n.strong,null,r.createElement(n.code,null,"async-await-hmi tutorial")),"."),"\n",r.createElement(n.p,null,"En cas de souci, vous pouvez accéder au code du tutoriel ici :\r\n",r.createElement(n.a,{href:"https://github.com/e-vinci/js-demos/tree/main/frontend/frontend-essentials/async-await"},"async-await-hmi"),"."),"\n",r.createElement(n.h1,null,r.createElement(i,null," Création de fonctions asynchrones renvoyant une promesse ")),"\n",r.createElement(n.p,null,"A l'aide d'",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," / ",r.createElement(n.strong,null,r.createElement(n.code,null,"await")),", il est très simple de créer des fonctions asynchrones qui renvoient une promesse."),"\n",r.createElement(n.p,null,"Imaginons que nous souhaitons créer une fonction asynchrone qui renvoie toutes les pizzas qui sont offertes par l'opération de lecture des pizzas de la RESTful API."),"\n",r.createElement(n.p,null,"Voici comment nous écririons ce code :"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-js"},"async function getAllPizzas() {\r\n  try {\r\n    const response = await fetch('/api/pizzas');\r\n\r\n    if (!response.ok) throw new Error(`fetch error : ${response.status} : ${response.statusText}`);\r\n\r\n    const pizzas = await response.json();\r\n\r\n    return pizzas;\r\n  } catch (err) {\r\n    console.error('getAllPizzas::error: ', err);\r\n    throw err;\r\n  }\r\n}\n")),"\n",r.createElement(n.p,null,"Cette fonction ",r.createElement(n.strong,null,r.createElement(n.code,null,"getAllPizzas"))," ne renvoie pas un array de pizzas, mais une ",r.createElement(n.strong,null,r.createElement(n.code,null,"Promise"))," !",r.createElement(n.br),"\n","Si la promesse :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"résout avec succès, alors c'est bien un array de pizzas qui sera renvoyé par cette fonction."),"\n",r.createElement(n.li,null,"échoue, c'est une exception qui sera renvoyée.",r.createElement(n.br),"\n","Pour que cela fonctionne, vous devez donc faire en sorte, dans vos fonctions asynchrones, de faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"throw"))," d'une erreur en cas d'échec du traitement asynchrone."),"\n"),"\n",r.createElement(n.p,null,"Comment utiliser ce code au sein de la ",r.createElement(n.strong,null,r.createElement(n.code,null,"HomePage"))," ?",r.createElement(n.br),"\n","Voici comment le code pourrait être mis à jour pour utiliser la fonction asynchrone ",r.createElement(n.strong,null,r.createElement(n.code,null,"getAllPizzas"))," au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"HomePage.js"))," :"),"\n",r.createElement(n.pre,{highlighting:"1,5"},r.createElement(n.code,{className:"language-js"},"const HomePage = async () => {\r\n  try {\r\n    clearPage();\r\n\r\n    const pizzas = await getAllPizzas();\r\n\r\n    renderMenuFromString(pizzas);\r\n    attachOnMouseEventsToGoGreen();\r\n    renderDrinksFromNodes(DRINKS);\r\n  } catch (err) {\r\n    console.error('HomePage::error: ', err);\r\n  }\r\n};\n")),"\n",r.createElement(n.h1,null,r.createElement(i,null," Exercice 2.19 : Intégration de la RESTful API au sein de l'IHM de myMovies via un proxy ")),"\n",r.createElement(n.h2,null,"Objectif"),"\n",r.createElement(n.p,null,"Vous allez intégrer le frontend de ",r.createElement(n.strong,null,"myMovies")," avec sa RESTful API afin que toutes les opérations CRUD soient traitées par votre application."),"\n",r.createElement(n.p,null,"L'application ",r.createElement(n.strong,null,"myMovies")," doit permettre tous ces cas d'utilisation (ou use cases):"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"UC1 : l'affichage, sous forme de tableau, de toutes les ressources de type films."),"\n",r.createElement(n.li,null,"UC2 : l'ajout d'une ressource de type films via un formulaire d'ajout d'un film."),"\n",r.createElement(n.li,null,"UC3 : la suppression d'un film."),"\n",r.createElement(n.li,null,"UC4 : la mise à jour des données d'un film (à l'exception de l'id associé à un film)."),"\n"),"\n",r.createElement(n.p,null,"Nous acceptons, à ce stade-ci, que des utilisateurs anonymes puissent réaliser des opérations qui normalement devraient être sécurisées. Nous verrons plus tard comment authentifier et autoriser des utilisateurs afin de protéger l'accès aux opérations d'API."),"\n",r.createElement(n.p,null,"Veuillez utiliser le proxy de votre frontend afin de contourner les problèmes associé à la gestion des CORS. Tous les appels aux opérations des API doivent se faire à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," / ",r.createElement(n.strong,null,r.createElement(n.code,null,"await")),"."),"\n",r.createElement(n.h2,null,"Mise en place des projets"),"\n",r.createElement(m,null,r.createElement(n.p,null,"Vous allez donc développer deux applications :"),r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Pour votre frontend :","\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Si vous avez choisi comme projet de continuer l'application ",r.createElement(n.strong,null,"myMovies")," : veuillez repartir du code de ",r.createElement(n.a,{href:"../comms-security/#projet_2_17_consommation_doperations_dune_api_a_laide_dun_proxy"},"Projet 2.17"),"."),"\n",r.createElement(n.li,null,"Si vous avez choisi votre propre projet : veuillez repartir du code de l'",r.createElement(n.a,{href:"../routing/#exercice_2_11_utilisation_dun_router"},"Exercice 2.11"),"."),"\n",r.createElement(n.li,null,"Dans les deux cas : le code du frontend doit se trouver dans votre repository local et votre web repository (normalement appelé ",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),") dans le répertoire nommé ",r.createElement(n.strong,null,r.createElement(n.code,null,"/project/2.19/frontend")),"."),"\n"),"\n"),"\n",r.createElement(n.li,null,"Pour votre API : Veuillez repartir du code de l'",r.createElement(n.a,{href:"../../part1/refactoring/#exercice_1_9_refactoring_a_laide_dun_fat_model"},"Exercice 1.9"),". le code doit se trouver dans votre repository local et votre web repository (normalement appelé ",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),") dans le répertoire nommé ",r.createElement(n.strong,null,r.createElement(n.code,null,"/project/2.19/api")),"."),"\n")),"\n",r.createElement(d,null,r.createElement(n.p,null,"Vous allez donc développer deux applications :"),r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Pour votre frontend : veuillez repartir du code de l'",r.createElement(n.a,{href:"../routing/#exercice_2_11_utilisation_dun_router"},"Exercice 2.11"),". Le code du frontend doit se trouver dans votre repository local et votre web repository (normalement appelé ",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),") dans le répertoire nommé ",r.createElement(n.strong,null,r.createElement(n.code,null,"/project/2.19/frontend")),"."),"\n",r.createElement(n.li,null,"Pour votre API : Veuillez repartir du code de l'",r.createElement(n.a,{href:"../../part1/refactoring/#exercice_1_10_encore_un_fat_model"},"Exercice 1.10"),". le code doit se trouver dans votre repository local et votre web repository (normalement appelé ",r.createElement(n.strong,null,r.createElement(n.code,null,"web2")),") dans le répertoire nommé ",r.createElement(n.strong,null,r.createElement(n.code,null,"/project/2.18/api")),"."),"\n")),"\n",r.createElement(n.p,null,"Vous allez développer le frontend de manière incrémentale."),"\n",r.createElement(n.h2,null,"UC1 : l'affichage, sous forme de tableau, de toutes les ressources de type films"),"\n",r.createElement(n.p,null,"Veuillez consommer l'opération de lecture de films de l'API au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"ViewMoviePage"))," à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," / ",r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," et du proxy."),"\n",r.createElement(n.p,null,"Quand c'est fonctionnel, veuillez faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre code avec comme message : ",r.createElement(n.strong,null,r.createElement(n.code,null,"2.19.1 : spa read operation & async / await")),"."),"\n",r.createElement(n.h2,null,"UC2 : l'ajout d'une ressource de type films via un formulaire d'ajout d'un film"),"\n",r.createElement(n.p,null,"Veuillez consommer l'opération de création de films de l'API au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"AddMoviePage"))," à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," / ",r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," et du proxy."),"\n",r.createElement(n.p,null,"⚡ Lors de l'ajout d'un film, n'oubliez pas que le budget et la durée doivent être des nombres, pas des strings !"),"\n",r.createElement(n.p,null,"Quand c'est fonctionnel, veuillez faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre code avec comme message : ",r.createElement(n.strong,null,r.createElement(n.code,null,"2.19.2 : spa create operation")),"."),"\n",r.createElement(n.h2,null,"UC3 : la suppression d'un film"),"\n",r.createElement(n.p,null,"Veuillez consommer l'opération de suppression de films de l'API au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"ViewMoviePage"))," à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," / ",r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," et du proxy."),"\n",r.createElement(n.p,null,"Quand c'est fonctionnel, veuillez faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre code avec comme message : ",r.createElement(n.strong,null,r.createElement(n.code,null,"2.19.3 : spa delete operation")),"."),"\n",r.createElement(n.h2,null,"UC4 : la mise à jour des données d'un film (à l'exception de l'id associé à un film)"),"\n",r.createElement(n.p,null,"Veuillez consommer l'opération de mise à jour de films de l'API au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"ViewMoviePage"))," à l'aide de ",r.createElement(n.strong,null,r.createElement(n.code,null,"async"))," / ",r.createElement(n.strong,null,r.createElement(n.code,null,"await"))," et du proxy."),"\n",r.createElement(n.p,null,"Quand c'est fonctionnel, veuillez faire un ",r.createElement(n.strong,null,r.createElement(n.code,null,"commit"))," de votre code avec comme message : ",r.createElement(n.strong,null,r.createElement(n.code,null,"2.19.4 : spa update operation")),"."),"\n",r.createElement(n.h4,null,"🤝 Tips"),"\n",r.createElement(n.p,null,"Comment gérer l'UC de suppression d'un film ?"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Vous pourriez avoir un bouton ",r.createElement(n.strong,null,r.createElement(n.code,null,"Delete"))," pour chaque ligne du tableau affichant les films. Lors du clic sur un bouton ",r.createElement(n.strong,null,r.createElement(n.code,null,"Delete")),", vous feriez une requête de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"DELETE"))," vers la RESTful API. Attention, pour une requête de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"DELETE")),", l'identifiant de l'objet à supprimer doit être donnée dans l'URL associée au ",r.createElement(n.strong,null,r.createElement(n.code,null,"fetch")),"."),"\n",r.createElement(n.li,null,"Comment retrouver l'identifiant du film affiché dans le tableau ?",r.createElement(n.br),"\n","Pensez au ",r.createElement(n.strong,null,r.createElement(n.code,null,"data-attribute")),", vous pouvez cacher de l'information dans l'HTML. Par exemple, chaque bouton ",r.createElement(n.strong,null,r.createElement(n.code,null,"Delete"))," pourrait contenir un ",r.createElement(n.strong,null,r.createElement(n.code,null,"data-attribute"))," étant l'id du film. Il est aussi possible d'utiliser la propriété ",r.createElement(n.strong,null,r.createElement(n.code,null,"id")),' du bouton pour "cacher" de l\'info.'),"\n"),"\n",r.createElement(n.p,null,"Comment gérer la mise à jour des données d'un film ? Nous vous proposons deux options à choix :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"L'option 1 : elle va vous permettre de ne pas devoir créer des formulaires et de directement mettre à jour de l'info en modifiant le contenu de containers HTML."),"\n",r.createElement(n.li,null,"L'option 2 : vous pourriez créer des formulaires en les pré-remplissant des données existantes."),"\n"),"\n",r.createElement(n.h3,null,"Option 1 pour la mise à jour d'info : la plus cool à découvrir 😉"),"\n",r.createElement(n.p,null,"Vous pourriez faire en sorte que l'HTML du tableau affichant les films, lors d'un clic, devienne éditable. Pour cette option :"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Voici, à quoi pourrait ressembler votre application à la fin de l'exercice. Vous avez bien sûr la liberté de faire quelque chose de totalement différent visuellement !"),"\n"),"\n",r.createElement(p,{name:"movies.png",minWidth:"700px",maxWidth:"1268px"}),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"Veuillez noter que, contrairement à ce qui a été fait pour l'",r.createElement(n.a,{href:"../routing/#exercice_2_11_utilisation_dun_router"},"Exercice 2.11"),", le ",r.createElement(n.strong,null,r.createElement(n.code,null,"title"))," et le ",r.createElement(n.strong,null,r.createElement(n.code,null,"link"))," ne sont plus intégrés dans une même colonne, via des hyperlinks ; avec l'option 1, nous devrions considérer deux colonnes, une pour le titre et l'autre pour le lien."),"\n",r.createElement(n.li,null,"Vous pouvez utiliser la propriété HTML ",r.createElement(n.strong,null,r.createElement(n.code,null,'contenteditable="true"'))," pour rendre les cellules du tableau éditables. Voici un exemple pour rendre une cellule associée au titre éditable :","\n",r.createElement(n.pre,{highlighting:"1"},r.createElement(n.code,{className:"language-js"},'<td class="fw-bold text-info" contenteditable="true">${\r\n            element.title\r\n}</td>\n')),"\n"),"\n",r.createElement(n.li,null,"Pour accéder aux cellules qui se trouvent dans une même ligne que vous mettez à jour, vous pouvez utiliser la DOM API de votre browser :","\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"on obtient le parent d'un élément HTML via l'attribut ",r.createElement(n.strong,null,r.createElement(n.code,null,"parentElement"))," ; par exemple, si vous avez un écouteur d'événements de clics sur un bouton ",r.createElement(n.strong,null,r.createElement(n.code,null,"Save")),", ce bouton se trouvant au sein d'une ",r.createElement(n.strong,null,r.createElement(n.code,null,"td"))," qui se trouve elle-même au sein d'une ",r.createElement(n.strong,null,r.createElement(n.code,null,"tr"))," : ",r.createElement(n.strong,null,r.createElement(n.code,null,"e.target.parentElement.parentElement")),"  donne accès à la ",r.createElement(n.strong,null,r.createElement(n.code,null,"tr"))," associée au bouton ",r.createElement(n.strong,null,r.createElement(n.code,null,"Save"))," sur lequel on a cliqué."),"\n",r.createElement(n.li,null,"on accède aux enfants d'un élément HTML via l'attribut ",r.createElement(n.strong,null,r.createElement(n.code,null,"children"))," ; par exemple, ",r.createElement(n.strong,null,r.createElement(n.code,null,"tr.children[0]"))," donne accès à la première ",r.createElement(n.strong,null,r.createElement(n.code,null,"td"))," au sein de ",r.createElement(n.strong,null,r.createElement(n.code,null,"tr")),"."),"\n"),"\n"),"\n",r.createElement(n.li,null,"Vous pourriez avoir un bouton ",r.createElement(n.strong,null,r.createElement(n.code,null,"Save"))," pour chaque ligne du tableau affichant un film. Lors d'un clic sur un bouton ",r.createElement(n.strong,null,r.createElement(n.code,null,"Save")),", vous faites appel à l'API en faisant la requête de mettre à jour toutes les propriétés du film, même celle n'ayant pas de nouvelles valeurs."),"\n",r.createElement(n.li,null,"Attention, pour une requête de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"PUT"))," (mise à jour de toutes les propriétés d'une ressource) ou de type ",r.createElement(n.strong,null,r.createElement(n.code,null,"PATCH"))," (mise à jour partielle d'une ressource), vous devez indiquer l'id dans l'URL du ",r.createElement(n.strong,null,r.createElement(n.code,null,"fetch")),", et la représentation de données à mettre à jour doit se trouver dans le body de la requête (ce sont les conventions REST que nous avons fixées dans le cadre de ce cours)."),"\n",r.createElement(n.li,null,"Si vous aviez besoin de réaliser une action en cas de changement du contenu d'une cellule dont ",r.createElement(n.strong,null,r.createElement(n.code,null,"contenteditable"))," est activé, vous pouvez gérer le type d'événement ",r.createElement(n.strong,null,r.createElement(n.code,null,"input")),"."),"\n"),"\n",r.createElement("br"),"\n",r.createElement(n.h3,null,"Option 2 pour la mise à jour d'info"),"\n",r.createElement(n.p,null,"Il est aussi possible de créer un nouveau composant Javascript (une page, une modal ou autre) qui reprendrait un formulaire dont les inputs contiendraient déjà les valeurs existantes des propriétés d'un film. Si vous choisissez cette option, c'est à vous de trouver l'inspiration 😉."))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?r.createElement(n,e,r.createElement(a,e)):a(e)};function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var c=t(4160),s=t(5583),i=t(5679),m=t(307),d=t(7410),p=t(9523),E=t(8075),g=t(9063),f=t(1631),v=t(5772),h=t(2770),b=t(7008),z=t(9771),P=t(1218),y=(t(5258),t(9394)),q=t(4579),j=t(7743),w=t(9256),I=t(6488),x=t(5175),A=t(6387),S=t(6044);const N={Link:c.Link,Image:i.Z,Section:m.Z,Content:d.Z,Background:p.Z,SectionHeader:E.Z,SectionFooter:g.Z,PageHeader:f.Z,CodeBlock:h.Z,LinkFile:b.Z,ScrollableImage:z.Z,PublicProjectsView:P.Z,AuthenticatedBlock:y.Z,UnAuthenticatedBlock:q.Z,NestedMdxBlock:j.Z,YoutubeImage:w.Z,InternalPageMenu:I.Z,InternalPageMenuItem:x.Z,InternalPageTitle:A.Z,PathViewer:S.k,PathViewerItem:S.F};function C(e){var n,t,a,o,u;let{data:{mdx:c,allImages:i},children:m}=e;return N.PageHeader=(0,v.u)(f.Z,null==c?void 0:c.frontmatter),r.createElement(s.Z,Object.assign({},null!=c&&c.frontmatter?{frontmatter:c.frontmatter}:{},null!=c&&null!==(n=c.frontmatter)&&void 0!==n&&n.navbarExtraStyles?{navbarExtraStyles:c.frontmatter.navbarExtraStyles}:{},null!=c&&null!==(t=c.frontmatter)&&void 0!==t&&t.headerImage?{headerImage:c.frontmatter.headerImage}:{},null!=c&&null!==(a=c.frontmatter)&&void 0!==a&&a.featuredImage?{featuredImage:c.frontmatter.featuredImage}:{},null!=c&&null!==(o=c.frontmatter)&&void 0!==o&&o.title?{pageTitle:c.frontmatter.title}:{},i&&i.length>0?{allImages:i}:{}),r.createElement(l.Zo,{components:N},r.createElement("div",{className:null!=c&&null!==(u=c.frontmatter)&&void 0!==u&&u.autoMargin?"page page--auto-margin ":"page"},m)))}function T(e){return r.createElement(C,e,r.createElement(o,e))}}}]);
//# sourceMappingURL=component---src-templates-mdx-pages-js-content-file-path-src-mdx-pages-part-2-promises-fr-mdx-c39b04e009b67d9e4cdc.js.map