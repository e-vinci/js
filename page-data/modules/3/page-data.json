{"componentChunkName":"component---src-templates-mdx-pages-js","path":"/modules/3/","result":{"data":{"mdx":{"id":"91015e9e-f18b-579a-8d91-4f69b82d8fe8","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Module 3 : JAX-RS avancé\",\n  \"description\": \"JAX-RS avancé\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Module 3 : JAX-RS avanc\\xE9\"), mdx(\"p\", null, \"Ce module vous offre le refactor d'une application JAX-RS pour appliquer les bonnes pratiques\\ndu monde Java et approfondir certains concepts associ\\xE9s \\xE0 la gestion des exceptions\\net \\xE0 la s\\xE9rialisation au sein du framework. \"), mdx(\"p\", null, \"Voici les sujets trait\\xE9s :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/3#sectionA\"\n  }, \"Bonnes pratiques Java : \\\"Factory\\\" et injection de d\\xE9pendances\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/3#sectionB\"\n  }, \"Mapping d'exceptions \\xE0 des r\\xE9ponses\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/3#sectionC\"\n  }, \"S\\xE9rialisation de POJOs et filtrage d\\u2019attributs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/3#sectionD\"\n  }, \"Exercice 3.1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/3#sectionE\"\n  }, \"Exercice 3.2 optionnel\"))), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionA\"\n  }), \"a) Bonnes pratiques Java : \\\"Factory\\\" et injection de d\\xE9pendances\"), mdx(\"h2\", null, \"a.1) Introduction\"), mdx(\"p\", null, \"Dans les Modules 1 & 2, nous avons d\\xE9velopp\\xE9 ensemble une RESTful API permettant de g\\xE9rer des films.\"), mdx(\"p\", null, \"Nous allons maintenant faire un refactor de cette application afin de mieux architecturer le code.\\nVoici les motivations pour r\\xE9architecturer l'API :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"abstraction de l\\u2019impl\\xE9mentation de classes par l\\u2019utilisation d\\u2019interfaces ;\\nainsi, lors d\\u2019interactions entre des objets de diff\\xE9rents types, on ne doit pas se soucier\\nde l\\u2019impl\\xE9mentation des classes ; l\\u2019auteur d\\u2019une classe peut mettre \\xE0 jour son impl\\xE9mentation\\nsans casser les interactions avec celle-ci ;\\ncela participe \\xE0 la mise en place d\\u2019un couplage faible entre objets ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xE9viter le couplage fort entre objets, notamment en injectant les objets de service\\n(n\\u2019ayant pas d\\u2019\\xE9tats) et en utilisant des \\xAB Factory \\xBB pour cr\\xE9er des objets\\ndu domaine (ayant un \\xE9tat).\")), mdx(\"br\", null), mdx(\"h2\", null, \"a.2) Les \\xAB Factory \\xBB\"), mdx(\"p\", null, \"Une \\xAB Factory \\xBB permet de cr\\xE9er des objets sans exposer leur logique de cr\\xE9ation\\n(au programme client appelant ces objets).\"), mdx(\"br\", null), mdx(\"p\", null, \"On cr\\xE9era donc des objets du domaine, des objets ayant un \\xE9tat, via une \\xAB Factory \\xBB sp\\xE9cifique.\"), mdx(\"br\", null), mdx(\"p\", null, \"De plus, pour ne pas d\\xE9pendre d\\u2019une \\xAB Factory \\xBB sp\\xE9cifique, on pourra cr\\xE9er une interface\\npour chaque impl\\xE9mentation d\\u2019une \\xAB Factory \\xBB.\"), mdx(\"br\", null), mdx(\"p\", null, \"Nous allons donc mettre \\xE0 jour notre API de gestion de films pour utiliser une factory :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extraire l'interface de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Film\"), \". Via IntelliJ :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clic droit sur \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Film\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Refactor\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Extract Interface\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"S\\xE9lection de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Rename original class and use interface where possible\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Rename implementation class to\"), \", \\xE9crivez : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FilmImpl\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Members To Form Interface\"), \", s\\xE9lectionnez (quasi) tout ; il n'est pas utile de\\ns\\xE9lectionner les m\\xE9thodes qui red\\xE9finissent la classe \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Object\"), \" (toString, equals,\\nhashCode...)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"L\\u2019interface \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Film\"), \" est maintenant impl\\xE9ment\\xE9e par \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FilmImpl\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"De la m\\xEAme fa\\xE7on, veuillez extraire l'interface de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"User\"), \" et renommer la classe\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"User\"), \" en \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UserImpl\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Attention, les classes impl\\xE9mentant vos interfaces ne doivent pas \\xEAtre \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"public\"), \".\\nSupprimez \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"public\"), \" pour rendre vos classes \\\"package friendly\\\". Ainsi, seulement la factory\\naura la possibilit\\xE9 de cr\\xE9er des objets du domaine.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cr\\xE9er la classe \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DomainFactory\"), \" au sein du package \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"domain\"), \". Voici le code :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package be.vinci.domain;\\n\\npublic class DomainFactory{\\n    @Override\\n    public Film getFilm() {\\n        return new FilmImpl();\\n    }\\n\\n    @Override\\n    public User getUser() {\\n        return new UserImpl();\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extraire l'interface de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DomainFactory\"), \" et renommer cette classe en \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DomainFactoryImpl\"), \" :\\nLe contrat (ou l\\u2019interface) \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DomainFactory\"), \" est maintenant impl\\xE9ment\\xE9e par le service \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DomainFactoryImpl\"), \"\\nqui permet la cr\\xE9ation d'instance de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FilmImpl\"), \" ou de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UserImpl\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mettez \\xE0 jour le code de votre API partout o\\xF9 des objets du domaine sont cr\\xE9\\xE9s en utilisant\\nla factory. Dans un premier temps, nous allons cr\\xE9er une instance de la factory l\\xE0 o\\xF9\\nelle doit \\xEAtre utilis\\xE9e. Par la suite, nous verrons comment injecter une d\\xE9pendance et devenir\\nind\\xE9pendant de l'impl\\xE9mentation de la factory l\\xE0 o\\xF9 elle est utilis\\xE9e.\\nLe seul endroit o\\xF9 l'on cr\\xE9e un objet du domaine directement, c'est dans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UserDataService\"), \".\\nModifiez cette classe :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{3,9}\",\n    \"{3,9}\": true\n  }, \"public class UserDataService {\\n    //...\\n    private static DomainFactory myDomainFactory = new DomainFactoryImpl();\\n    //...\\n    public ObjectNode register(String login, String password) {\\n        User tempUser = getOne(login);\\n        if (tempUser != null) // the user already exists !\\n            return null;\\n        tempUser = myDomainFactory.getUser();\\n    //...\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"V\\xE9rifiez dans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FilmDataService\"), \" et \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UserDataService\"), \" que \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"jsonDB\"), \" est cr\\xE9\\xE9 en passant\\nl'interface (et non l'impl\\xE9mentation), par exemple pour \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UserDataService\"), \" :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"private static Json<User> jsonDB = new Json<>(User.class);\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"A ce stade-ci, la librairie Jackson qui s'occupe de la d\\xE9s\\xE9rialisation ne sait pas\\nquelle impl\\xE9mentation est \\xE0 utiliser pour les POJOs. \"), mdx(\"br\", null), mdx(\"p\", null, \"Si vous ex\\xE9cutez l'application, elle lancera des exceptions lorsque vous appellerez certaines\\nop\\xE9rations.\"), mdx(\"br\", null), mdx(\"h2\", null, \"a.3) D\\xE9s\\xE9rialisation vers des POJOs cach\\xE9s par une interface\"), mdx(\"p\", null, \"Afin de diminuer le couplage des objets, les objets du domaine sont cach\\xE9s\\nderri\\xE8re des interfaces.\"), mdx(\"br\", null), mdx(\"p\", null, \"Afin que Jackson sache quelle impl\\xE9mentation est \\xE0 utiliser pour la d\\xE9s\\xE9rialisation\\nde JSON vers des POJOs associ\\xE9s \\xE0 une interface, il faut l\\u2019indiquer via l\\u2019annotation\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@JsonDeserialize\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour le code de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Film\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{3}\",\n    \"{3}\": true\n  }, \"import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\\n\\n@JsonDeserialize(as = FilmImpl.class)\\npublic interface Film {\\n\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour le code de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{3}\",\n    \"{3}\": true\n  }, \"import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\\n\\n@JsonDeserialize(as = UserImpl.class)\\npublic interface User {\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ex\\xE9cuter l'application et vous assurer que tout est en ordre.\"), mdx(\"br\", null), mdx(\"h2\", null, \"a.4) L\\u2019injection de d\\xE9pendances\"), mdx(\"p\", null, \"Afin d\\u2019injecter des d\\xE9pendances au sein d\\u2019une application impl\\xE9mentant Jakarta EE,\\n\\xAB Jakarta Dependency Injection \\xBB (ou Jakarta DI) permet d\\u2019obtenir des objets tout\\nen maximisant la r\\xE9utilisation, la testabilit\\xE9 et la maintenabilit\\xE9 en comparaison\\navec des approches plus traditionnelles (utilisation de constructeurs\\u2026).\"), mdx(\"p\", null, \"Pour pouvoir utiliser les API d\\u2019injection de d\\xE9pendances au sein de Jersey,\\nvoici la librairie qui est contenue dans l'achetype Maven utilis\\xE9 (voir fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"pom.xml\"), \") :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<dependency>\\n        <groupId>org.glassfish.jersey.inject</groupId>\\n        <artifactId>jersey-hk2</artifactId>\\n</dependency>\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Les services principaux de CDI (Contexts & Dependency Injection) sont :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mise \\xE0 disposition de contextes afin de lier le cycle de vie et les interactions de composants\\nayant un \\xE9tat avec des contextes bien d\\xE9finis ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"L\\u2019injection de d\\xE9pendance afin d\\u2019injecter des composants dans un application et choisir \\xE0\\nl\\u2019ex\\xE9cution l\\u2019impl\\xE9mentation particuli\\xE8re d\\u2019une interface (= le service) \\xE0 injecter.\")), mdx(\"br\", null), mdx(\"p\", null, \"Pour injecter un objet au sein d\\u2019une classe, il faut :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Configurer votre application JAX-RS pour indiquer comment l\\u2019injection de d\\xE9pendance doit cr\\xE9er vos instances ; on peut le faire via \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"bind(service).to(contrat)\"), \" et le cha\\xEEner avec \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".in( scope)\"), \". Les scopes disponibles sont :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"PerLookup\"), \" : pour chaque appel du service une instance du contrat est cr\\xE9\\xE9e.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"RequestScoped\"), \" : une instance cr\\xE9\\xE9 pour chaque requ\\xEAte.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Singleton\"), \" : une seule instance du contrat cr\\xE9\\xE9 par service.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Faire le binding via la red\\xE9finition d\\u2019un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"AbstractBinder\"), \". Nous allons lier le contrat de\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DomainFactory\"), \" au service \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"DomainFactoryImpl\"), \" pour que une et une seul instance soit cr\\xE9\\xE9e\\net puisse \\xEAtre inject\\xE9e dans l'application l\\xE0 o\\xF9 n\\xE9cessaire.\\nPour ce faire, veuillez cr\\xE9er la classe \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ApplicationBinder\"), \" au sein du package \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"utils\"), \" :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package be.vinci.utils;\\n\\nimport be.vinci.domain.DomainFactory;\\nimport be.vinci.domain.DomainFactoryImpl;\\nimport org.glassfish.hk2.utilities.binding.AbstractBinder;\\n\\n\\nimport jakarta.inject.Singleton;\\nimport jakarta.ws.rs.ext.Provider;\\n\\n@Provider\\npublic class ApplicationBinder extends AbstractBinder {\\n\\n    @Override\\n    protected void configure() {\\n        bind(DomainFactoryImpl.class).to(DomainFactory.class).in(Singleton.class);\\n    }\\n}\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Dans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Main\"), \", il faut configurer l'application pour qu'elle utilise le nouveau Provider (\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ApplicationBinder\"), \").\\nVeuillez mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"ResourceConfig\"), \" :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{3}\",\n    \"{3}\": true\n  }, \"final ResourceConfig rc = new ResourceConfig().packages(\\\"be.vinci.api\\\")\\n        .register(JacksonFeature.class)\\n        .register(ApplicationBinder.class);\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour rappel, l\\u2019annotation \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"@Provider\"), \" ci-dessus permet de fournir notre propre impl\\xE9mentation\\nd\\u2019un provider, de la rendre disponible \\xE0 l\\u2019ex\\xE9cution, \\xE0 notre application JAX-RS.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nous allons maitenant injecter la factory via l'annotation \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"@Inject\"), \", qui sera inject\\xE9e\\nsous forme de Singleton (une et une seule instance) conform\\xE9ment \\xE0 sa configuration\\nau sein de l'\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"AbstractBinder\"), \". Veuillez mettre \\xE0 jour le code de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"UserDataService\"), \" :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{3,9}\",\n    \"{3,9}\": true\n  }, \"public class UserDataService {\\n    //...\\n    @Inject\\n    private DomainFactory myDomainFactory;\\n    //...    \\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ex\\xE9cuter l'application et vous assurer que tout est en ordre.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour l\\u2019injection de d\\xE9pendance au sein de Jakarta, une bonne documentation n\\u2019est pas \\xE9vidente\\n\\xE0 trouver. Les notions donn\\xE9es ci-dessus devraient \\xEAtre suffisantes pour avancer. \"), mdx(\"br\", null), mdx(\"p\", null, \"Les services de donn\\xE9es sont aussi des d\\xE9pendances qui peuvent \\xEAtre utilis\\xE9es \\xE0 diff\\xE9rents\\nendroit dans votre code. Nous allons donc utiliser le framework afin d'injecter ces d\\xE9pendances.\"), mdx(\"br\", null), mdx(\"p\", null, \"Dans un premier temps, veuillez extraire l'interface de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmDataService\"), \" comme expliqu\\xE9\\npr\\xE9c\\xE9demment et renommer la classe en \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmDataServiceImpl\"), \".\"), mdx(\"p\", null, \"Veuillez aussi extraire l'interface de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserDataService\"), \" et renommer la classe\\nen \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserDataServiceImpl\"), \".\"), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ApplicationBinder\"), \" afin d'indiquer les impl\\xE9mentations \\xE0 utiliser ainsi\\nque le scope des instances :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{7-8}\",\n    \"{7-8}\": true\n  }, \"@Provider\\npublic class ApplicationBinder extends AbstractBinder {\\n\\n    @Override\\n    protected void configure() {\\n        bind(DomainFactoryImpl.class).to(DomainFactory.class).in(Singleton.class);\\n        bind(FilmDataServiceImpl.class).to(FilmDataService.class).in(Singleton.class);\\n        bind(UserDataServiceImpl.class).to(UserDataService.class).in(Singleton.class);\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Il reste maintenant \\xE0 injecter les instances de nos services de donn\\xE9es l\\xE0 o\\xF9 n\\xE9cessaire, au\\nsein de nos Root Resources et de nos filtres (package \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"api\"), \").\"), mdx(\"p\", null, \"Modifiez \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{4-5}\",\n    \"{4-5}\": true\n  }, \"@Singleton\\n@Path(\\\"films\\\")\\npublic class FilmResource {\\n    @Inject\\n    private FilmDataService myFilmDataService;\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Modifiez \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AuthsResource\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{4-5}\",\n    \"{4-5}\": true\n  }, \"@Singleton\\n@Path(\\\"/auths\\\")\\npublic class AuthsResource {\\n    @Inject\\n    private UserDataService myUserDataService;\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Modifiez \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AuthorizationRequestFilter\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{7-8}\",\n    \"{7-8}\": true\n  }, \"@Singleton\\n@Provider\\n@Authorize\\npublic class AuthorizationRequestFilter implements ContainerRequestFilter {\\n    private final Algorithm jwtAlgorithm = Algorithm.HMAC256(Config.getProperty(\\\"JWTSecret\\\"));\\n    private final JWTVerifier jwtVerifier = JWT.require(this.jwtAlgorithm).withIssuer(\\\"auth0\\\").build();\\n    @Inject\\n    private UserDataService myUserDataService ;\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Voila, le refactoring du code est termin\\xE9. \"), mdx(\"p\", null, \"Veuillez ex\\xE9cuter l'application et vous assurer que tout est en ordre.\"), mdx(\"br\", null), mdx(\"p\", null, \"Voici quelques r\\xE9f\\xE9rences si vous souhaitiez approfondir le sujet de CDI :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Basique Injection de d\\xE9pendances via Jersey\\u2019s HK2 : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://riptutorial.com/jersey/example/23632/basic-dependency-injection-using-jersey-s-hk2\"\n  }, \"https://riptutorial.com/jersey/example/23632/basic-dependency-injection-using-jersey-s-hk2\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"L\\u2019API pour l\\u2019injection de d\\xE9pendance de Jakarta fournit quelques infos int\\xE9ressantes : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jakarta.ee/specifications/cdi/3.0/apidocs/\"\n  }, \"https://jakarta.ee/specifications/cdi/3.0/apidocs/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"La sp\\xE9cification pour l\\u2019injection de d\\xE9pendance : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jakarta.ee/specifications/cdi/3.0/jakarta-cdi-spec-3.0.html\"\n  }, \"https://jakarta.ee/specifications/cdi/3.0/jakarta-cdi-spec-3.0.html\"))), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionB\"\n  }), \"b) Mapping d'exceptions \\xE0 des r\\xE9ponses\"), mdx(\"h2\", null, \"b.1) Introduction\"), mdx(\"p\", null, \"Dans le module 1 nous avons vu comment renvoyer des codes et des messages d\\u2019erreur\\n\\xE0 l\\u2019aide de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Il est possible aussi, au sein d\\u2019une application JAX-RS, de mapper directement\\nune Java Exception \\xE0 une r\\xE9ponse http d\\u2019erreur.\"), mdx(\"p\", null, \"Ceci est d\\xE9crit dans le manuel utilisateur de Jersey : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/representations.html#d0e6279\"\n  }, \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/representations.html#d0e6279\")), mdx(\"p\", null, \"En r\\xE9sum\\xE9, il suffit :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"soit de d\\xE9finir une exception sp\\xE9cifique qui \\xE9tend \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"WebApplicationException\"), \" ; \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"soit d\\u2019utiliser un provider personnalis\\xE9 pour mapper une exception \\xE0 une r\\xE9ponse ;\\ndans ce cas, le provider doit impl\\xE9menter l\\u2019interface \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"ExceptionMapper<E extends Throwable>\")), \". \")), mdx(\"br\", null), mdx(\"h2\", null, \"b.2) Exceptions h\\xE9ritant de WebApplicationException\"), mdx(\"p\", null, \"Il est possible de cr\\xE9er ses propres classes d'exceptions o\\xF9 l'exception prend directement\\nen charge une r\\xE9ponse HTTP d'erreur au client.\"), mdx(\"p\", null, \"Dans le package \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"api.filters\"), \", veuillez cr\\xE9er la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TokenDecodingException\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package be.vinci.api.filters;\\n\\nimport jakarta.ws.rs.WebApplicationException;\\nimport jakarta.ws.rs.core.Response;\\n\\npublic class TokenDecodingException extends WebApplicationException {\\n    public TokenDecodingException() {\\n        super(Response.status(Response.Status.UNAUTHORIZED)\\n                .build());\\n    }\\n\\n    public TokenDecodingException(String message) {\\n        super(Response.status(Response.Status.UNAUTHORIZED)\\n                .entity(message)\\n                .type(\\\"text/plain\\\")\\n                .build());\\n    }\\n\\n    public TokenDecodingException(Throwable cause) {\\n        super(Response.status(Response.Status.UNAUTHORIZED)\\n                .entity(cause.getMessage())\\n                .type(\\\"text/plain\\\")\\n                .build());\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AuthorizationRequestFilter\"), \", modifiez le code pour appeler\\nla nouvelle exception :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{12}\",\n    \"{12}\": true\n  }, \"@Override\\npublic void filter(ContainerRequestContext requestContext) throws IOException {\\n    String token = requestContext.getHeaderString(\\\"Authorization\\\");\\n    if (token == null) {\\n        requestContext.abortWith(Response.status(Response.Status.UNAUTHORIZED)\\n                .entity(\\\"A token is needed to access this resource\\\").build());\\n    } else {\\n        DecodedJWT decodedToken = null;\\n        try {\\n            decodedToken = this.jwtVerifier.verify(token);\\n        } catch (Exception e) {\\n            throw new TokenDecodingException(e);\\n        }\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Ajoutez une nouvelle requ\\xEAte permettant de tester cette nouvelle exception au sein de\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"films.http\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http-request\",\n    \"metastring\": \"{4}\",\n    \"{4}\": true\n  }, \"### Test the TokenDecoding Exception\\nPOST {{baseUrl}}/films\\nContent-Type: application/json\\nAuthorization: {{jamesToken}}modifiedtoken\\n\\n{\\n  \\\"title\\\": \\\"Venom: Let There Be Carnage\\\",\\n  \\\"duration\\\": 9,\\n  \\\"budget\\\": 110,\\n  \\\"link\\\": \\\"https://en.wikipedia.org/wiki/Venom:_Let_There_Be_Carnage\\\"\\n}\\n\")), mdx(\"br\", null), mdx(\"h2\", null, \"b.3) Mapping d'exceptions \\xE0 des r\\xE9ponses\"), mdx(\"p\", null, \"Le r\\xF4le des Root Resources est notamment de pr\\xE9parer des r\\xE9ponses aux clients. Il est donc OK\\nde lancer des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \" \\xE0 ce niveau l\\xE0.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour les exceptions lanc\\xE9es dans d'autres parties du code, comme par exemple dans\\nles services de donn\\xE9es,  il est int\\xE9ressant que les exceptions qui am\\xE8nent \\xE0 une\\nr\\xE9ponse au client soient trait\\xE9es de mani\\xE8re centralis\\xE9e plut\\xF4t que de g\\xE9rer des\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"try\"), \" / \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"catch\"), \" un peu partout.\"), mdx(\"br\", null), mdx(\"p\", null, \"On peut aussi souhaiter de centraliser certains traitement pour toutes les exceptions lanc\\xE9es,\\ny-compris les \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \" lanc\\xE9es dans les Root Resources.\"), mdx(\"p\", null, \"La centralisation de ces traitements d'exception peut se faire au sein d'un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ExceptionMapper\"), \".\\nC'est un lieu id\\xE9al pour traiter de tous les codes et messages d'erreur \\xE0 envoyer aux client,\\npour cr\\xE9er des logs...\"), mdx(\"br\", null), mdx(\"p\", null, \"Nous allons cr\\xE9er une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ExceptionMapper\"), \" nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebExceptionMapper\"), \" dans le package \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"utils\"), \"\\nqui doit attraper toutes les exceptions, afficher la stack trace, puis envoyer une r\\xE9ponse\\nau client. Si de l'exception est de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \", on souhaite envoyer une r\\xE9ponse contenant le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"status\"), \"\\net \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"message\"), \" de celle-ci. Sinon on renvoie le code d'erreur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"INTERNAL_SERVER_ERROR\"), \" et\\nle message associ\\xE9 \\xE0 l'exception  :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package be.vinci.utils;\\n\\nimport jakarta.ws.rs.WebApplicationException;\\nimport jakarta.ws.rs.core.Response;\\nimport jakarta.ws.rs.ext.ExceptionMapper;\\nimport jakarta.ws.rs.ext.Provider;\\n\\n@Provider\\npublic class WebExceptionMapper implements ExceptionMapper<Throwable> {\\n    @Override\\n    public Response toResponse(Throwable exception) {\\n        exception.printStackTrace();\\n        if (exception instanceof WebApplicationException)\\n            return ((WebApplicationException) exception).getResponse(); // the response is already prepared\\n        return  Response.status( Response.Status.INTERNAL_SERVER_ERROR)\\n                .entity(exception.getMessage())\\n                .build();\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \", il faut configurer l'application pour qu'elle utilise le nouveau Provider (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebExceptionMapper\"), \").\\nVeuillez mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ResourceConfig\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{4}\",\n    \"{4}\": true\n  }, \"final ResourceConfig rc = new ResourceConfig().packages(\\\"be.vinci.api\\\")\\n        .register(JacksonFeature.class)\\n        .register(ApplicationBinder.class)\\n        .register(WebExceptionMapper.class);\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Il y a un probl\\xE8me au niveau de Jersey. Si l'exception de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \"\\ncontient une r\\xE9ponse, les ExceptionMappers ne seront pas appel\\xE9s : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://stackoverflow.com/questions/46339265/how-to-catch-webapplicationexception-with-jax-rs\"\n  }, \"https://stackoverflow.com/questions/46339265/how-to-catch-webapplicationexception-with-jax-rs\")), mdx(\"p\", null, \"D\\xE8s lors, nous devons mettre \\xE0 jour le code des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \" lanc\\xE9es afin de faire appel\\nau constructeur prenant le code d'erreur en 1er param\\xE8tre, puis le message d'erreur en deuxi\\xE8me\\nparam\\xE8tre. Mettez \\xE0 jour le code des classes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AuthsResource\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" et \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"TokenDecodingException\"), \".\"), mdx(\"p\", null, \"Voici un exemple de mise \\xE0 jour pour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AuthsResource\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"numbered {14,21,33,41}\",\n    \"numbered\": true,\n    \"{14,21,33,41}\": true\n  }, \"@Singleton\\n@Path(\\\"/auths\\\")\\npublic class AuthsResource {\\n    @Inject\\n    private UserDataService myUserDataService;\\n\\n    @POST\\n    @Path(\\\"login\\\")\\n    @Consumes(MediaType.APPLICATION_JSON)\\n    @Produces(MediaType.APPLICATION_JSON)\\n    public ObjectNode login(JsonNode json) {\\n        // Get and check credentials\\n        if (!json.hasNonNull(\\\"login\\\") || !json.hasNonNull(\\\"password\\\")) {\\n            throw new WebApplicationException(\\\"login or password required\\\", Response.Status.BAD_REQUEST);\\n        }\\n        String login = json.get(\\\"login\\\").asText();\\n        String password = json.get(\\\"password\\\").asText();\\n        // Try to login\\n        ObjectNode publicUser = myUserDataService.login(login, password);\\n        if (publicUser == null) {\\n            throw new WebApplicationException(\\\"Login or password incorrect\\\", Response.Status.UNAUTHORIZED);\\n        }\\n        return publicUser;\\n    }\\n\\n    @POST\\n    @Path(\\\"register\\\")\\n    @Consumes(MediaType.APPLICATION_JSON)\\n    @Produces(MediaType.APPLICATION_JSON)\\n    public ObjectNode register(JsonNode json) {\\n        // Get and check credentials\\n        if (!json.hasNonNull(\\\"login\\\") || !json.hasNonNull(\\\"password\\\")) {\\n            throw new WebApplicationException(\\\"login or password required\\\", Response.Status.BAD_REQUEST);\\n        }\\n        String login = json.get(\\\"login\\\").asText();\\n        String password = json.get(\\\"password\\\").asText();\\n\\n        // Try to login\\n        ObjectNode publicUser = myUserDataService.register(login, password);\\n        if (publicUser == null) {\\n            throw new WebApplicationException(\\\"this resource already exists\\\", Response.Status.CONFLICT);\\n        }\\n        return publicUser;\\n\\n    }\\n\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ex\\xE9cuter l'application et vous assurer que tout est en ordre.\"), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionC\"\n  }), \"c) S\\xE9rialisation de POJOs et filtrage d\\u2019attributs\"), mdx(\"h2\", null, \"c.1) Introduction\"), mdx(\"p\", null, \"Il existe pas mal de situation o\\xF9 l'on souhaiterait renvoyer qu'un subset des attributs\\nd'un POJO (ou d'une liste de POJOs). \"), mdx(\"p\", null, \"Imaginez par exemple que l'on souhaite lire la liste de tous les utilisateurs.\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ajouter la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserResource\"), \" au sein du package \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"api\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package be.vinci.api;\\n\\nimport be.vinci.api.filters.Authorize;\\nimport be.vinci.domain.User;\\nimport be.vinci.services.UserDataService;\\nimport jakarta.inject.Inject;\\nimport jakarta.inject.Singleton;\\nimport jakarta.ws.rs.GET;\\nimport jakarta.ws.rs.Path;\\nimport jakarta.ws.rs.Produces;\\nimport jakarta.ws.rs.core.MediaType;\\n\\nimport java.util.List;\\n\\n@Singleton\\n@Path(\\\"/users\\\")\\npublic class UserResource {\\n\\n    @Inject\\n    private UserDataService myUserDataService;\\n\\n    @GET\\n    @Produces(MediaType.APPLICATION_JSON)\\n    @Authorize\\n    public List<User> getAll() {\\n        return myUserDataService.getAll();\\n    }\\n\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Nous allons tester l'op\\xE9ration de lecture des utilisateurs qui est prot\\xE9g\\xE9e par un token.\"), mdx(\"p\", null, \"Ajoutez le script \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"user.http\"), \" \\xE0 votre projet ou module IntelliJ :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http-requests\"\n  }, \"### Login the default user\\nPOST {{baseUrl}}/auths/login\\nContent-Type: application/json\\n\\n{\\n\\\"login\\\":\\\"james\\\",\\n\\\"password\\\":\\\"password\\\"\\n}\\n\\n> {%\\nclient.global.set(\\\"jamesToken\\\", response.body.token);\\n%}\\n\\n### Read All users\\nGET {{baseUrl}}/users\\nAuthorization: {{jamesToken}}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Si vous utilisez VS Code, convertissez ce script en cr\\xE9ant une request variable pour r\\xE9cup\\xE9rer\\nle token.\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ex\\xE9cutez l'API de gestion de films et lancer les requ\\xEAtes du script \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"user.http\"), \".\"), mdx(\"p\", null, \"On remarque que toutes les informations des utilisateurs, y-compris le password, sont renvoy\\xE9es\\nau client.\\nDans ce cas-ci, il est important de filtrer l'attribut password de la repr\\xE9sentation JSON qui sera\\nrenvoy\\xE9e au client.\"), mdx(\"br\", null), mdx(\"p\", null, \"Il existe plusieurs m\\xE9canismes pour filtrer des attributs lors d\\u2019op\\xE9rations de\\ns\\xE9rialisation vers du JSON ou de d\\xE9s\\xE9rialisation \\xE0 partir de JSON.\"), mdx(\"br\", null), mdx(\"h2\", null, \"c.2) Filtrer des attributs de la repr\\xE9sentation JSON d'un POJO : les vues JSON\"), mdx(\"p\", null, \"Un des m\\xE9canismes de filtrage d'attributs qui a \\xE9t\\xE9 s\\xE9lectionn\\xE9 pour ce cours est la\\ncr\\xE9ation de vues JSON au sein d\\u2019un POJO.\"), mdx(\"br\", null), mdx(\"p\", null, \"Ce m\\xE9canisme est r\\xE9ellement utile dans les cas o\\xF9 l'on doit filtrer diff\\xE9remment les attributs\\nd'un m\\xEAme POJO en fonction de l'op\\xE9ration de s\\xE9rialisation.\"), mdx(\"p\", null, \"Par exemple, si vous devez s\\xE9rialiser des donn\\xE9es lors d'une r\\xE9ponse \\xE0 un client, vous\\nne souhaitez pas s\\xE9rialiser le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"password\"), \" d'un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \".\\nPar contre, lorsque vous s\\xE9rialiser des donn\\xE9es au sein d'un fichier JSON, pour enregistrer\\nles donn\\xE9es d'un nouvel \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \", l\\xE0 vous souhaitez s\\xE9rialiser le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"password\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour ce faire, nous allons cr\\xE9er deux vues JSON que nous pourrons associer au POJO \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \" impl\\xE9ment\\xE9\\npar \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \" : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"une vue publique qui contient tous les attributs qui peuvent \\xEAtre lus par les clients de\\nl\\u2019API (l\\u2019id et le login dans le cadre d'un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"User\"), \") ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"une vue interne qui contient tous les attributs qui peuvent \\xEAtre \\xE9crits par l\\u2019API suite\\naux op\\xE9rations de cr\\xE9ation et de mise \\xE0 jour d\\u2019une ressource\\n(l\\u2019id, le login et le password dans le cadre d'un \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"User\"), \").\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez cr\\xE9er le package \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"view\"), \" et y ajouter la class \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Views\"), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package be.vinci.views;\\n\\npublic class Views {\\n    public static class Public {\\n    }\\n\\n    public static class Internal extends Public {\\n    }\\n\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Cette classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Views\"), \" va nous permettre d'annoter des vues JSON gr\\xE2ce aux deux classes\\nimbriqu\\xE9es vides.\"), mdx(\"br\", null), mdx(\"p\", null, \"Attention \\xE0 ce que la vue qui doit reprendre tous les attributs \\xE9tende la vue plus restreinte.\"), mdx(\"br\", null), mdx(\"p\", null, \"Ensuite, nous pouvons annotez nos vues JSON au sein du POJO \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \"\\nvia l\\u2019annotation \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@JsonView\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1,3,5,7}\",\n    \"{1,3,5,7}\": true\n  }, \"@JsonInclude(JsonInclude.Include.NON_NULL) // ignore all null fields in order to avoid sending props not linked to a JSON view\\nclass UserImpl implements User {\\n    @JsonView(Views.Public.class)\\n    private int id;\\n    @JsonView(Views.Public.class)\\n    private String login;\\n    @JsonView(Views.Internal.class)\\n    private String password;\\n\\n    @Override\\n    public String getLogin() {\\n        return login;\\n    }\\n    //.....\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"L\\u2019annotation \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@JsonInclude(JsonInclude.Include.NON_NULL)\"), \" est tr\\xE8s importante :\\nelle indique que seulement les attributs non nuls seront inclus dans la s\\xE9rialisation.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour filtrer seulement la vue publique d\\u2019une POJO lors de la s\\xE9rialisation,\\nvoici ce qui doit encore \\xEAtre fait.\\nOn va renvoyer un POJO, ou une liste de POJOs dont tous les champs qui ne font pas partie\\nde la vue publique sont initialis\\xE9s \\xE0 la valeur par d\\xE9faut (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"null\"), \" pour les objets). \"), mdx(\"br\", null), mdx(\"p\", null, \"Puis, au sein d'une Root Resource (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserResource\"), \") on renverra ce POJO, ou liste de POJOs,\\net la s\\xE9rialisation sera fait automatiquement\\nvers du JSON, en ignorant les champs nuls (car, pour rappel, nous avons indiqu\\xE9\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@JsonInclude(JsonInclude.Include.NON_NULL)\"), \" au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \").\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ajouter deux m\\xE9thodes au sein de la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Json\"), \" permettant de filtrer\\nune vue publique :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"public <T> List<T> filterPublicJsonViewAsList(List<T> list) {\\n    try {\\n        JavaType type = jsonMapper.getTypeFactory().constructCollectionType(List.class, this.type);\\n        // serialize using JSON Views : public view (all fields not required in the\\n        // views are not serialized)\\n        String publicItemListAsString = jsonMapper.writerWithView(Views.Public.class).writeValueAsString(list);\\n        // deserialize using JSON Views : Public View (all fields that are not serialized\\n        // are set to their default values in the POJOs)\\n        return jsonMapper.readerWithView(Views.Public.class).forType(type).readValue(publicItemListAsString);\\n    } catch (JsonProcessingException e) {\\n        e.printStackTrace();\\n        return null;\\n    }\\n\\n}\\n\\npublic <T> T filterPublicJsonView(T item) {\\n    try {\\n        // serialize using JSON Views : public view (all fields not required in the\\n        // views are not serialized)\\n        String publicItemAsString = jsonMapper.writerWithView(Views.Public.class).writeValueAsString(item);\\n        // deserialize using JSON Views : Public View (all fields that are not serialized\\n        // are set to their default values in the POJO)\\n        return jsonMapper.readerWithView(Views.Public.class).forType(type).readValue(publicItemAsString);\\n    } catch (JsonProcessingException e) {\\n        e.printStackTrace();\\n        return null;\\n    }\\n\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Il nous reste \\xE0 filtrer la liste de POJOs renvoy\\xE9e par la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAll\"), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserDataServiceImpl\"), \".\\nVeuillez mettre \\xE0 jour la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAll\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{4}\",\n    \"{4}\": true\n  }, \"@Override\\npublic List<User> getAll() {\\n    var items = jsonDB.parse(COLLECTION_NAME);\\n    return jsonDB.filterPublicJsonViewAsList(items);\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"La m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"filterPublicJsonViewAsList\"), \" va mettre les valeurs par d\\xE9faut\\npour tous les champs non publics (ici juste le password) d'un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \" et\\nrenvoyer une liste de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \".\"), mdx(\"p\", null, \"Ensuite, la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAll\"), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserResource\"), \" va renvoyer cette liste de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{4}\",\n    \"{4}\": true\n  }, \"@GET\\n@Produces(MediaType.APPLICATION_JSON)\\n@Authorize\\npublic List<User> getAll() {\\n    System.out.println(\\\"getAll\\\");\\n    return myUserDataService.getAll();\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Le framework, via Jackson, va automatiquement convertir cette liste de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \" dont le password\\nest \\xE0 null (valeur par d\\xE9faut d'une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"String\"), \") en JSON, sans s\\xE9rialiser le champs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"password\"), \"\\ncar nous avons annot\\xE9 (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@JsonInclude(JsonInclude.Include.NON_NULL)\"), \") \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \"\\npour sp\\xE9cifier que seulement les attributs non nuls seront inclus dans la s\\xE9rialisation.\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ex\\xE9cutez l'API de gestion de films et lancer les requ\\xEAtes du script \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"user.http\"), \".\"), mdx(\"p\", null, \"Vous remarquerez que le champs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"password\"), \" a bien \\xE9t\\xE9 filtr\\xE9 !\"), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Attention\"), \" : cette m\\xE9thode de filtrage peut causer des soucis si vous devez filtrer\\ndes attributs de type primitif : \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"int\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"double\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"boolean\"), \"...\\nLa valeur par d\\xE9faut de ces attributs, n'est pas \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"null\"), \". D\\xE8s lors, ces attributs\\nne pourront pas \\xEAtre filtr\\xE9s et seront s\\xE9rialis\\xE9s m\\xEAme si vous les annoter de\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@JsonView(Views.Internal.class)\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour visualiser cela, nous allons tester l'ajout d'un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \" avec deux nouvelles propri\\xE9t\\xE9s.\\nVeuillez mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1,9-12}\",\n    \"{1,9-12}\": true\n  }, \"@JsonInclude(JsonInclude.Include.NON_NULL) // ignore all null fields in order to avoid sending props not linked to a JSON view\\nclass UserImpl implements User {class UserImpl implements User {\\n   @JsonView(Views.Public.class)\\n   private int id;\\n   @JsonView(Views.Public.class)\\n   private String login;\\n   @JsonView(Views.Internal.class)\\n   private String password;\\n   @JsonView(Views.Internal.class)\\n   private int age;\\n   @JsonView(Views.Internal.class)\\n   private boolean married ;    \\n\\n   @Override\\n   public int getAge() {\\n       return age;\\n   }\\n\\n   @Override\\n   public void setAge(int age) {\\n       this.age = age;\\n   }\\n\\n   @Override\\n   public boolean isMarried() {\\n       return married;\\n   }\\n\\n   @Override\\n   public void setMarried(boolean married) {\\n       this.married = married;\\n   }\\n   //.....\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez aussi mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \" en ajoutant ce code :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{3-9}\",\n    \"{3-9}\": true\n  }, \"@JsonDeserialize(as = UserImpl.class)\\npublic interface User {\\n    int getAge();\\n\\n    void setAge(int age);\\n\\n    boolean isMarried();\\n\\n    void setMarried(boolean married);\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"AuthsResource\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{7-8,12}\",\n    \"{7-8,12}\": true\n  }, \"@POST\\n@Path(\\\"register\\\")\\n@Consumes(MediaType.APPLICATION_JSON)\\n@Produces(MediaType.APPLICATION_JSON)\\npublic ObjectNode register(User user) {\\n    // Get and check credentials\\n    if (user == null || user.getPassword() == null || user.getPassword().isBlank()\\n    || user.getLogin() == null || user.getLogin().isBlank()) {\\n        throw new WebApplicationException(\\\"login or password required\\\", Response.Status.BAD_REQUEST);\\n    }\\n    // Try to login\\n    ObjectNode publicUser = myUserDataService.register(user);\\n    if (publicUser == null) {\\n        throw new WebApplicationException(\\\"this resource already exists\\\", Response.Status.CONFLICT);\\n    }\\n    return publicUser;\\n\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez mettre \\xE0 jour la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"register\"), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserDataServiceImpl\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{7-8,12}\",\n    \"{7-8,12}\": true\n  }, \" @Override\\npublic ObjectNode register(User user) {        \\n    if (getOne(user.getLogin()) != null) // the user already exists !\\n        return null;        \\n    \\n    user.setPassword(user.hashPassword(user.getPassword()));\\n\\n    user = createOne(user); // add an id to the user and serialize it in db.json\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez aussi mettre \\xE0 jour l'interface \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserDataService\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1}\",\n    \"{1}\": true\n  }, \"ObjectNode register(User user);\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ajouter ces nouvelles requ\\xEAtes HTTP dans votre fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users.http\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http-requests\",\n    \"metastring\": \"{1}\",\n    \"{1}\": true\n  }, \"### Register twig\\nPOST {{baseUrl}}/auths/register\\nContent-Type: application/json\\n\\n{\\n  \\\"login\\\":\\\"twig\\\",\\n  \\\"password\\\":\\\"twig\\\",\\n  \\\"age\\\": 25,\\n  \\\"married\\\": true\\n}\\n\\n### Login twig\\nPOST {{baseUrl}}/auths/login\\nContent-Type: application/json\\n\\n{\\n  \\\"login\\\":\\\"twig\\\",\\n  \\\"password\\\":\\\"twig\\\"\\n}\\n\\n> {%\\nclient.global.set(\\\"twigToken\\\", response.body.token);\\n%}\\n\\n### Read All users\\nGET {{baseUrl}}/users\\nAuthorization: {{twigToken}}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ex\\xE9cuter ces 3 requ\\xEAtes dans l'ordre.\\nOn voit que la derni\\xE8re requ\\xEAte nous renvoie tant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"age\"), \" que \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"married\"), \" alors qu'on souhaite\\nles filtrer. De plus, les valeurs renvoy\\xE9es sont les valeurs par d\\xE9faut des attributs, m\\xEAme si\\non avait initialis\\xE9s ceux-ci.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour r\\xE9soudre cela, dans un premier temps, nous allons filtrer lors de la s\\xE9rialisation\\ntous les attributs qui ont une valeur par d\\xE9faut.\"), mdx(\"p\", null, \"Pour visualiser cela, veuillez mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1}\",\n    \"{1}\": true\n  }, \"@JsonInclude(JsonInclude.Include.NON_DEFAULT) // ignore all default fields in order to avoid sending props not linked to a JSON view\\nclass UserImpl implements User {class UserImpl implements User {\\n   @JsonView(Views.Public.class)    \\n   //.....\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ex\\xE9cuter la derni\\xE8re requ\\xEAtes HTTP de votre fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users.http\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-http-requests\"\n  }, \"### Read All users\\nGET {{baseUrl}}/users\\nAuthorization: {{twigToken}}\\n\")), mdx(\"p\", null, \"La limitation de cette solution, c'est que vous ne pouvez pas s\\xE9rialiser les valeurs par d\\xE9faut.\"), mdx(\"p\", null, \"Cela peut \\xEAtre acceptable si vous ne devez jamais s\\xE9rialiser des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"0\"), \" pour des nombres,\\npar contre, \\xE7a ne l'est pas si vous devez s\\xE9rialiser des \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"boolean\"), \" : si la valeur est\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"false\"), \" pour un attribut : il sera d'office filtr\\xE9 (valeur par d\\xE9faut d'un boolean)\\nm\\xEAme si \\xE7a n'est pas ce que l'on veut.\\nN'h\\xE9sitez pas \\xE0 visualiser ce sc\\xE9nario si cela vous int\\xE9resse : il suffit d'appliquer la vue \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Public\"), \"\\n\\xE0 l'attribut \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"married\"), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \" et de r\\xE9ex\\xE9cuter la derni\\xE8re requ\\xEAte HTTP\\nde \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"users.http\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour r\\xE9soudre cette derni\\xE8re partie, nous pouvons utiliser les \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Wrappers\"), \"\\\"\\ndes types primitifs : \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Integer\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Boolean\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez convertir \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"age\"), \" en \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Integer\"), \" et \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"married\"), \" en \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Boolean\"), \" au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \".\\nPour ce faire via IntelliJ : clic droit sur le type d'un attribut, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Refactor\"), \",\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Type Migration...\"), \", indiquez le nouveau type (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Integer\"), \" ou \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Boolean\"), \") puis clic sur\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Refactor\")), mdx(\"br\", null), mdx(\"p\", null, \"Une fois cela r\\xE9alis\\xE9, ex\\xE9cutez votre API.\"), mdx(\"p\", null, \"Vous verrez que les attributs filtr\\xE9s ne sont plus s\\xE9rialis\\xE9s lors de la r\\xE9ponse faite\\naux requ\\xEAtes clients. De plus, les attributs non\\ninitialis\\xE9s (dont la valeur vaut \\\"null\\\") ne sont pas s\\xE9rialis\\xE9s au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"db.json\"), \"\\n(la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"valueToTree\"), \" dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Json\"), \" ne cr\\xE9e pas de propri\\xE9t\\xE9 JSON pour les attributs\\nqui sont \\\"null\\\").\"), mdx(\"br\", null), mdx(\"h2\", null, \"c.3) Filtrer des attributs de la repr\\xE9sentation JSON d'un POJO : sp\\xE9cifier l'acc\\xE8s \\xE0 une propri\\xE9t\\xE9\"), mdx(\"p\", null, \"Un autre m\\xE9canisme de filtrage d'attributs est la sp\\xE9cification de comment les attributs peuvent\\n\\xEAtre acc\\xE9d\\xE9s pendant la s\\xE9rialisation (\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"read\"), \"\\\" du point de vue la propri\\xE9t\\xE9 du POJO)\\net la d\\xE9s\\xE9rialisation (\\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"write\"), \"\\\"\\\").\"), mdx(\"p\", null, \"Il est plus simple \\xE0 mettre en place que le m\\xE9canisme pr\\xE9c\\xE9dent.\"), mdx(\"br\", null), mdx(\"p\", null, \"Ce m\\xE9canisme est applicable que dans les cas o\\xF9 toutes les op\\xE9rations de s\\xE9rialisation\\nd'un m\\xEAme POJO doivent filtrer les m\\xEAmes atttributs :\\npar exemple, si vous devez s\\xE9rialiser des donn\\xE9es que lors de l'envoi des donn\\xE9es aux clients,\\net que vous souhaitez toujours filtrer les m\\xEAmes donn\\xE9es, alors ce m\\xE9canisme vous est recommand\\xE9.\"), mdx(\"br\", null), mdx(\"p\", null, \"C'est \\xE9ventuellement le cas lorsque l'on utilise une base de donn\\xE9es pour faire\\npersister les donn\\xE9es.\\nIl n'est d\\xE8s lors pas n\\xE9cessaire de s\\xE9rialiser les donn\\xE9es tant pour les enregistrer\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"dans un fichier JSON, on doit juste renvoyer des donn\\xE9es JSON pour r\\xE9pondre aux requ\\xEAtes clientes.\"), mdx(\"br\", null), mdx(\"p\", null, \"Voici au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"UserImpl\"), \" un exemple de comment filtrer l'attribut \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"password\"), \"\\npour toutes les op\\xE9rations de s\\xE9rialisation d'un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1}\",\n    \"{1}\": true\n  }, \"class UserImpl implements User {\\n    private int id;\\n    private String login;\\n    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\\n    private String password;\\n    private Integer age;\\n    private Boolean married ;  \\n    //.....\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Le simple ajout de l'annotation \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@JsonProperty(access = JsonProperty.Access.WRITE_ONLY)\"), \" permet\\nde ne jamais s\\xE9rialiser le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"password\"), \". Par contre, il sera possible de d\\xE9s\\xE9rialiser du JSON\\n(contenant une propri\\xE9t\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"password\"), \") pour cr\\xE9er un objet \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"User\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Les diff\\xE9rentes sp\\xE9cifications d'acc\\xE8s aux propri\\xE9t\\xE9s lors de la s\\xE9rialisation sont d\\xE9finis ici :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://fasterxml.github.io/jackson-annotations/javadoc/2.6/com/fasterxml/jackson/annotation/JsonProperty.Access.html\"\n  }, \"https://fasterxml.github.io/jackson-annotations/javadoc/2.6/com/fasterxml/jackson/annotation/JsonProperty.Access.html\")), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Code du tutoriel\"), \" : si vous souhaitez directement acc\\xE9der au code de la fin du tutoriel de\\ncr\\xE9ation d'une API de gestion de films pour ce module 3 :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/baja-demos/tree/main/films-api\"\n  }, \"https://github.com/e-vinci/baja-demos/tree/main/films-api\")), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionD\"\n  }), \"d) Excercice 3.1\"), mdx(\"p\", null, \"Nous souhaitons continuer le d\\xE9veloppement du Headless CMS d\\xE9marr\\xE9 au module 2. \"), mdx(\"p\", null, \"Veuillez faire un refactoring du code de l'exercice 2.1 selon les concepts vus dans\\nce module 3 : abstraction de l\\u2019impl\\xE9mentation de classes par l\\u2019utilisation d\\u2019interfaces,\\najout de factory et injection de d\\xE9pendances.\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez centraliser la gestion des exceptions au sein d'un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"ExceptionMapper\"), \" pour notamment\\nenvoyer chaque message d'exception associ\\xE9 \\xE0 une requ\\xEAte dans le corps de la r\\xE9ponse.\"), mdx(\"br\", null), \"Veuillez relancer les tests des m\\xE9thodes offertes par votre application JAX-RS \\xE0 l\\u2019aide d'un client l\\xE9ger (HTTP client d'IntelliJ ou Rest Client de VS Code) pour vous assurer que votre refactoring est OK.\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"Est-ce que vous avez des blocs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"try/catch\"), \" dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PageResource\"), \" ?\"), mdx(\"p\", null, \"Si oui, faites-en sorte de les supprimer, tout en continuant de renvoyer un message d'erreur\\nau clients si n\\xE9cessaire.\"), mdx(\"br\", null), mdx(\"p\", null, \"Quelques tips :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continuez le projet d\\xE9velopp\\xE9 dans le cadre de l'Exercice 2.1 du module 2. Il n'est pas n\\xE9cessaire\\nde cr\\xE9er un nouveau projet.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reprenez \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"WebExceptionMapper\"), \", vu dans le tutoriel de ce module 3, au sein de votre projet.\")), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionE\"\n  }), \"e) Excercice 3.2 optionnel\"), mdx(\"p\", null, \"Nous souhaitons continuer le d\\xE9veloppement du Headless CMS d\\xE9marr\\xE9 au module 2.\\nPour ce faire, nous allons cr\\xE9er la RESTful API qui s\\u2019occupera de g\\xE9rer les contenus\\nde type \\xAB News \\xBB.\"), mdx(\"br\", null), mdx(\"p\", null, \"Une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"News\"), \" aura un id, un titre, une courte description, un contenu, un auteur,\\nun statut de publication, une date et heure de cr\\xE9ation\\n(par d\\xE9faut la date syst\\xE8me au moment de la cr\\xE9ation de l\\u2019instance),\\nune date et heure ultime de p\\xE9remption (un mois plus tard que la date de cr\\xE9ation par d\\xE9faut),\\nune page associ\\xE9e (null par d\\xE9faut) ainsi qu\\u2019une position dans la page associ\\xE9e.\\nLe statut de publication d\\u2019une news peut actuellement prendre comme valeur :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xAB hidden \\xBB\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xAB published \\xBB\")), mdx(\"br\", null), mdx(\"p\", null, \"Seul un utilisateur authentifi\\xE9 pourra cr\\xE9er des news.\\nLa modification d\\u2019une news, tout comme la suppression d\\u2019une news ne pourra se faire que\\npar son auteur.\"), mdx(\"br\", null), mdx(\"p\", null, \"Est-ce qu\\u2019un auteur d\\u2019une news pourra associer une page \\xE0 sa news qui est d\\u2019un autre auteur ?\\nPour cet exercice, oui, l\\u2019association vers une page pourra se faire ind\\xE9pendamment de\\nl\\u2019auteur de la page.\"), mdx(\"p\", null, \"La lecture d\\u2019une news, ou de toutes les news, pourra \\xEAtre r\\xE9alis\\xE9e par n\\u2019importe quel utilisateur\\nanonyme ou authentifi\\xE9 pour les news dont le statut vaut \\xAB published \\xBB.\\nPour les news dont le statut vaut \\xAB hidden \\xBB, seul leur auteur authentifi\\xE9 pourra les lire.\"), mdx(\"br\", null), mdx(\"p\", null, \"On souhaite aussi rendre possible la lecture de toutes les news associ\\xE9es \\xE0 une page ;\\npour ce faire la requ\\xEAte devra indiquer la page pour laquelle on souhaite obtenir\\nles news associ\\xE9es. \"), mdx(\"p\", null, \"Tous les news dont le statut vaut \\xAB published \\xBB pourront \\xEAtre lues par n'importe\\nquel utilisateur (anonyme ou authentifi\\xE9). \"), mdx(\"p\", null, \"Pour les news dont le statut vaut \\xAB hidden \\xBB, seul leur auteur authentifi\\xE9 pourra les lire.\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez d\\xE9velopper une application JAX-RS mettant \\xE0 disposition les op\\xE9rations\\nd\\xE9crites ci-dessus, en suivant les bonnes pratiques donn\\xE9es dans ce module : abstraction\\nde l\\u2019impl\\xE9mentation, cr\\xE9ation de \\xAB Factory \\xBB, injection de d\\xE9pendances pour vos services\\u2026\"), mdx(\"br\", null), mdx(\"p\", null, \"Dans un premier temps, veuillez formaliser les op\\xE9rations associ\\xE9es \\xE0 vos RESTful APIs\\nsous forme d\\u2019un tableau dans un fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"README.md\"), \".\\nVotre tableau devrait reprendre les conventions REST pr\\xE9sent\\xE9es au module 2\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"(\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/js/modules/2#sectionC\"\n  }, \"c) Rappel de conventions sur les RESTful APIs, authentification & autorisation\"), \").\"), mdx(\"br\", null), \"Lors de l\\u2019impl\\xE9mentation de vos RESTful APIs, veuillez tester toutes les m\\xE9thodes offertes par votre application JAX-RS \\xE0 l\\u2019aide d'un client l\\xE9ger (HTTP client d'IntelliJ ou Rest Client de VS Code).\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"Quelques tips :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Continuez le projet d\\xE9velopp\\xE9 dans le cadre de l'Exercice 3.1. Il n'est pas n\\xE9cessaire\\nde cr\\xE9er un nouveau projet.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour la s\\xE9rialisation de dates, nous vous conseillons ce lien : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.baeldung.com/jackson-serialize-dates\"\n  }, \"https://www.baeldung.com/jackson-serialize-dates\"), \".\\nLe plus simple est d\\u2019utiliser des instances de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Date\"), \" en les annotant via\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"@JsonFormat\"), \" si vous souhaitez avoir une date format\\xE9e sous forme de String plut\\xF4t\\nqu\\u2019un nombre long.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour des valeurs par d\\xE9faut de POJOs, n\\u2019h\\xE9sitez pas \\xE0 utiliser le constructeur sans param\\xE8tre :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"La date de cr\\xE9ation correspond \\xE0 la date \\xE0 l\\u2019instant de la cr\\xE9ation de l\\u2019instance.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"La date de p\\xE9remption peut \\xEAtre automatiquement mise \\xE0 un mois apr\\xE8s la date de\\ncr\\xE9ation en utilisant un objet de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Calendar\"), \" pour la conversion d\\u2019une date.\")))), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Challenges optionnels\"), \" : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nous vous proposons d\\u2019utiliser les vues JSON afin de ne jamais \\xE9crire\\ndans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"db.json\"), \" toutes les infos li\\xE9es \\xE0 la page associ\\xE9e \\xE0 une news. On souhaiterait juste\\nenregistrer l'id et le titre de la page.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"De plus, lorsque que des infos associ\\xE9es \\xE0 une news sont renvoy\\xE9es \\xE0 un client,\\non ne souhaite pas renvoyer toutes les infos de la page associ\\xE9e \\xE0 la news.\\nDans ce cas-ci, on enregistra et renverra que ces deux propri\\xE9t\\xE9s d\\u2019une page associ\\xE9e \\xE0 une news :\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"id\"), \" et \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"title\"), \".\", mdx(\"br\", null))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"modules/3","frontmatter":{"title":"Module 3 : JAX-RS avancé","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"JAX-RS avancé","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='150'%20viewBox='0%200%20500%20150'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M123%2025l-16%2017-1-9-1-10-37%2039-36%2041%2039%2010%2040%2010%203-3c13-12%2024-35%2028-57%203-14%201-54-2-56l-17%2018m47%2058l-1%2018v17l-3%202c-3%202-7%203-9%200-2-1-2-1-4%201-7%204%207%2011%2015%207%207-4%207-5%208-27V82h-3l-3%201m27%202c-3%205-16%2043-16%2043l3%201c4%200%204%200%206-5l2-5h17l2%205c2%204%202%205%205%205%204%200%204%200%204-2a2053%202053%200%2000-19-45c-3%200-3%200-4%203m28%2021v23h7v-7c0-7%200-8%204-11l4-4%207%2011%206%2011h15l2-6%202-5h9l8%201%202%205c2%205%202%205%206%205l3-1a519%20519%200%2000-19-46c-3%200-2-2-13%2028l-7%2018c-1%200-16-27-15-28l7-9c7-9%207-9%202-9-3%200-4%201-13%2012l-9%2012-1-12V82h-7v24m81%200v23h7v-20h9l4%2010%205%2010h4c5%200%205%201-1-11l-5-9%203-3c5-4%206-9%205-14-2-8-7-10-23-10h-8v24m33-20v3h13v40h7V89h12v-7h-32v4m44-1l-16%2044h4c3%200%203-1%205-5l2-5h17l2%205c2%204%202%205%205%205l4-1a698%20698%200%2000-19-46c-2%200-3%200-4%203m44%2021v23h29v-7h-22v-13h19v-7h-19V89h22v-7h-29v24m36%200v23h29v-7h-22v-13h19v-7h-19V89h22v-7h-29v24M313%2096v7h7c10-1%2014-6%209-12-1-2-2-2-9-2h-7v7m-113-2l-6%2017%207%201%206-1a691%20691%200%2001-7-17m77%209l-3%209h7l6-1-6-17-4%209m106-2l-3%2010%207%201%206-1a691%20691%200%2001-6-18l-4%208M8%20100l6%205c8%204%2020%2016%2027%2026l6%208%203-2c12-8%2027-12%2043-12l10-1a1433%201433%200%2000-95-24'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/js/static/c55d0def10b42157d9b6236bf3d72afb/cdc33/jakarta-logo.png","srcSet":"/js/static/c55d0def10b42157d9b6236bf3d72afb/cdc33/jakarta-logo.png 500w","sizes":"100vw"},"sources":[{"srcSet":"/js/static/c55d0def10b42157d9b6236bf3d72afb/ecd43/jakarta-logo.webp 500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3}},"base":"jakarta-logo.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='512'%20height='512'%20viewBox='0%200%20512%20512'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M227%202a256%20256%200%201059%20509A256%20256%200%2000227%202m7%2054c-82%209-150%2068-172%20147l-2%208%20120%20121c116%20116%20121%20120%20124%20119%2021-4%2052-19%2074-35%2047-35%2079-98%2079-154v-6H329v36h44l43%201a167%20167%200%2001-97%20115l-8%203-105-105-105-105%203-8a165%20165%200%2001287-32l27-23a202%20202%200%2000-184-82M56%20267a200%20200%200%2000196%20189L56%20260v7'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/js/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/js/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/js/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='544'%20height='492'%20viewBox='0%200%20544%20492'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M146%207c-31%208-51%2035-50%2068%201%2015%203%2020%2023%2056a3456%203456%200%200090%20151%2053177%2053177%200%200182%20145c16%2029%2018%2031%2026%2039a66%2066%200%2000113-47c0-19-1-20-33-75l-28-49h52c56%200%2064%200%2075-4a67%2067%200%2000-2-127l-8-2-39-1h-39l17-30c22-38%2023-41%2023-59%200-13%200-15-2-22a66%2066%200%2000-110-25c-8%208-9%2010-35%2055l-28%2048-28-47c-27-46-28-48-36-56a64%2064%200%2000-63-18'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/js/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png","srcSet":"/js/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png 544w","sizes":"100vw"},"sources":[{"srcSet":"/js/static/309e0fb8b4416829acfed4f7a501206b/5eade/logo_vinci.webp 544w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9044117647058824}},"base":"logo_vinci.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='686'%20height='419'%20viewBox='0%200%20686%20419'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M196%2023v21h85V1h-85v22m42%2026v4H81v10l1-5v-4h104v4l1%205v-9h103v4l1%204%201-4v-3l51-1h52v4l1%204%201-4v-4l-79-1h-78v-4l-1-4-1%204M38%2084v21h86V63H38v21m105%200v21h86V63h-86v21m105%200v21h86V63h-86v21m105%200v21h86V63h-86v21m0%2062v21h86v-43h-86v22m42%2026v4H186v10l1-5v-4h104v4l1%205v-9h52l52%201v4l1%204v-9h103v4l1%205v-9h104v4l1%205v-10H397v-4l-1-4-1%204m-252%2035v21h86v-42h-86v21m105%200v21h86v-42h-86v21m105%200v21h86v-42h-86v21m105%200v21h86v-42h-86v21m105%200v21h86v-42h-86v21M151%20310v82h14l-7-1h-6v-60h6l7-1h-13v-61h6l7-1h-13v-20l-1%2062m105%200v82h14l-7-1h-6v-60h6l7-1h-13v-61h6l7-1h-13v-20l-1%2062m-91-41v21h86v-42h-86v21m105%200v21h86v-42h-86v21m-105%2062v21h86v-43h-86v22m105%200v21h86v-43h-86v22m-105%2061v21h86v-42h-86v21m105%200v21h86v-42h-86v21'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/js/static/a9d7114ba2764dabfc41a67a6635c992/cd97c/backends.jpg","srcSet":"/js/static/a9d7114ba2764dabfc41a67a6635c992/cd97c/backends.jpg 686w","sizes":"100vw"},"sources":[{"srcSet":"/js/static/a9d7114ba2764dabfc41a67a6635c992/86e9b/backends.webp 686w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6107871720116618}},"base":"backends.jpg"}}]}},"pageContext":{"slug":"/modules/3/"}},"staticQueryHashes":["1696221415","2644139645","3028011774","3458129946","501654901","575455071"]}