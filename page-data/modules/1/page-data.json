{"componentChunkName":"component---src-templates-mdx-pages-js","path":"/modules/1/","result":{"data":{"mdx":{"id":"9c153cb6-37ea-54fe-8f6b-c3327a3cf558","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Module 1 : découverte de JAX-RS\",\n  \"description\": \"Découverte de JAX-RS\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Module 1 : d\\xE9couverte de JAX-RS\"), mdx(\"p\", null, \"Ce module vous offre une premi\\xE8re d\\xE9couverte du framework JAX-RS par le biais d'un tutoriel. \"), mdx(\"p\", null, \"Voici les sujets trait\\xE9s :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionA\"\n  }, \"Rappel de conventions sur les RESTful API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"b) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionB\"\n  }, \"Cr\\xE9ation d\\u2019une premi\\xE8re application sur base d\\u2019un Archetype Maven\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"c) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionC\"\n  }, \"Premi\\xE8re op\\xE9ration de lecture de ressources JSON\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"d) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionD\"\n  }, \"Gestion des param\\xE8tres de requ\\xEAtes\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionE\"\n  }, \"Gestion des r\\xE9ponses\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"f) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionF\"\n  }, \"Envoi de requ\\xEAtes \\xE0 ses APIs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"g) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionG\"\n  }, \"S\\xE9rialisation de fichiers JSON\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"h) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionH\"\n  }, \"Gestion des caract\\xE8res dangereux\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"i) \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/js/modules/1#sectionI\"\n  }, \"Exercice 1.1\"))), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionA\"\n  }), \"a) Rappel de conventions sur les RESTful API\"), mdx(\"p\", null, \"Un RESTful web service, ou RESTful API, met \\xE0 disposition des op\\xE9rations sur des ressources.\\nCes op\\xE9rations seront disponibles via des requ\\xEAtes http associ\\xE9es \\xE0 des URLs construites\\nselon les conventions RESTful.\"), mdx(\"br\", null), mdx(\"p\", null, \"Les RESTful APIs sont \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stateless\"), \" : le serveur n\\u2019enregistre aucune information c\\xF4t\\xE9 serveur\\nconcernant les sessions des clients. \"), mdx(\"p\", null, \"Cela permet principalement de rendre l\\u2019architecture\\nfacilement \\xAB scalable \\xBB.Chaque requ\\xEAte vers une RESTful API prot\\xE9g\\xE9e (via JWT)\\ndevra contenir toutes les donn\\xE9es pour \\xEAtre authentifi\\xE9 / autoris\\xE9.\"), mdx(\"br\", null), mdx(\"p\", null, \"Une RESTful API met \\xE0 disposition des op\\xE9rations sur des ressources via :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"des URI\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"des m\\xE9thodes HTTPS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"des repr\\xE9sentations des ressources compr\\xE9hensibles tant par les clients que les\\nserveurs\")), mdx(\"br\", null), mdx(\"p\", null, \"Voici un r\\xE9sum\\xE9 des conventions associ\\xE9es aux applications REST :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 collection de donn\\xE9es = des ressources (d\\u2019un certain type)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 \\xE9l\\xE9ment d\\u2019une collection = 1 ressource\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"1 adresse unique pour chaque ressource = 1 URL\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Media type = format de donn\\xE9e repr\\xE9sentant une ressource : JSON, XML, HTML, TXT, JPEG,\\nPNG\\u2026\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Le type d\\u2019op\\xE9ration sur une ressource est d\\xE9fini via la m\\xE9thode http de la requ\\xEAte :\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GET = READ (la ou les ressource(s))\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"POST = CREATE \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DELETE = DELETE : )\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PUT = UPDATE\")))), mdx(\"br\", null), mdx(\"p\", null, \"Voici un exemple d\\u2019application de ces conventions RESTful dans le cadre d\\u2019une RESTful API\\npermettant de g\\xE9rer des films :\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"URI\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"M\\xE9thode HTTP\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Op\\xE9ration\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ALL : Lire toutes les ressources de la collection\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films?minimumduration=value\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ALL FILTERED : Lire toutes les ressources de la collection selon le filtre donn\\xE9\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ONE : Lire la ressource identifi\\xE9e\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CREATE ONE : Cr\\xE9er une ressource bas\\xE9e sur les donn\\xE9es de la requ\\xEAte\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE ONE : Effacer la ressource identifi\\xE9e\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"films/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"PUT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UPDATE ONE : Replacer l'enti\\xE8ret\\xE9 de la ressource par les donn\\xE9es de la requ\\xEAte\")))), mdx(\"br\", null), \"Nous allons maintenant d\\xE9velopper une application JAX-RS offrant une API de films.\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionB\"\n  }), \"b) Cr\\xE9ation d\\u2019une premi\\xE8re application sur base d\\u2019un Archetype Maven\"), mdx(\"p\", null, \"Un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"archetype Maven\"), \" est un boilerplate de projet mis \\xE0 disposition sur un repository.\"), mdx(\"br\", null), mdx(\"p\", null, \"Jersey offre diff\\xE9rents archetypes Maven.\"), mdx(\"p\", null, \"Pour plus d'infos: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/getting-started.html#new-from-archetype\"\n  }, \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/getting-started.html#new-from-archetype\"), \" \"), mdx(\"br\", null), mdx(\"p\", null, \"A l\\u2019aide d\\u2019IntelliJ, cr\\xE9ez un projet ou un module Maven en utilisant un archetype fournit par Jersey :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Clic sur \\u201C\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Create from archetype\"), \"\\u201D \\xE0 la cr\\xE9ation de votre projet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"S\\xE9lectionnez dans la liste des archetypes : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"org.glassfish.jersey.archetypes :jersey-quickstart-grizzly2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ajouter le nom de domaine dans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Artifact Coordinates\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"GroupId\"), \". Par exemple : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"be.vinci\"))), mdx(\"br\", null), mdx(\"p\", null, \"Explorez ce qui est offert au sein de ce module ou projet :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lancez la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"main\"), \" de la classe \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Main\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Une tout premi\\xE8re m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"getIt\"), \" est offerte au sein de la ressource \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"MyResource\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Consommez cette m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"getIt\"), \"  \\xE0 l\\u2019aide d\\u2019un client, via un browser, \\xE0 l\\u2019URL \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://localhost:8080/myresource\"\n  }, \"http://localhost:8080/myresource\"), \" \")), mdx(\"br\", null), mdx(\"p\", null, \"Pour terminer, veuillez mettre \\xE0 jour les versions de vos d\\xE9pendances (directement dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/pom.xml\"), \").:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Faites passer \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Jersey\"), \" en version \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"3.0.3\"), \". \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Faites en sorte de configurer aussi votre projet pour b\\xE9n\\xE9ficier de la version LTS de Java, actuellement la version 17.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markup\",\n    \"metastring\": \"{6-9}\",\n    \"{6-9}\": true\n  }, \"<plugin>\\n    <groupId>org.apache.maven.plugins</groupId>\\n    <artifactId>maven-compiler-plugin</artifactId>\\n    <version>2.5.1</version>\\n    <inherited>true</inherited>\\n    <configuration>\\n        <source>17</source>\\n        <target>17</target>\\n    </configuration>\\n</plugin>\\n\")), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionC\"\n  }), \"c) Premi\\xE8re op\\xE9ration de lecture de ressources JSON\"), mdx(\"h2\", null, \"c.1) Introduction\"), mdx(\"p\", null, \"La gestion des ressources est d\\xE9crite dans le manuel utilisateur de Jersey : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/jaxrs-resources.html\"\n  }, \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/jaxrs-resources.html\")), mdx(\"p\", null, \"Pour expliquer ces concepts, nous allons d\\xE9velopper la fonction permettant de lire tous les films en continuant le projet initialis\\xE9 \\xE0 la section pr\\xE9c\\xE9dente.\\nNous souhaitons que lorsque nous indiquons \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://localhost:8080/films\"\n  }, \"http://localhost:8080/films\"), \" dans le browser, une liste de\\nfilms par d\\xE9faut soit renvoy\\xE9e au format JSON vers l'utilisateur.\"), mdx(\"br\", null), mdx(\"p\", null, \"Dans la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \" du projet, on retrouve :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"final ResourceConfig rc = new ResourceConfig().packages(\\\"be.vinci\\\");\\n\")), mdx(\"p\", null, \"Cette ligne de code permet scanner toutes les ressources JAX-RS\\n(ainsi que les providers que nous verrons plus tard) pr\\xE9sentes dans le package \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"be.vinci\"), \" et de les d\\xE9ployer au sein d\\u2019un container http de Grizzly.\"), mdx(\"br\", null), mdx(\"p\", null, \"Les classes associ\\xE9es \\xE0 des ressources (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MyResource\"), \" dans ce projet) sont enregistr\\xE9es\\nau sein de l\\u2019application. Le framework pourra injecter des instances de ces ressources le temps voulu.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour pouvoir utiliser l\\u2019injection de d\\xE9pendances, la librairie de Jersey permettant de le faire a \\xE9t\\xE9 install\\xE9e.\\nCelle-ci se trouve indiqu\\xE9e de la sorte dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/pom.xml\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markup\"\n  }, \" <dependency>\\n            <groupId>org.glassfish.jersey.inject</groupId>\\n            <artifactId>jersey-hk2</artifactId>\\n </dependency>\\n\")), mdx(\"p\", null, \"Dans la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Main\"), \", changez la \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"BASE_URI\"), \" pour pointer vers \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://localhost:8080/\"\n  }, \"http://localhost:8080/\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"public static final String BASE_URI = \\\"http://localhost:8080/\\\";\\n\")), mdx(\"br\", null), mdx(\"h2\", null, \"c.2) Root resources\"), mdx(\"p\", null, \"Des ressources d\\u2019un m\\xEAme type sont g\\xE9r\\xE9es au sein d\\u2019une \\xAB Root Resource Class \\xBB.\\nUne Root Resource est un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POJO\"), \" annot\\xE9e de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Path(\\\"URI_PATH\\\")\"), \".\"), mdx(\"p\", null, \"Le code pr\\xE9c\\xE9dent indique que la \\xAB Root Resource \\xBB \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MyResource\"), \" sera mis \\xE0 disposition via \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/myresource\"), \" .\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1}\",\n    \"{1}\": true\n  }, \"@Path(\\\"myresource\\\")\\npublic class MyResource {\\n\")), mdx(\"br\", null), \"NB : Une Root Resource est l\\u2019\\xE9quivalent d\\u2019un router sous Express (framework Node.js).\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"On souhaite que toutes les op\\xE9rations sur les ressources de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Film\"), \" soient accessibles\\nvia l'URI \\\"\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"/films\"), \"\\\".\\nPour ce faire :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Renommez la classe \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"MyResource\"), \" en \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FilmResource\"), \" et sa m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"getIt\"), \" en \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"getAll\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Changez le \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Path\"), \" annotant la classe \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"FilmResource\"), \" vers : \")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1}\",\n    \"{1}\": true\n  }, \"@Path(\\\"films\\\")\\npublic class FilmResource {\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Ajoutez la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Film\"), \" au sein de votre projet :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package be.vinci;\\n\\npublic class Film {\\n\\n    private int id;\\n    private String title;\\n    private int duration;\\n    private long budget;\\n    private String link;\\n\\n    public Film() {\\n    }\\n\\n    public Film(int id, String title, int duration, long budget, String link) {\\n        this.id = id;\\n        this.title = title;\\n        this.duration = duration;\\n        this.budget = budget;\\n        this.link = link;\\n    }\\n\\n    public int getId() {\\n        return id;\\n    }\\n\\n    public void setId(int id) {\\n        this.id = id;\\n    }\\n\\n    public String getTitle() {\\n        return title;\\n    }\\n\\n    public void setTitle(String title) {\\n        this.title = title;\\n    }\\n\\n    public int getDuration() {\\n        return duration;\\n    }\\n\\n    public void setDuration(int duration) {\\n        this.duration = duration;\\n    }\\n\\n    public long getBudget() {\\n        return budget;\\n    }\\n\\n    public void setBudget(long budget) {\\n        this.budget = budget;\\n    }\\n\\n    public String getLink() {\\n        return link;\\n    }\\n\\n    public void setLink(String link) {\\n        this.link = link;\\n    }\\n\\n    @Override\\n    public String toString() {\\n        return \\\"Film [id=\\\" + id + \\\", title=\\\" + title + \\\", duration=\\\" + duration + \\\", budget=\\\" + budget + \\\", link=\\\"\\n                + link + \\\"]\\\";\\n    }\\n\\n    @Override\\n    public boolean equals(Object o) {\\n        if (this == o) return true;\\n        if (o == null || getClass() != o.getClass()) return false;\\n\\n        Film film = (Film) o;\\n\\n        return id == film.id;\\n    }\\n\\n    @Override\\n    public int hashCode() {\\n        return id;\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \", utilisez ce code pour cr\\xE9er des films par d\\xE9faut :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"private Film[] defaultFilms = {\\n            new Film(1, \\\"No Time To Die\\\", 163, 301, \\\"https://en.wikipedia.org/wiki/No_Time_to_Die\\\"),\\n            new Film(2, \\\"Dune\\\", 156, 165, \\\"https://en.wikipedia.org/wiki/Dune_(2021_film)\\\"),\\n            new Film(3, \\\"Shang-Chi and the Legend of the Ten Rings\\\", 132, 200, \\\"https://en.wikipedia.org/wiki/Shang-Chi_and_the_Legend_of_the_Ten_Rings\\\"),\\n            new Film(4, \\\"Peter Rabbit 2: The Runaway\\\", 93, 45, \\\"https://en.wikipedia.org/wiki/Peter_Rabbit_2:_The_Runaway\\\")\\n    };\\nprivate List<Film> films = new ArrayList<>(Arrays.asList(defaultFilms)); // to get a changeable list, asList is fixed size\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez faire en sorte que la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAll\"), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" renvoie l\\u2019ArrayList de films\\net sp\\xE9cifiez que la repr\\xE9sentation des ressources renvoy\\xE9es par votre m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAll\"), \" est du JSON :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"@GET\\n@Produces(MediaType.APPLICATION_JSON)\\n    public List<Film> getAll() {\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Une m\\xE9thode annot\\xE9e par \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@GET\"), \" r\\xE9pondra aux requ\\xEAtes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET\"), \" sur la Root Resource.\"), mdx(\"p\", null, \"Que se passe-t-il si vous tentez d\\u2019acc\\xE9der \\xE0 une ressource non prise en charge par votre API ?\\nN\\u2019h\\xE9sitez pas \\xE0 essayer, par exemple : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://localhost:8080/movies\"\n  }, \"http://localhost:8080/movies\"), \". \"), mdx(\"br\", null), mdx(\"p\", null, \"Pour r\\xE9pondre \\xE0 des requ\\xEAtes d\\u2019une certaine m\\xE9thode http, on utilisera l\\u2019annotation associ\\xE9e :\\npar exemple, pour une requ\\xEAte POST, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@POST\"), \"\\u2026\"), mdx(\"br\", null), mdx(\"p\", null, \"Testez la lecture des films...\"), mdx(\"p\", null, \"Que se passe-t-il ? \\xAB Request failed \\xBB...\"), mdx(\"p\", null, \"L\\u2019application n\\u2019est pas encore capable de s\\xE9rialiser une ArrayList de films vers du JSON.\"), mdx(\"br\", null), mdx(\"h2\", null, mdx(\"a\", {\n    id: \"sectionC3\"\n  }), \"c.3) S\\xE9rialisation via Jackson\"), mdx(\"p\", null, \"Nous allons utiliser un package Jackson pour qu'automatiquement le framework puisse s\\xE9rialiser des objets\\nJAVA, comme une ArrayList de films, vers du JSON.\"), mdx(\"p\", null, \"Pour ce faire, ajoutez une d\\xE9pendance \\xE0 Jackson :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Via IntelliJ : \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cliquez au sein de votre fichier \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/pom.xml\"), \" : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Code\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Generate...\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Dependency\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tapez : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"jersey-medi-json-jackson\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Installez les d\\xE9pendances Maven en cliquant sur le bouton repr\\xE9sentant \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Load Maven Changes\"), \"\\\"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Si vous n'avez pas IntelliJ, ajoutez cela au sein de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/pom.xml\"), \" puis forcer l'installation des d\\xE9pendances :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markup\"\n  }, \"<dependency>\\n            <groupId>org.glassfish.jersey.media</groupId>\\n            <artifactId>jersey-media-json-jackson</artifactId>\\n            <version>3.0.3</version>\\n</dependency>\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Il reste \\xE0 enregistrer l'utilisation de Jackson au sein de l'application.\\nPour ce faire, mettez \\xE0 jour la classe Main :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{2}\",\n    \"{2}\": true\n  }, \" final ResourceConfig rc = new ResourceConfig().packages(\\\"be.vinci\\\")\\n                .register(JacksonFeature.class);\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Voila, si vous ex\\xE9cutez votre programme, la lecture des films devrait fonctionner\\nsur \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://localhost:8080/films\"\n  }, \"http://localhost:8080/films\")), mdx(\"br\", null), mdx(\"h2\", null, \"c.4) Scope de l'injection d'une \\\"Root Resource\\\" au sein du framework\"), mdx(\"h3\", null, \"c.4.1) Scope par d\\xE9faut\"), mdx(\"p\", null, \"Maintenant, nous allons cherchez \\xE0 comprendre le scope de la Root Ressource cr\\xE9\\xE9e par le framework.\"), mdx(\"p\", null, \"Pour ce faire, modifiez votre m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAll\"), \" pour qu\\u2019elle essaie d\\u2019effacer toujours le dernier\\n\\xE9l\\xE9ment du tableau avant de renvoyer tous les \\xE9l\\xE9ments restant du tableau.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{3-4}\",\n    \"{3-4}\": true\n  }, \"@GET\\n    @Produces(MediaType.APPLICATION_JSON)\\n    public List<Film> getAll() {\\n        if(films.size()>0)\\n            films.remove(films.size()-1);\\n        return films;\\n    }\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Appelez plusieurs fois votre API dans votre browser, en faisant plusieurs refresh sur\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://localhost:8080/films\"\n  }, \"http://localhost:8080/films\")), mdx(\"p\", null, \"Que se passe-t-il ?\"), mdx(\"p\", null, \"A chaque fois on repart avec le m\\xEAme tableau par d\\xE9faut de ressources, on a toujours qu\\u2019un seul \\xE9l\\xE9ment en moins.\\nOn ne peut donc pas effacer plus d'un \\xE9l\\xE9ment.\"), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Conclusion\"), \" : \"), mdx(\"p\", null, \"Par d\\xE9faut, une nouvelle instance d\\u2019une Route Resource sera cr\\xE9\\xE9e pour chaque requ\\xEAte matchant l\\u2019URI de la Root Resource.\\nC\\u2019est comme si la Root Resource avait \\xE9t\\xE9 annot\\xE9e par \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@RequestScoped\"), \".\\nDans une application RESTful, cela n'a pas de sens car elle est \\\"stateless\\\". D\\xE8s lors, comme la r\\xE9ponse \\xE0 une requ\\xEAte\\nne d\\xE9pend pas de l'\\xE9tat de la ressource, il est inutile de cr\\xE9er une nouvelle instance de ressource pour chaque requ\\xEAte.\"), mdx(\"br\", null), mdx(\"p\", null, \"Si vous souhaitez plus de d\\xE9tails concernant le cycle de vie de Root Resources : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/jaxrs-resources.html#d0e2470\"\n  }, \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/jaxrs-resources.html#d0e2470\")), mdx(\"br\", null), mdx(\"h3\", null, \"c.4.2) Scope : une instance par application JAX-RS\"), mdx(\"p\", null, \"Nous allons modifier le scope de la cr\\xE9ation en ajoutant l\\u2019annotation \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Singleton\"), \" dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1}\",\n    \"{1}\": true\n  }, \"@Singleton\\n@Path(\\\"films\\\")\\npublic class FilmResource {\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Suite \\xE0 ce changement, v\\xE9rifiez ce qui se produit au niveau de l'application.\"), mdx(\"p\", null, \"On a bien une seule instance de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" qui est inject\\xE9e dans notre application.\\nD\\xE8s lors, \\xE0 chaque refresh de la page, un film est enlev\\xE9, jusqu'\\xE0 ce que l'API renvoie comme JSON un tableau vide.\"), mdx(\"br\", null), mdx(\"p\", null, \"Avant de passer au point suivant, nous allons  remettre en ordre la fonction permettant de lire tous les films\\n(elle ne doit plus effacer de films).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"@GET\\n@Produces(MediaType.APPLICATION_JSON)\\npublic List<Film> getAll() {\\n    return films;\\n}\\n\")), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionD\"\n  }), \"d) Gestion des param\\xE8tres de requ\\xEAtes\"), mdx(\"h2\", null, \"d.1) Param\\xE8tres d\\u2019URI via @Path et codes d'erreur\"), mdx(\"p\", null, \"Il est possible d\\u2019int\\xE9grer des variables dans des URIs.\"), mdx(\"p\", null, \"Une variable est d\\xE9limit\\xE9e par des \\xAB \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"{}\"), \" \\xBB au sein de l\\u2019URI. \"), mdx(\"p\", null, \"On utilise \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@PathParam\"), \" pour extraire un param\\xE8tre du chemin d\\u2019une URI.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour l'API de gestion de films, nous allons maintenant d\\xE9velopper l'op\\xE9ration de lecture d'un\\nfilm sur base de son id.\"), mdx(\"p\", null, \"Ajoutez cette nouvelle m\\xE9thode au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1,3-4,7-8}\",\n    \"{1,3-4,7-8}\": true\n  }, \"@GET\\n@Path(\\\"/{id}\\\")\\n@Produces(MediaType.APPLICATION_JSON)\\npublic Film getOne(@PathParam(\\\"id\\\") int id) {\\n        Film filmFound = films.stream().filter(film -> film.getId() == id).findAny().orElse(null);\\n        if (filmFound == null)\\n            throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND)\\n                    .entity(\\\"Ressource not found\\\").type(\\\"text/plain\\\").build());\\n        return filmFound;\\n    }\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Si vous tapez \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://localhost:8080/films/3\"\n  }, \"http://localhost:8080/films/3\"), \" dans votre browser,\\ncela correspond \\xE0 une requ\\xEAte de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET /films/3\"), \". Au sein de la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getOne\"), \", le param\\xE8tre\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"id\"), \" vaudra 3.\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez noter comment un message de statut est renvoy\\xE9 au client si aucune resource n'est trouv\\xE9e.\"), mdx(\"p\", null, \"Nous lan\\xE7ons une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \", en lui passant un code d'erreur (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOT_FOUND\"), \"), et\\nnous construisons une r\\xE9ponse en indiquant que le type est du texte (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"text/plain\"), \").\\nD\\xE8s lors, la r\\xE9ponse contiendra le code de statut \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"404\"), \" (\\xE9quivalent de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"NOT_FOUND\"), \") et le message\\n\\\"Resource not found\\\".\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez tester la lecture d'une ressource qui n'existe pas, par exemple via\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://localhost:8080/films/5\"\n  }, \"http://localhost:8080/films/5\"), \".\"), mdx(\"br\", null), mdx(\"h2\", null, \"d.2) Param\\xE8tres de requ\\xEAte via @QueryParam\"), mdx(\"p\", null, \"Lors d'une requ\\xEAte par un client, il est possible de passer des param\\xE8tres de requ\\xEAte via l'URL :\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"?key1=value1&key2=value2\"), \".\\nCes param\\xE8tres se trouvent apr\\xE8s le \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"?\"), \" dans l'URL, sous forme de cl\\xE9/valeur.\\nQuand il y a plusieurs param\\xE8tres, ils sont s\\xE9par\\xE9s par un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"&\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Gr\\xE2ce \\xE0 Jersey, on r\\xE9cup\\xE8re ces param\\xE8tres au sein de nos APIs via \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@QueryParam\"), \".\"), mdx(\"p\", null, \"Nous allons maintenant offrir la possibilit\\xE9 de lire tous les films qui ont une dur\\xE9e minimum\\n\\xE0 ce qui sera indiqu\\xE9 dans un param\\xE8tre de requ\\xEAte, sur base d'une requ\\xEAte de type\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET /films?minimum-duration=value\"), \".\"), mdx(\"p\", null, \"Pour ce faire, nous ne devons pas cr\\xE9er de nouvelle m\\xE9thode au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" mais\\nnous devons mettre \\xE0 jour la m\\xE9thode renvoyant tous les films :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{3-8}\",\n    \"{3-8}\": true\n  }, \"@GET\\n@Produces(MediaType.APPLICATION_JSON)\\npublic List<Film> getAll(@DefaultValue(\\\"-1\\\") @QueryParam(\\\"minimum-duration\\\") int minimumDuration) {\\n    if (minimumDuration != -1) {\\n        List<Film> filmsFiltered = films.stream().filter(film -> film.getDuration() >= minimumDuration)\\n                .toList();\\n        return filmsFiltered;\\n    }\\n    return films;\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"On r\\xE9cup\\xE8re le param\\xE8tre d'une requ\\xEAte GET nomm\\xE9 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"minimum-duration\"), \" au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"minimumDuration\"), \".\"), mdx(\"p\", null, \"Par exemple, pour la requ\\xEAte \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://localhost:8080/films?minimum-duration=160\"\n  }, \"http://localhost:8080/films?minimum-duration=160\"), \",\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"minimumDuration\"), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAll\"), \" vaut \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"160\"), \".\"), mdx(\"p\", null, \"Pour une requ\\xEAte de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET /films\"), \", si \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"minimum-duration\"), \" n\\u2019est pas indiqu\\xE9 dans l'URL,\\nle param\\xE8tre \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"minimumDuration\"), \" de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"getAll\"), \" vaudra \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"-1\"), \" gr\\xE2ce \\xE0 \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@DefaultValue(\\\"-1\\\")\"), \".\"), mdx(\"br\", null), mdx(\"h2\", null, \"d.3) Donn\\xE9es JSON dans le body de la requ\\xEAte\"), mdx(\"h3\", null, \"d.3.1 ) D\\xE9s\\xE9rialisation de JSON\"), mdx(\"p\", null, \"Nous allons souvent souhaiter r\\xE9cup\\xE9rer des donn\\xE9es qui ont \\xE9t\\xE9 envoy\\xE9es au format JSON sein\\ndu body d\\u2019une requ\\xEAte client. Quand c'est le cas, le framework doit pouvoir automatiquement\\nd\\xE9s\\xE9rialiser (ou parser) ces donn\\xE9es JSON. En d'autres termes, le framework doit pouvoir injecter\\nles donn\\xE9es JSON dans un objet Java.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour ce faire, notre application JAX-RS a d\\xE9j\\xE0 \\xE9t\\xE9 correctement configur\\xE9e pour pouvoir\\ns\\xE9rialiser / d\\xE9s\\xE9rialiser des donn\\xE9es JSON \\xE0 l'aide de Jackson (voir \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/js/modules/1#sectionC3\"\n  }, \"c.3) S\\xE9rialisation via Jackson\"), \")\"), mdx(\"br\", null), mdx(\"p\", null, \"Nous allons d\\xE9velopper l'op\\xE9ration de cr\\xE9ation d'un film au sein de notre application JAX-RS.\\nPour appeler cette op\\xE9ration, il faudra faire une requ\\xEAte client de ce type :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"POST http://localhost:8080/films \\nContent-Type: application/json\\n\\n{\\n\\\"title\\\" : \\\"Venom: Let There Be Carnage\\\",\\n\\\"duration\\\" : 97,\\n\\\"budget\\\" : 110,\\n\\\"link\\\" : \\\"https://en.wikipedia.org/wiki/Venom:_Let_There_Be_Carnage\\\"\\n} \\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ajouter la fonction \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"createOne\"), \" au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{1,3,4}\",\n    \"{1,3,4}\": true\n  }, \"@POST\\n@Produces(MediaType.APPLICATION_JSON)\\n@Consumes(MediaType.APPLICATION_JSON)\\npublic Film createOne(Film film) {\\n    if (film == null || film.getTitle() == null || film.getTitle().isBlank())\\n        throw new WebApplicationException(\\n                Response.status(Response.Status.BAD_REQUEST).entity(\\\"Lacks of mandatory info\\\").type(\\\"text/plain\\\").build());\\n    film.setId(films.size() + 1);\\n    films.add(film);\\n    return film;\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Pour que le JSON de la requ\\xEAte POST puisse \\xEAtre directement pars\\xE9 au sein du param\\xE8tre \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"film\"), \",\\nil faut avoir cr\\xE9\\xE9 le POJO \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Film\"), \", une classe qui contient tous les getters et setters associ\\xE9s\\naux attributs d\\u2019une ressource de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Film\"), \". \"), mdx(\"p\", null, \"Par d\\xE9faut, Jackson d\\xE9s\\xE9rialise tous les champs \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"public\"), \". Pour les champs non public, il d\\xE9s\\xE9rialise par d\\xE9faut\\ntous les champs qui ont un setter.\"), mdx(\"p\", null, \"Attention, pour la d\\xE9s\\xE9rialisation via Jackson, il doit exister un constructeur\\npar d\\xE9faut (sans param\\xE8tres) au sein de votre POJO.\\nC'est pour \\xE7a qu'il existe ce constructeur dans la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Film\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"public Film() {\\n    }\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"La requ\\xEAte pour pouvoir appeler l'op\\xE9ration de cr\\xE9ation d'un film est donn\\xE9e ici :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/js/modules/1#sectionF\"\n  }, \"f) Envoi de requ\\xEAtes \\xE0 ses APIs\")), mdx(\"br\", null), mdx(\"p\", null, \"Plus d'infos sur la d\\xE9s\\xE9rialisation via Jackson : \"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.baeldung.com/jackson-field-serializable-deserializable-or-not\"\n  }, \"https://www.baeldung.com/jackson-field-serializable-deserializable-or-not\")), mdx(\"br\", null), mdx(\"br\", null), mdx(\"h3\", null, \"d.3.2) Type MIME de la requ\\xEAte et @Consumes\"), mdx(\"p\", null, \"Afin de permettre la d\\xE9s\\xE9rialisation par le framework, on doit pr\\xE9ciser le type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"MIME\"), \" de la repr\\xE9sentation de la ressource qui est envoy\\xE9e dans\\nle \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"body\"), \" de la requ\\xEAte : \"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Consumes(MediaType.APPLICATION_JSON)\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Consumes(\\\"text/plain\\\")\"), \", \\u2026\"), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionE\"\n  }), \"e) Gestion des r\\xE9ponses\"), mdx(\"h2\", null, \"e.1) R\\xE9ponses & s\\xE9rialisation en JSON de POJOs\"), mdx(\"p\", null, \"Voici en r\\xE9sum\\xE9 ce que nous avons d\\xE9j\\xE0 vu. \"), mdx(\"p\", null, \"Pour renvoyer un objet du monde Java sous une repr\\xE9sention JSON \\xE0 un client :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"il faut avoir cr\\xE9\\xE9 un JavaBean, un POJO comprenant tous les getters associ\\xE9s aux attributs\\nde la ressource \\xE0 renvoyer : c'est le r\\xF4le de la classe \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Film\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"il faut indiquer le type de la repr\\xE9sentation de la ressource renvoy\\xE9e via \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"@Produces\"), \" :\\nc'est le r\\xF4le de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"@Produces(MediaType.APPLICATION_JSON))\"), \" pour renvoyer du JSON.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Si l\\u2019on souhaite renvoyer un tableau d\\u2019objets JSON au client, il suffit de renvoyer\\nune liste de POJOs via le framework : c'est le r\\xF4le du type de retour \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"strong\"\n  }, \"List<Film>\")), \" de la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"getAll\"), \".\")), mdx(\"br\", null), mdx(\"p\", null, \"De plus, le code http de statut renvoy\\xE9, associ\\xE9 \\xE0 la r\\xE9ponse,\\ncorrespond au code 200 quand tout se passe bien (\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Status.OK\"), \").\"), mdx(\"br\", null), mdx(\"h2\", null, \"e.2) Type MIME de la r\\xE9ponse et @Produces\"), mdx(\"p\", null, \"On pr\\xE9cisera le type MIME de la ressource qui sera renvoy\\xE9 au client via soit :\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Produces(MediaType.APPLICATION_JSON)\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Produces(\\\"text/plain\\\")\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"@Produces(\\\"text/html\\\")\"), \"\\u2026\"), mdx(\"br\", null), mdx(\"h2\", null, \"e.3) Code http \\xE0 renvoyer\"), mdx(\"p\", null, \"On ne peut pas toujours renvoyer du JSON suite \\xE0 une requ\\xEAte client ainsi qu\\u2019un code\\nhttp correspondant au fait que tout est OK (code 200, Status.OK).\"), mdx(\"br\", null), mdx(\"p\", null, \"Dans le cadre d\\u2019une RESTful API, comme on renvoie g\\xE9n\\xE9ralement des ressources au format JSON,\\nla r\\xE9ponse est tr\\xE8s souvent construite par Jersey et Jackson automatiquement.\\nD\\xE8s lors, si l\\u2019on souhaite envoyer autre chose en retour qu\\u2019un POJO qui doit \\xEAtre s\\xE9rialis\\xE9,\\ncomme un code d\\u2019erreur, il va falloir utiliser une m\\xE9thode du framework court-circuitant\\nle processus de s\\xE9rialisation.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour renvoyer des codes d\\u2019erreur, nous l'avons d\\xE9j\\xE0 apper\\xE7u pr\\xE9c\\xE9demment,\\nnous allons  utiliser le framework pour lancer une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \".\\nCette exception sera utilis\\xE9e pour construire la r\\xE9ponse \\xE0 renvoyer\\nau client. Une \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"WebApplicationException\"), \" reprendra tant le \\xAB http status code \\xBB\\nqu\\u2019\\xE9ventuellement un message d\\u2019erreur de type \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"text/plain\"), \" dans le corps de la r\\xE9ponse.\"), mdx(\"p\", null, \"Afin de voir de nouveaux exemple de code d'erreur, nous allons d\\xE9velopper les op\\xE9rations pour\\neffacer et mettre \\xE0 jour un film. Veuillez ajouter ces deux m\\xE9thodes au sein de \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"numbered {6-7,10-11,22-23,26-27}\",\n    \"numbered\": true,\n    \"{6-7,10-11,22-23,26-27}\": true\n  }, \"@DELETE\\n@Path(\\\"/{id}\\\")\\n@Produces(MediaType.APPLICATION_JSON)\\npublic Film deleteOne(@PathParam(\\\"id\\\") int id) {\\n    if (id == 0) // default value of an integer => has not been initialized\\n        throw new WebApplicationException(Response.status(Response.Status.BAD_REQUEST).entity(\\\"Lacks of mandatory id info\\\")\\n                .type(\\\"text/plain\\\").build());\\n    Film filmToDelete = films.stream().filter(film -> film.getId() == id).findAny().orElse(null);\\n    if (filmToDelete == null)\\n        throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND)\\n                .entity(\\\"Ressource not found\\\").type(\\\"text/plain\\\").build());\\n    films.remove(filmToDelete);\\n    return filmToDelete;\\n}\\n\\n@PUT\\n@Path(\\\"/{id}\\\")\\n@Produces(MediaType.APPLICATION_JSON)\\n@Consumes(MediaType.APPLICATION_JSON)\\npublic Film updateOne(Film film, @PathParam(\\\"id\\\") int id) {\\n    if (id == 0 || film == null || film.getTitle() == null || film.getTitle().isBlank())\\n        throw new WebApplicationException(\\n                Response.status(Response.Status.BAD_REQUEST).entity(\\\"Lacks of mandatory info\\\").type(\\\"text/plain\\\").build());\\n    Film filmToUpdate = films.stream().filter(f -> f.getId() == id).findAny().orElse(null);\\n    if (filmToUpdate == null)\\n        throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND)\\n                .entity(\\\"Ressource not found\\\").type(\\\"text/plain\\\").build());\\n    film.setId(id);\\n    films.remove(film); // thanks to equals(), films is found via its id\\n    films.add(film);\\n    return film;\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Pour une liste des codes http, vous pouvez consulter :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\"\n  }, \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status\")), mdx(\"br\", null), mdx(\"p\", null, \"La classes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"jakarta.ws.rs.core.Response.Status\"), \" donne acc\\xE8s \\xE0 tous les codes de retour :\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Response.Status.NOT_FOUND\"), \", \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Response.Status.BAD_REQUEST\"), \"\\u2026\"), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionF\"\n  }), \"f) Envoi des requ\\xEAtes \\xE0 son API\"), mdx(\"h2\", null, \"f.1) Test de son API\"), mdx(\"p\", null, \"Dans le cadre de ce cours, vous ne devez pas d\\xE9velopper de frontend (par exemple en HTML /\\nJavaScript / CSS) pour tester vos APIs. Cela prendrait trop de temps. \"), mdx(\"p\", null, \"Nous allons donc utiliser des clients l\\xE9gers permettant de faire des requ\\xEAtes \\xE0 nos APIs.\"), mdx(\"p\", null, \"Pour ce cours, vous pouvez choisir d'utiliser IntelliJ ou REST Client pour faire vos requ\\xEAtes.\"), mdx(\"p\", null, \"Comme nous vous encourageons \\xE0 utiliser IntelliJ pour d\\xE9velopper votre code Java, il est probablement\\nplus ais\\xE9 de rester au sein du m\\xEAme environnement de d\\xE9veloppement en utilisant le client HTTP\\nd'IntelliJ.\"), mdx(\"br\", null), mdx(\"h2\", null, \"f.2) HTTP Client d'IntelliJ\"), mdx(\"p\", null, \"Dans le cadre de cours, si vous programmez sous IntelliJ, nous vous recommandons d'utiliser son client\\nHTTP pour faire vos requ\\xEAtes vers vos API Rest.\"), mdx(\"br\", null), mdx(\"p\", null, \"Quelques notions pour utiliser le client HTTP d'IntelliJ :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Il faut cr\\xE9er un fichier \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".http\"), \" (ou \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".rest\"), \") contenant les requ\\xEAtes vers vos RESTful APIs.\", mdx(\"br\", null), \"NB : Il est appropri\\xE9 de cr\\xE9er un fichier par Root Resource (par type de ressources).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chaque requ\\xEAte est introduite par \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"###\"), \" (3 \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"#\"), \"\\\"\\\" ou plus)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour ex\\xE9cuter une requ\\xEAte, il suffit de cliquer sur \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Run HTTP Request\"), \" (le triangle vert \\xE0 gauche\\ndans votre \\xE9diteur de code)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lorsqu\\u2019on envoie des donn\\xE9es au format JSON, il est important d\\u2019avoir un espace avant\\nles accolades (avant le \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"{\"), \"\\\" )\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On peut d\\xE9finir des variables d'environnement dans un \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Environment file\"), \"\\\". Il suffit de cliquer sur\\n\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Add environment file\"), \" pour cr\\xE9er un fichier \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"http-client.env.json\"), \" dans lequel vous pouvez ajouter vos variables.\\nVoici \\xE0 quoi ressemble une variable \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"baseUrl\"), \" dans \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"http-client.env.json\"), \" : \")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"{\\n  \\\"dev\\\": {\\n    \\\"baseUrl\\\": \\\"http://localhost:8080\\\"\\n  }\\n}\\n\")), mdx(\"br\", null), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour utiliser la variable \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"baseUrl\"), \", il suffit de la mettre entre double accolades. Par exemple, voici\\nla requ\\xEAte permettant de lire tous les films :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"### Read All films\\nGET {{baseUrl}}/films\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Nous allons maintenant tester l'API de gestion de films que nous avons cr\\xE9\\xE9e pour tout ce que nous\\nne pouvons pas tester directement via un browser.\"), mdx(\"br\", null), mdx(\"p\", null, \"Au sein de VS Code, veuillez cr\\xE9er un fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"films.http\"), \".\"), mdx(\"p\", null, \"Veuillez y ajouter cette requ\\xEAte pour la cr\\xE9ation d'un film et ex\\xE9cutez la requ\\xEAte : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"### Create One film\\nPOST {{baseUrl}}/films \\nContent-Type: application/json\\n\\n{\\n\\\"title\\\" : \\\"Venom: Let There Be Carnage\\\",\\n\\\"duration\\\" : 97,\\n\\\"budget\\\" : 110,\\n\\\"link\\\" : \\\"https://en.wikipedia.org/wiki/Venom:_Let_There_Be_Carnage\\\"\\n} \\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ajouter cette requ\\xEAte de suppression d'un film dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"films.http\"), \" et l'ex\\xE9cuter :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"DELETE {{baseUrl}}/films/5\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ajouter cette requ\\xEAte de suppression d'un film dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"films.http\"), \" et l'ex\\xE9cuter :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"### Update One film\\nPUT {{baseUrl}}/films/4\\nContent-Type: application/json\\n\\n{\\n\\\"title\\\" : \\\"Venom: Let There Be Carnage\\\",\\n\\\"duration\\\" : 97,\\n\\\"budget\\\" : 110,\\n\\\"link\\\" : \\\"https://en.wikipedia.org/wiki/Venom:_Let_There_Be_Carnage\\\"\\n} \\n\")), mdx(\"br\", null), mdx(\"h2\", null, \"f.3) REST Client sous VS Code\"), mdx(\"p\", null, \"Dans le cadre de ce cours, nous pouvons aussi utiliser REST Client de Visual Studio Code pour tester nos APIs :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Huachao/vscode-restclient\"\n  }, \"https://github.com/Huachao/vscode-restclient\")), mdx(\"br\", null), \"Il est inutile de lire ce paragraphe si vous avez choisi de faire vos requ\\xEAtes \\xE0 l'aide d'IntelliJ.\", mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"Si \\xE7a n'est pas d\\xE9j\\xE0 fait, veuillez installer Visual Studio Code.\"), mdx(\"br\", null), \"Cliquez sur Extensions au sein de VS Code.\", mdx(\"p\", null, \"Recherchez l\\u2019extension \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"REST Client\"), \" et cliquez sur \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Install\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Quelques notions pour utiliser REST Client :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Il faut cr\\xE9er un fichier \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".http\"), \" (ou \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \".rest\"), \") contenant les requ\\xEAtes vers vos RESTful APIs.\", mdx(\"br\", null), \"NB : Il est appropri\\xE9 de cr\\xE9er un fichier par Root Resource (par type de ressources).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chaque requ\\xEAte est introduite par \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"###\"), \" (3 \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"#\"), \"\\\"\\\" ou plus)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour ex\\xE9cuter une requ\\xEAte, il suffit de cliquer sur \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Send Request\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Lorsqu\\u2019on envoie des donn\\xE9es au format JSON, il est important d\\u2019avoir un espace avant\\nles accolades (avant le \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"{\"), \"\\\" )\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On peut d\\xE9finir des \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"File variables\"), \"\\\" via ce genre de syntaxe : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"@baseUrl = http://localhost:8080/films\"), mdx(\"br\", null)), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour utiliser la variable \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"baseUrl\"), \", il suffit de la mettre entre double accolades. Par exemple, voici\\nla requ\\xEAte permettant de lire tous les films :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"### Read All films\\nGET {{baseUrl}}/films\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Nous allons maintenant tester l'API de gestion de films que nous avons cr\\xE9\\xE9e pour tout ce que nous\\nne pouvons pas tester directement via un browser.\"), mdx(\"br\", null), mdx(\"p\", null, \"Au sein de VS Code, veuillez cr\\xE9er un fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"films.http\"), \".\"), mdx(\"p\", null, \"Veuillez y ajouter cette requ\\xEAte pour la cr\\xE9ation d'un film et ex\\xE9cutez la requ\\xEAte : \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"@baseUrl = http://localhost:8080\\n### Create One film\\nPOST {{baseUrl}}/films \\nContent-Type: application/json\\n\\n{\\n\\\"title\\\" : \\\"Venom: Let There Be Carnage\\\",\\n\\\"duration\\\" : 97,\\n\\\"budget\\\" : 110,\\n\\\"link\\\" : \\\"https://en.wikipedia.org/wiki/Venom:_Let_There_Be_Carnage\\\"\\n} \\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ajouter cette requ\\xEAte de suppression d'un film dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"films.http\"), \" et l'ex\\xE9cuter :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"DELETE {{baseUrl}}/films/5\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez ajouter cette requ\\xEAte de suppression d'un film dans \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"films.http\"), \" et l'ex\\xE9cuter :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"### Update One film\\nPUT {{baseUrl}}/films/4\\nContent-Type: application/json\\n\\n{\\n\\\"title\\\" : \\\"Venom: Let There Be Carnage\\\",\\n\\\"duration\\\" : 97,\\n\\\"budget\\\" : 110,\\n\\\"link\\\" : \\\"https://en.wikipedia.org/wiki/Venom:_Let_There_Be_Carnage\\\"\\n} \\n\")), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionG\"\n  }), \"g) S\\xE9rialisation de fichiers JSON\"), mdx(\"h2\", null, \"g.1) Introduction\"), mdx(\"p\", null, \"L\\u2019utilisation de Jackson est document\\xE9e, mais celle-ci semble fort dispers\\xE9e sur le Web.\\nNous avons donc r\\xE9sum\\xE9 les concepts essentiels ci-dessous. \"), mdx(\"p\", null, \"Pour ce cours, nous souhaitons que nos ressources soient persistantes, mais sans utiliser de\\nsyst\\xE8me de gestion de base de donn\\xE9es. Nous allons donc sauvegarder les donn\\xE9es dans un fichier JSON.\"), mdx(\"br\", null), mdx(\"p\", null, \"Pour chaque op\\xE9ration sur un type de ressources : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nous allons charger toutes les ressources se trouvant dans un fichier JSON au sein d'un objet Java,\\nune liste d'objets de type \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Film\"), \" par exemple.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Si n\\xE9cessaire, dans le cadre d'une op\\xE9ration d'\\xE9criture sur une ou plusieurs ressources,\\nnous allons mettre \\xE0 jour la liste d'objets Java (ou POJOs).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Si nous avons r\\xE9alis\\xE9 une op\\xE9ration d'\\xE9criture, nous allons faire persister ces changements en\\nsauvegardant la liste d'Objets Java dans un fichier JSON. On \\xE9crase donc le fichier JSON \\xE0 chaque\\nop\\xE9ration d'\\xE9criture.\", mdx(\"br\", null), mdx(\"br\", null))), mdx(\"p\", null, \"Pour rappel, notre application JAX-RS a d\\xE9j\\xE0 \\xE9t\\xE9 correctement configur\\xE9e pour pouvoir\\ns\\xE9rialiser / d\\xE9s\\xE9rialiser des donn\\xE9es JSON \\xE0 l'aide de Jackson\\n(voir \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/js/modules/1#sectionC3\"\n  }, \"c.3) S\\xE9rialisation via Jackson\"), \").\"), mdx(\"br\", null), mdx(\"br\", null), mdx(\"p\", null, \"Voici quelques r\\xE9f\\xE9rences malgr\\xE9 tout pour la documentation, si vous souhaitez approfondir :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tutoriel reprenant les fonctions principales de Jackson : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.baeldung.com/jackson-object-mapper-tutorial\"\n  }, \"https://www.baeldung.com/jackson-object-mapper-tutorial\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Le point d\\u2019entr\\xE9e de Jackson au sein de Jersey : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/media.html#json.jackson\"\n  }, \"https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest3x/media.html#json.jackson\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pour une id\\xE9e de base de la libraire Jackson : \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/FasterXML/jackson-docs\"\n  }, \"https://github.com/FasterXML/jackson-docs\"), \" ou \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/FasterXML/jackson-databind\"\n  }, \"https://github.com/FasterXML/jackson-databind\"), \" \")), mdx(\"br\", null), mdx(\"h2\", null, \"g.2) S\\xE9rialisation d'une liste de POJOs dans un fichier JSON\"), mdx(\"p\", null, \"Pour rendre les ressources persistantes au sein de notre API de gestion de films, veuillez cr\\xE9er\\nune nouvelle classe s'appelant \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Json\"), \".\"), mdx(\"p\", null, \"Au sein de la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Json\"), \", voici le code de la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"serialize\"), \" permettant d\\u2019utiliser\\nle fichier \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"db.json\"), \" pour s\\xE9rialiser (ou enregistrer) plusieurs types de ressources. Veuillez\\nbien lire les commentaires pour comprendre le code :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"package be.vinci;\\n\\nimport com.fasterxml.jackson.databind.JsonNode;\\nimport com.fasterxml.jackson.databind.ObjectMapper;\\nimport com.fasterxml.jackson.databind.node.ArrayNode;\\nimport com.fasterxml.jackson.databind.node.ObjectNode;\\nimport java.io.IOException;\\nimport java.nio.file.Files;\\nimport java.nio.file.Path;\\nimport java.nio.file.Paths;\\nimport java.util.List;\\n\\npublic class Json {\\n    private static final String DB_FILE_PATH = \\\"db.json\\\";\\n    private static Path pathToDb = Paths.get(DB_FILE_PATH);\\n    private static final String COLLECTION_NAME = \\\"films\\\";\\n    private final static ObjectMapper jsonMapper = new ObjectMapper();\\n\\n    public static void serialize(List<Film> films) {\\n        try {\\n            // if no DB file, write a new collection to a new db file\\n            if (!Files.exists(pathToDb)) {\\n                // Create an object and add a JSON array as POJO, e.g. { films:[...]}\\n                ObjectNode newCollection = jsonMapper.createObjectNode().putPOJO(COLLECTION_NAME, films);\\n                jsonMapper.writeValue(pathToDb.toFile(), newCollection); // write the JSON Object in the DB file\\n                return;\\n            }\\n            // get all collections : can be read as generic JsonNode, if it can be Object or Array;\\n            JsonNode allCollections = jsonMapper.readTree(pathToDb.toFile()); // e.g. { users:[...], films:[...]}\\n            // remove current collection, e.g. remove the array of films\\n            if (allCollections.has(COLLECTION_NAME)) {\\n                ((ObjectNode) allCollections).remove(COLLECTION_NAME); //e.g. it leaves { users:[...]}\\n            }\\n            // Prepare a JSON array from the list of POJOs for the collection to be updated, e.g. [{\\\"film1\\\",...}, ...]\\n            ArrayNode updatedCollection = jsonMapper.valueToTree(films);\\n            // Add the JSON array in allCollections, e.g. : { users:[...], films:[...]}\\n            ((ObjectNode) allCollections).putArray(COLLECTION_NAME).addAll(updatedCollection);\\n            // write to the db file allCollections\\n            jsonMapper.writeValue(pathToDb.toFile(), allCollections);\\n        } catch (IOException e) {\\n            e.printStackTrace();\\n        }\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"h2\", null, \"g.2) Parsing d'un fichier JSON vers une liste de POJOs\"), mdx(\"p\", null, \"Dans un 1er temps, on va cr\\xE9er un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JSON Node\"), \" sur base d\\u2019un fichier JSON et la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"readTree\"), \".\\nPuis nous pouvons utiliser un \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Reader\"), \" pour charger une liste de POJOs \\xE0 partir du \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"JSON Node\"), \".\"), mdx(\"p\", null, \"Au sein de la classe \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Json\"), \", veuillez rajouter le code de la m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"parse\"), \" permettant de\\ncharger une liste de ressources :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"public static List<Film> parse() {\\n    try {\\n        // get allCollections\\n        JsonNode node = jsonMapper.readTree(pathToDb.toFile());\\n        // accessing value of the specified field of an object node,\\n        // e.g. the JSON array within \\\"films\\\" field of { users:[...], films:[...]}\\n        JsonNode collection = node.get(COLLECTION_NAME);\\n        if (collection == null) // Send an empty list if there is not the requested collection\\n            return new ArrayList<Film>();\\n        // convert the JsonNode to a List of POJOs & return it\\n        return jsonMapper.readerForListOf(Film.class).readValue(collection);\\n    } catch (FileNotFoundException e) {\\n        return new ArrayList<Film>(); // send an empty list if there is no db file\\n    } catch (IOException e) {\\n        e.printStackTrace();\\n        return new ArrayList<Film>();\\n    }\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Il faut maintenant mettre \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" afin d'utiliser les m\\xE9thodes \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"serialize\"), \" et\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"parse\"), \" pour faire persister les ressources :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"numbered {7,20,35,38,49,55,67,75}\",\n    \"numbered\": true,\n    \"{7,20,35,38,49,55,67,75}\": true\n  }, \"@Singleton\\n@Path(\\\"films\\\")\\npublic class FilmResource {\\n@GET\\n@Produces(MediaType.APPLICATION_JSON)\\npublic List<Film> getAll(@DefaultValue(\\\"-1\\\") @QueryParam(\\\"minimum-duration\\\") int minimumDuration) {\\n    var films = Json.parse();\\n    if (minimumDuration != -1) {\\n        List<Film> filmsFiltered = films.stream().filter(film -> film.getDuration() >= minimumDuration)\\n                .toList();\\n        return filmsFiltered;\\n    }\\n    return films;\\n}\\n\\n@GET\\n@Path(\\\"/{id}\\\")\\n@Produces(MediaType.APPLICATION_JSON)\\npublic Film getOne(@PathParam(\\\"id\\\") int id) {\\n    var films = Json.parse();\\n    Film filmFound = films.stream().filter(film -> film.getId() == id).findAny().orElse(null);\\n    if (filmFound == null)\\n        throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND)\\n                .entity(\\\"Ressource not found\\\").type(\\\"text/plain\\\").build());\\n    return filmFound;\\n}\\n\\n@POST\\n@Produces(MediaType.APPLICATION_JSON)\\n@Consumes(MediaType.APPLICATION_JSON)\\npublic Film createOne(Film film) {\\n    if (film == null || film.getTitle() == null || film.getTitle().isBlank())\\n        throw new WebApplicationException(\\n                Response.status(Response.Status.BAD_REQUEST).entity(\\\"Lacks of mandatory info\\\").type(\\\"text/plain\\\").build());\\n    var films = Json.parse();\\n    film.setId(films.size() + 1);\\n    films.add(film);\\n    Json.serialize(films);\\n    return film;\\n}\\n\\n@DELETE\\n@Path(\\\"/{id}\\\")\\n@Produces(MediaType.APPLICATION_JSON)\\npublic Film deleteOne(@PathParam(\\\"id\\\") int id) {\\n    if (id == 0) // default value of an integer => has not been initialized\\n        throw new WebApplicationException(Response.status(Response.Status.BAD_REQUEST).entity(\\\"Lacks of mandatory id info\\\")\\n                .type(\\\"text/plain\\\").build());\\n    var films = Json.parse();\\n    Film filmToDelete = films.stream().filter(film -> film.getId() == id).findAny().orElse(null);\\n    if (filmToDelete == null)\\n        throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND)\\n                .entity(\\\"Ressource not found\\\").type(\\\"text/plain\\\").build());\\n    films.remove(filmToDelete);\\n    Json.serialize(films);\\n    return filmToDelete;\\n}\\n\\n@PUT\\n@Path(\\\"/{id}\\\")\\n@Produces(MediaType.APPLICATION_JSON)\\n@Consumes(MediaType.APPLICATION_JSON)\\npublic Film updateOne(Film film, @PathParam(\\\"id\\\") int id) {\\n    if (id == 0 || film == null || film.getTitle() == null || film.getTitle().isBlank())\\n        throw new WebApplicationException(\\n                Response.status(Response.Status.BAD_REQUEST).entity(\\\"Lacks of mandatory info\\\").type(\\\"text/plain\\\").build());\\n    var films = Json.parse();\\n    Film filmToUpdate = films.stream().filter(f -> f.getId() == id).findAny().orElse(null);\\n    if (filmToUpdate == null)\\n        throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND)\\n                .entity(\\\"Ressource not found\\\").type(\\\"text/plain\\\").build());\\n    film.setId(id);\\n    films.remove(film); // thanks to equals(), films is found via its id\\n    films.add(film);\\n    Json.serialize(films);\\n    return film;\\n}\\n}\\n\")), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionH\"\n  }), \"h) Gestion des caract\\xE8res dangereux\"), mdx(\"p\", null, \"Afin de se prot\\xE9ger des attaques XSS (Cross Site Scripting), il faudra \\xE9viter de renvoyer\\ndu code JavaScript qui pourrait s\\u2019ex\\xE9cuter dans le browser des clients.\"), mdx(\"p\", null, \"Pour ce faire, dans le cadre de ce cours, nous vous proposons, lors de l\\u2019enregistrement de\\ndonn\\xE9es qui pourraient \\xEAtre renvoy\\xE9es aux clients, d\\u2019\\xE9chapper les caract\\xE8res\\npotentiellement dangereux.\"), mdx(\"p\", null, \"Nous utiliserons la librairie \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commons-text\"), \" d\\u2019Apache, mettant notamment \\xE0 disposition\\nla m\\xE9thode \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"escapeHtml4\"), \". \"), mdx(\"br\", null), mdx(\"p\", null, \"Dans le cadre de votre API de gestion de films, veuillez installer la d\\xE9pendance \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"commons-text\"), \" :\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Via IntelliJ : \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cliquez au sein de votre fichier \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/pom.xml\"), \" : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Code\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Generate...\"), \", \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Dependency\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"tapez : \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"commons-text\"), \" et s\\xE9lectionner \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"org.apache.commons:commons-text\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Installez les d\\xE9pendances Maven en cliquant sur le bouton repr\\xE9sentant \\\"\", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"Load Maven Changes\"), \"\\\"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Si vous n'avez pas IntelliJ, ajoutez cela au sein de \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"/pom.xml\"), \", puis forcer l'installation des d\\xE9pendances :\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-markup\"\n  }, \"<dependency>\\n            <groupId>org.apache.commons</groupId>\\n            <artifactId>commons-text</artifactId>\\n            <version>1.9</version>\\n</dependency>\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Mettez \\xE0 jour \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"FilmResource\"), \" afin d'\\xE9chapper les caract\\xE8res dangereux lors des op\\xE9rations d'\\xE9criture :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\",\n    \"metastring\": \"{10-11,31-32}\",\n    \"{10-11,31-32}\": true\n  }, \"@POST\\n@Produces(MediaType.APPLICATION_JSON)\\n@Consumes(MediaType.APPLICATION_JSON)\\npublic Film createOne(Film film) {\\n    if (film == null || film.getTitle() == null || film.getTitle().isBlank())\\n        throw new WebApplicationException(\\n                Response.status(Response.Status.BAD_REQUEST).entity(\\\"Lacks of mandatory info\\\").type(\\\"text/plain\\\").build());\\n    var films = Json.parse();\\n    film.setId(films.size() + 1);\\n    film.setTitle(StringEscapeUtils.escapeHtml4(film.getTitle()));\\n    film.setLink(StringEscapeUtils.escapeHtml4(film.getLink()));\\n    films.add(film);\\n    Json.serialize(films);\\n    return film;\\n}\\n\\n@PUT\\n@Path(\\\"/{id}\\\")\\n@Produces(MediaType.APPLICATION_JSON)\\n@Consumes(MediaType.APPLICATION_JSON)\\npublic Film updateOne(Film film, @PathParam(\\\"id\\\") int id) {\\n    if (id == 0 || film == null || film.getTitle() == null || film.getTitle().isBlank())\\n        throw new WebApplicationException(\\n                Response.status(Response.Status.BAD_REQUEST).entity(\\\"Lacks of mandatory info\\\").type(\\\"text/plain\\\").build());\\n    var films = Json.parse();\\n    Film filmToUpdate = films.stream().filter(f -> f.getId() == id).findAny().orElse(null);\\n    if (filmToUpdate == null)\\n        throw new WebApplicationException(Response.status(Response.Status.NOT_FOUND)\\n                .entity(\\\"Ressource not found\\\").type(\\\"text/plain\\\").build());\\n    film.setId(id);\\n    film.setTitle(StringEscapeUtils.escapeHtml4(film.getTitle()));\\n    film.setLink(StringEscapeUtils.escapeHtml4(film.getLink()));\\n    films.remove(film); // thanks to equals(), films is found via its id\\n    films.add(film);\\n    Json.serialize(films);\\n    return film;\\n}\\n\")), mdx(\"br\", null), mdx(\"p\", null, \"Le manuel utilisateur de cette librairie est disponible ici : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://commons.apache.org/proper/commons-text/userguide.html\"\n  }, \"https://commons.apache.org/proper/commons-text/userguide.html\")), mdx(\"br\", null), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Code du tutoriel\"), \" : si vous souhaitez directement acc\\xE9der au code de la fin du tutoriel de\\ncr\\xE9ation d'une API de gestion de films pour ce module 1 :\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/e-vinci/baja-demos/tree/main/films-api-module1\"\n  }, \"https://github.com/e-vinci/baja-demos/tree/main/films-api-module1\")), mdx(\"br\", null), mdx(\"h1\", null, mdx(\"a\", {\n    id: \"sectionI\"\n  }), \"i) Exercice 1.1\"), mdx(\"p\", null, \"Veuillez cr\\xE9er une application JAX-RS mettant \\xE0 disposition des op\\xE9rations CRUD\\n(\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"C\"), \"reate, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"R\"), \"ead, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"U\"), \"pdate & \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"D\"), \"elete) sur des ressources de type \\xAB texte \\xE0 dactylographier \\xBB.\"), mdx(\"p\", null, \"Les ressources doivent persister au format JSON et vous devez \\xE9chapper les caract\\xE8res dangereux.\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez partir d'un archetype Maven comme d\\xE9crit au point\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/js/modules/1#sectionB\"\n  }, \"b) Creation d\\u2019une premi\\xE8re application sur base d\\u2019un Archetype Maven\"), \".\"), mdx(\"br\", null), mdx(\"p\", null, \"Un texte \\xE0 dactylographier contient comme attributs : \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"id\"), \", un entier ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"content\"), \", un contenu textuel ;\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"level\"), \", le niveau associ\\xE9 au texte. Les seules valeurs autoris\\xE9es sont :\\n\\xAB \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"easy\"), \" \\xBB, \\xAB \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"medium\"), \" \\xBB et \\xAB \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"hard\"), \" \\xBB.\")), mdx(\"br\", null), mdx(\"p\", null, \"Voici le tableau formalisant toutes les op\\xE9rations associ\\xE9es \\xE0 votre RESTful API que vous\\ndevez impl\\xE9menter :\"), mdx(\"br\", null), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"URI\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"M\\xE9thode\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"M\\xE9thode\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"texts\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ALL : Lire toutes les ressources de la collection\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"texts?level=value\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ALL FILTERED : Lire toutes les ressources de la collection selon le filtre donn\\xE9\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"texts/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"GET\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"READ ONE : Lire la ressource identifi\\xE9e\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"texts\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"POST\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"CREATE ONE : Cr\\xE9er une ressource bas\\xE9e sur les donn\\xE9es de la requ\\xEAte\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"texts/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"DELETE ONE : Effacer la ressource identifi\\xE9e\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"strong\", {\n    parentName: \"td\"\n  }, \"texts/{id}\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"PUT\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"UPDATE ONE : Remplacer l\\u2019enti\\xE8ret\\xE9 de la ressource par les donn\\xE9es de la requ\\xEAte\")))), mdx(\"br\", null), mdx(\"p\", null, \"Si lors d\\u2019une demande d\\u2019ajout ou de modification d\\u2019un texte \\xE0 dactylographier la valeur\\nde \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"level\"), \" ne correspond pas \\xE0 une valeur autoris\\xE9e, veuillez renvoyer un code d\\u2019erreur\\nainsi que le message d\\u2019erreur suivant : \\xAB Lacks of mandatory info or unauthorized text level \\xBB.\"), mdx(\"br\", null), mdx(\"p\", null, \"Veuillez tester toutes les m\\xE9thodes offertes par votre application JAX-RS \\xE0 l\\u2019aide du client HTTP\\nd'IntelliJ ou de REST Client (VS Code).\"));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"modules/1.fr","frontmatter":{"title":"Module 1 : découverte de JAX-RS","date":null,"navbarExtraStyles":"","headerImage":"","featuredImage":"","description":"Découverte de JAX-RS","autoMargin":true}},"allImages":{"edges":[{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='500'%20height='150'%20viewBox='0%200%20500%20150'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M123%2025l-16%2017-1-9-1-10-37%2039-36%2041%2039%2010%2040%2010%203-3c13-12%2024-35%2028-57%203-14%201-54-2-56l-17%2018m47%2058l-1%2018v17l-3%202c-3%202-7%203-9%200-2-1-2-1-4%201-7%204%207%2011%2015%207%207-4%207-5%208-27V82h-3l-3%201m27%202c-3%205-16%2043-16%2043l3%201c4%200%204%200%206-5l2-5h17l2%205c2%204%202%205%205%205%204%200%204%200%204-2a2053%202053%200%2000-19-45c-3%200-3%200-4%203m28%2021v23h7v-7c0-7%200-8%204-11l4-4%207%2011%206%2011h15l2-6%202-5h9l8%201%202%205c2%205%202%205%206%205l3-1a519%20519%200%2000-19-46c-3%200-2-2-13%2028l-7%2018c-1%200-16-27-15-28l7-9c7-9%207-9%202-9-3%200-4%201-13%2012l-9%2012-1-12V82h-7v24m81%200v23h7v-20h9l4%2010%205%2010h4c5%200%205%201-1-11l-5-9%203-3c5-4%206-9%205-14-2-8-7-10-23-10h-8v24m33-20v3h13v40h7V89h12v-7h-32v4m44-1l-16%2044h4c3%200%203-1%205-5l2-5h17l2%205c2%204%202%205%205%205l4-1a698%20698%200%2000-19-46c-2%200-3%200-4%203m44%2021v23h29v-7h-22v-13h19v-7h-19V89h22v-7h-29v24m36%200v23h29v-7h-22v-13h19v-7h-19V89h22v-7h-29v24M313%2096v7h7c10-1%2014-6%209-12-1-2-2-2-9-2h-7v7m-113-2l-6%2017%207%201%206-1a691%20691%200%2001-7-17m77%209l-3%209h7l6-1-6-17-4%209m106-2l-3%2010%207%201%206-1a691%20691%200%2001-6-18l-4%208M8%20100l6%205c8%204%2020%2016%2027%2026l6%208%203-2c12-8%2027-12%2043-12l10-1a1433%201433%200%2000-95-24'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/js/static/c55d0def10b42157d9b6236bf3d72afb/cdc33/jakarta-logo.png","srcSet":"/js/static/c55d0def10b42157d9b6236bf3d72afb/cdc33/jakarta-logo.png 500w","sizes":"100vw"},"sources":[{"srcSet":"/js/static/c55d0def10b42157d9b6236bf3d72afb/ecd43/jakarta-logo.webp 500w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.3}},"base":"jakarta-logo.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='512'%20height='512'%20viewBox='0%200%20512%20512'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M227%202a256%20256%200%201059%20509A256%20256%200%2000227%202m7%2054c-82%209-150%2068-172%20147l-2%208%20120%20121c116%20116%20121%20120%20124%20119%2021-4%2052-19%2074-35%2047-35%2079-98%2079-154v-6H329v36h44l43%201a167%20167%200%2001-97%20115l-8%203-105-105-105-105%203-8a165%20165%200%2001287-32l27-23a202%20202%200%2000-184-82M56%20267a200%20200%200%2000196%20189L56%20260v7'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/js/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png","srcSet":"/js/static/53aa06cf17e4239d0dba6ffd09854e02/0cbce/icon.png 512w","sizes":"100vw"},"sources":[{"srcSet":"/js/static/53aa06cf17e4239d0dba6ffd09854e02/cc23f/icon.webp 512w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":1}},"base":"icon.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='544'%20height='492'%20viewBox='0%200%20544%20492'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M146%207c-31%208-51%2035-50%2068%201%2015%203%2020%2023%2056a3456%203456%200%200090%20151%2053177%2053177%200%200182%20145c16%2029%2018%2031%2026%2039a66%2066%200%2000113-47c0-19-1-20-33-75l-28-49h52c56%200%2064%200%2075-4a67%2067%200%2000-2-127l-8-2-39-1h-39l17-30c22-38%2023-41%2023-59%200-13%200-15-2-22a66%2066%200%2000-110-25c-8%208-9%2010-35%2055l-28%2048-28-47c-27-46-28-48-36-56a64%2064%200%2000-63-18'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/js/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png","srcSet":"/js/static/309e0fb8b4416829acfed4f7a501206b/98149/logo_vinci.png 544w","sizes":"100vw"},"sources":[{"srcSet":"/js/static/309e0fb8b4416829acfed4f7a501206b/5eade/logo_vinci.webp 544w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.9044117647058824}},"base":"logo_vinci.png"}},{"node":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","placeholder":{"fallback":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='686'%20height='419'%20viewBox='0%200%20686%20419'%20preserveAspectRatio='none'%3e%3crect%20width='100%25'%20height='100%25'%20fill='gray'/%3e%3cpath%20d='M196%2023v21h85V1h-85v22m42%2026v4H81v10l1-5v-4h104v4l1%205v-9h103v4l1%204%201-4v-3l51-1h52v4l1%204%201-4v-4l-79-1h-78v-4l-1-4-1%204M38%2084v21h86V63H38v21m105%200v21h86V63h-86v21m105%200v21h86V63h-86v21m105%200v21h86V63h-86v21m0%2062v21h86v-43h-86v22m42%2026v4H186v10l1-5v-4h104v4l1%205v-9h52l52%201v4l1%204v-9h103v4l1%205v-9h104v4l1%205v-10H397v-4l-1-4-1%204m-252%2035v21h86v-42h-86v21m105%200v21h86v-42h-86v21m105%200v21h86v-42h-86v21m105%200v21h86v-42h-86v21m105%200v21h86v-42h-86v21M151%20310v82h14l-7-1h-6v-60h6l7-1h-13v-61h6l7-1h-13v-20l-1%2062m105%200v82h14l-7-1h-6v-60h6l7-1h-13v-61h6l7-1h-13v-20l-1%2062m-91-41v21h86v-42h-86v21m105%200v21h86v-42h-86v21m-105%2062v21h86v-43h-86v22m105%200v21h86v-43h-86v22m-105%2061v21h86v-42h-86v21m105%200v21h86v-42h-86v21'%20fill='green'%20fill-rule='evenodd'/%3e%3c/svg%3e"},"images":{"fallback":{"src":"/js/static/a9d7114ba2764dabfc41a67a6635c992/cd97c/backends.jpg","srcSet":"/js/static/a9d7114ba2764dabfc41a67a6635c992/cd97c/backends.jpg 686w","sizes":"100vw"},"sources":[{"srcSet":"/js/static/a9d7114ba2764dabfc41a67a6635c992/86e9b/backends.webp 686w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.6107871720116618}},"base":"backends.jpg"}}]}},"pageContext":{"slug":"/modules/1/"}},"staticQueryHashes":["1696221415","2644139645","3028011774","3458129946","501654901","575455071"]}